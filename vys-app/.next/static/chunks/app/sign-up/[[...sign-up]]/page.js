/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/sign-up/[[...sign-up]]/page"],{

/***/ "(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-QSYHOU7X.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@clerk/elements/dist/chunk-QSYHOU7X.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkHostRouterContext: () => (/* reexport safe */ _clerk_shared_router__WEBPACK_IMPORTED_MODULE_4__.ClerkHostRouterContext),\n/* harmony export */   Router: () => (/* reexport safe */ _clerk_shared_router__WEBPACK_IMPORTED_MODULE_4__.Router),\n/* harmony export */   useClerkRouter: () => (/* reexport safe */ _clerk_shared_router__WEBPACK_IMPORTED_MODULE_4__.useClerkRouter),\n/* harmony export */   useNextRouter: () => (/* binding */ useNextRouter),\n/* harmony export */   useVirtualRouter: () => (/* binding */ useVirtualRouter)\n/* harmony export */ });\n/* harmony import */ var _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-VY37G23G.mjs */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-VY37G23G.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var next_compat_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/compat/router */ \"(app-pages-browser)/./node_modules/next/compat/router.js\");\n/* harmony import */ var _clerk_shared_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/router */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs\");\n\n\n// src/react/router/virtual.ts\n\nvar DUMMY_ORIGIN = \"https://clerk.dummy\";\nvar _url, _listeners;\nvar VirtualRouter = class {\n  constructor(path) {\n    this.name = \"VirtualRouter\";\n    this.mode = \"virtual\";\n    (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _url);\n    (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _listeners, /* @__PURE__ */ new Set());\n    const origin = typeof window === \"undefined\" ? DUMMY_ORIGIN : window.location.origin;\n    (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _url, new URL(path != null ? path : \"/\", origin));\n  }\n  push(path) {\n    const newUrl = new URL((0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).toString());\n    newUrl.pathname = path;\n    (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _url, newUrl);\n    this.emit();\n  }\n  replace(path) {\n    this.push(path);\n  }\n  shallowPush(path) {\n    this.push(path);\n  }\n  pathname() {\n    return (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).pathname;\n  }\n  searchParams() {\n    return (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).searchParams;\n  }\n  subscribe(listener) {\n    (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).add(listener);\n    return () => (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).delete(listener);\n  }\n  emit() {\n    (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).forEach((listener) => listener((0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url)));\n  }\n  getSnapshot() {\n    return (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url);\n  }\n};\n_url = new WeakMap();\n_listeners = new WeakMap();\nvar virtualRouter = new VirtualRouter(\"/\");\nvar useVirtualRouter = () => {\n  const url = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(\n    virtualRouter.subscribe.bind(virtualRouter),\n    virtualRouter.getSnapshot.bind(virtualRouter)\n  );\n  return {\n    mode: virtualRouter.mode,\n    name: virtualRouter.name,\n    pathname: () => url.pathname,\n    push: virtualRouter.push.bind(virtualRouter),\n    replace: virtualRouter.replace.bind(virtualRouter),\n    searchParams: () => url.searchParams,\n    shallowPush: virtualRouter.shallowPush.bind(virtualRouter)\n  };\n};\n\n// src/react/router/next.ts\n\n\n// src/react/utils/path-inference/next.tsx\n\n\n\n\n// src/react/utils/path-inference/utils.ts\nfunction removeOptionalCatchAllSegment(pathname) {\n  return pathname.replace(/\\/\\[\\[\\.\\.\\..*/, \"\");\n}\n\n// src/react/utils/path-inference/next.tsx\nvar usePathnameWithoutCatchAll = () => {\n  const pathRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  const pagesRouter = (0,next_compat_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n  if (pagesRouter) {\n    if (pathRef.current) {\n      return pathRef.current;\n    } else {\n      pathRef.current = removeOptionalCatchAllSegment(pagesRouter.pathname);\n      return pathRef.current;\n    }\n  }\n  const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)() || \"\";\n  const pathParts = pathname.split(\"/\").filter(Boolean);\n  const catchAllParams = Object.values((0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useParams)() || {}).filter((v) => Array.isArray(v)).flat(Infinity);\n  if (pathRef.current) {\n    return pathRef.current;\n  } else {\n    pathRef.current = `/${pathParts.slice(0, pathParts.length - catchAllParams.length).join(\"/\")}`;\n    return pathRef.current;\n  }\n};\n\n// src/react/router/next.ts\nvar useNextRouter = () => {\n  const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n  const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)();\n  const searchParams = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useSearchParams)();\n  const inferredBasePath = usePathnameWithoutCatchAll();\n  const canUseWindowHistoryAPIs = typeof window !== \"undefined\" && window.next && window.next.version >= _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_1__.NEXT_WINDOW_HISTORY_SUPPORT_VERSION;\n  return {\n    mode: \"path\",\n    name: \"NextRouter\",\n    push: (path) => router.push(path),\n    replace: (path) => canUseWindowHistoryAPIs ? window.history.replaceState(null, \"\", path) : router.replace(path),\n    shallowPush: (path) => canUseWindowHistoryAPIs ? window.history.pushState(null, \"\", path) : router.push(path, {}),\n    pathname: () => pathname,\n    searchParams: () => searchParams,\n    inferredBasePath: () => inferredBasePath\n  };\n};\n\n// src/react/router/index.ts\n\n\n\n//# sourceMappingURL=chunk-QSYHOU7X.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvZWxlbWVudHMvZGlzdC9jaHVuay1RU1lIT1U3WC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUs4Qjs7QUFFOUI7QUFDNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxpRUFBWTtBQUNoQixJQUFJLGlFQUFZO0FBQ2hCO0FBQ0EsSUFBSSxpRUFBWTtBQUNoQjtBQUNBO0FBQ0EsMkJBQTJCLGlFQUFZO0FBQ3ZDO0FBQ0EsSUFBSSxpRUFBWTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlFQUFZO0FBQ3ZCO0FBQ0E7QUFDQSxXQUFXLGlFQUFZO0FBQ3ZCO0FBQ0E7QUFDQSxJQUFJLGlFQUFZO0FBQ2hCLGlCQUFpQixpRUFBWTtBQUM3QjtBQUNBO0FBQ0EsSUFBSSxpRUFBWSxrREFBa0QsaUVBQVk7QUFDOUU7QUFDQTtBQUNBLFdBQVcsaUVBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBb0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDd0c7O0FBRXhHO0FBQytDO0FBQ1U7QUFDL0I7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQVk7QUFDOUIsc0JBQXNCLDZEQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw0REFBVztBQUM5QjtBQUNBLHVDQUF1QywwREFBUyxRQUFRO0FBQ3hEO0FBQ0E7QUFDQSxJQUFJO0FBQ0osMEJBQTBCLHVFQUF1RTtBQUNqRztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQiwwREFBVTtBQUMzQixtQkFBbUIsNERBQVk7QUFDL0IsdUJBQXVCLGdFQUFlO0FBQ3RDO0FBQ0EseUdBQXlHLG9GQUFtQztBQUM1STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0hBQW9IO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDNkY7O0FBUTNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9lbGVtZW50cy9kaXN0L2NodW5rLVFTWUhPVTdYLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBORVhUX1dJTkRPV19ISVNUT1JZX1NVUFBPUlRfVkVSU0lPTixcbiAgX19wcml2YXRlQWRkLFxuICBfX3ByaXZhdGVHZXQsXG4gIF9fcHJpdmF0ZVNldFxufSBmcm9tIFwiLi9jaHVuay1WWTM3RzIzRy5tanNcIjtcblxuLy8gc3JjL3JlYWN0L3JvdXRlci92aXJ0dWFsLnRzXG5pbXBvcnQgeyB1c2VTeW5jRXh0ZXJuYWxTdG9yZSB9IGZyb20gXCJyZWFjdFwiO1xudmFyIERVTU1ZX09SSUdJTiA9IFwiaHR0cHM6Ly9jbGVyay5kdW1teVwiO1xudmFyIF91cmwsIF9saXN0ZW5lcnM7XG52YXIgVmlydHVhbFJvdXRlciA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IocGF0aCkge1xuICAgIHRoaXMubmFtZSA9IFwiVmlydHVhbFJvdXRlclwiO1xuICAgIHRoaXMubW9kZSA9IFwidmlydHVhbFwiO1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfdXJsKTtcbiAgICBfX3ByaXZhdGVBZGQodGhpcywgX2xpc3RlbmVycywgLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSk7XG4gICAgY29uc3Qgb3JpZ2luID0gdHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIiA/IERVTU1ZX09SSUdJTiA6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW47XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF91cmwsIG5ldyBVUkwocGF0aCAhPSBudWxsID8gcGF0aCA6IFwiL1wiLCBvcmlnaW4pKTtcbiAgfVxuICBwdXNoKHBhdGgpIHtcbiAgICBjb25zdCBuZXdVcmwgPSBuZXcgVVJMKF9fcHJpdmF0ZUdldCh0aGlzLCBfdXJsKS50b1N0cmluZygpKTtcbiAgICBuZXdVcmwucGF0aG5hbWUgPSBwYXRoO1xuICAgIF9fcHJpdmF0ZVNldCh0aGlzLCBfdXJsLCBuZXdVcmwpO1xuICAgIHRoaXMuZW1pdCgpO1xuICB9XG4gIHJlcGxhY2UocGF0aCkge1xuICAgIHRoaXMucHVzaChwYXRoKTtcbiAgfVxuICBzaGFsbG93UHVzaChwYXRoKSB7XG4gICAgdGhpcy5wdXNoKHBhdGgpO1xuICB9XG4gIHBhdGhuYW1lKCkge1xuICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgX3VybCkucGF0aG5hbWU7XG4gIH1cbiAgc2VhcmNoUGFyYW1zKCkge1xuICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgX3VybCkuc2VhcmNoUGFyYW1zO1xuICB9XG4gIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfbGlzdGVuZXJzKS5hZGQobGlzdGVuZXIpO1xuICAgIHJldHVybiAoKSA9PiBfX3ByaXZhdGVHZXQodGhpcywgX2xpc3RlbmVycykuZGVsZXRlKGxpc3RlbmVyKTtcbiAgfVxuICBlbWl0KCkge1xuICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfbGlzdGVuZXJzKS5mb3JFYWNoKChsaXN0ZW5lcikgPT4gbGlzdGVuZXIoX19wcml2YXRlR2V0KHRoaXMsIF91cmwpKSk7XG4gIH1cbiAgZ2V0U25hcHNob3QoKSB7XG4gICAgcmV0dXJuIF9fcHJpdmF0ZUdldCh0aGlzLCBfdXJsKTtcbiAgfVxufTtcbl91cmwgPSBuZXcgV2Vha01hcCgpO1xuX2xpc3RlbmVycyA9IG5ldyBXZWFrTWFwKCk7XG52YXIgdmlydHVhbFJvdXRlciA9IG5ldyBWaXJ0dWFsUm91dGVyKFwiL1wiKTtcbnZhciB1c2VWaXJ0dWFsUm91dGVyID0gKCkgPT4ge1xuICBjb25zdCB1cmwgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShcbiAgICB2aXJ0dWFsUm91dGVyLnN1YnNjcmliZS5iaW5kKHZpcnR1YWxSb3V0ZXIpLFxuICAgIHZpcnR1YWxSb3V0ZXIuZ2V0U25hcHNob3QuYmluZCh2aXJ0dWFsUm91dGVyKVxuICApO1xuICByZXR1cm4ge1xuICAgIG1vZGU6IHZpcnR1YWxSb3V0ZXIubW9kZSxcbiAgICBuYW1lOiB2aXJ0dWFsUm91dGVyLm5hbWUsXG4gICAgcGF0aG5hbWU6ICgpID0+IHVybC5wYXRobmFtZSxcbiAgICBwdXNoOiB2aXJ0dWFsUm91dGVyLnB1c2guYmluZCh2aXJ0dWFsUm91dGVyKSxcbiAgICByZXBsYWNlOiB2aXJ0dWFsUm91dGVyLnJlcGxhY2UuYmluZCh2aXJ0dWFsUm91dGVyKSxcbiAgICBzZWFyY2hQYXJhbXM6ICgpID0+IHVybC5zZWFyY2hQYXJhbXMsXG4gICAgc2hhbGxvd1B1c2g6IHZpcnR1YWxSb3V0ZXIuc2hhbGxvd1B1c2guYmluZCh2aXJ0dWFsUm91dGVyKVxuICB9O1xufTtcblxuLy8gc3JjL3JlYWN0L3JvdXRlci9uZXh0LnRzXG5pbXBvcnQgeyB1c2VQYXRobmFtZSBhcyB1c2VQYXRobmFtZTIsIHVzZVJvdXRlciBhcyB1c2VSb3V0ZXIyLCB1c2VTZWFyY2hQYXJhbXMgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XG5cbi8vIHNyYy9yZWFjdC91dGlscy9wYXRoLWluZmVyZW5jZS9uZXh0LnRzeFxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvY29tcGF0L3JvdXRlclwiO1xuaW1wb3J0IHsgdXNlUGFyYW1zLCB1c2VQYXRobmFtZSB9IGZyb20gXCJuZXh0L25hdmlnYXRpb25cIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuLy8gc3JjL3JlYWN0L3V0aWxzL3BhdGgtaW5mZXJlbmNlL3V0aWxzLnRzXG5mdW5jdGlvbiByZW1vdmVPcHRpb25hbENhdGNoQWxsU2VnbWVudChwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUucmVwbGFjZSgvXFwvXFxbXFxbXFwuXFwuXFwuLiovLCBcIlwiKTtcbn1cblxuLy8gc3JjL3JlYWN0L3V0aWxzL3BhdGgtaW5mZXJlbmNlL25leHQudHN4XG52YXIgdXNlUGF0aG5hbWVXaXRob3V0Q2F0Y2hBbGwgPSAoKSA9PiB7XG4gIGNvbnN0IHBhdGhSZWYgPSBSZWFjdC51c2VSZWYoKTtcbiAgY29uc3QgcGFnZXNSb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgaWYgKHBhZ2VzUm91dGVyKSB7XG4gICAgaWYgKHBhdGhSZWYuY3VycmVudCkge1xuICAgICAgcmV0dXJuIHBhdGhSZWYuY3VycmVudDtcbiAgICB9IGVsc2Uge1xuICAgICAgcGF0aFJlZi5jdXJyZW50ID0gcmVtb3ZlT3B0aW9uYWxDYXRjaEFsbFNlZ21lbnQocGFnZXNSb3V0ZXIucGF0aG5hbWUpO1xuICAgICAgcmV0dXJuIHBhdGhSZWYuY3VycmVudDtcbiAgICB9XG4gIH1cbiAgY29uc3QgcGF0aG5hbWUgPSB1c2VQYXRobmFtZSgpIHx8IFwiXCI7XG4gIGNvbnN0IHBhdGhQYXJ0cyA9IHBhdGhuYW1lLnNwbGl0KFwiL1wiKS5maWx0ZXIoQm9vbGVhbik7XG4gIGNvbnN0IGNhdGNoQWxsUGFyYW1zID0gT2JqZWN0LnZhbHVlcyh1c2VQYXJhbXMoKSB8fCB7fSkuZmlsdGVyKCh2KSA9PiBBcnJheS5pc0FycmF5KHYpKS5mbGF0KEluZmluaXR5KTtcbiAgaWYgKHBhdGhSZWYuY3VycmVudCkge1xuICAgIHJldHVybiBwYXRoUmVmLmN1cnJlbnQ7XG4gIH0gZWxzZSB7XG4gICAgcGF0aFJlZi5jdXJyZW50ID0gYC8ke3BhdGhQYXJ0cy5zbGljZSgwLCBwYXRoUGFydHMubGVuZ3RoIC0gY2F0Y2hBbGxQYXJhbXMubGVuZ3RoKS5qb2luKFwiL1wiKX1gO1xuICAgIHJldHVybiBwYXRoUmVmLmN1cnJlbnQ7XG4gIH1cbn07XG5cbi8vIHNyYy9yZWFjdC9yb3V0ZXIvbmV4dC50c1xudmFyIHVzZU5leHRSb3V0ZXIgPSAoKSA9PiB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcjIoKTtcbiAgY29uc3QgcGF0aG5hbWUgPSB1c2VQYXRobmFtZTIoKTtcbiAgY29uc3Qgc2VhcmNoUGFyYW1zID0gdXNlU2VhcmNoUGFyYW1zKCk7XG4gIGNvbnN0IGluZmVycmVkQmFzZVBhdGggPSB1c2VQYXRobmFtZVdpdGhvdXRDYXRjaEFsbCgpO1xuICBjb25zdCBjYW5Vc2VXaW5kb3dIaXN0b3J5QVBJcyA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Lm5leHQgJiYgd2luZG93Lm5leHQudmVyc2lvbiA+PSBORVhUX1dJTkRPV19ISVNUT1JZX1NVUFBPUlRfVkVSU0lPTjtcbiAgcmV0dXJuIHtcbiAgICBtb2RlOiBcInBhdGhcIixcbiAgICBuYW1lOiBcIk5leHRSb3V0ZXJcIixcbiAgICBwdXNoOiAocGF0aCkgPT4gcm91dGVyLnB1c2gocGF0aCksXG4gICAgcmVwbGFjZTogKHBhdGgpID0+IGNhblVzZVdpbmRvd0hpc3RvcnlBUElzID8gd2luZG93Lmhpc3RvcnkucmVwbGFjZVN0YXRlKG51bGwsIFwiXCIsIHBhdGgpIDogcm91dGVyLnJlcGxhY2UocGF0aCksXG4gICAgc2hhbGxvd1B1c2g6IChwYXRoKSA9PiBjYW5Vc2VXaW5kb3dIaXN0b3J5QVBJcyA/IHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShudWxsLCBcIlwiLCBwYXRoKSA6IHJvdXRlci5wdXNoKHBhdGgsIHt9KSxcbiAgICBwYXRobmFtZTogKCkgPT4gcGF0aG5hbWUsXG4gICAgc2VhcmNoUGFyYW1zOiAoKSA9PiBzZWFyY2hQYXJhbXMsXG4gICAgaW5mZXJyZWRCYXNlUGF0aDogKCkgPT4gaW5mZXJyZWRCYXNlUGF0aFxuICB9O1xufTtcblxuLy8gc3JjL3JlYWN0L3JvdXRlci9pbmRleC50c1xuaW1wb3J0IHsgUm91dGUsIFJvdXRlciwgdXNlQ2xlcmtSb3V0ZXIsIENsZXJrSG9zdFJvdXRlckNvbnRleHQgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9yb3V0ZXJcIjtcblxuZXhwb3J0IHtcbiAgdXNlVmlydHVhbFJvdXRlcixcbiAgdXNlTmV4dFJvdXRlcixcbiAgUm91dGVyLFxuICB1c2VDbGVya1JvdXRlcixcbiAgQ2xlcmtIb3N0Um91dGVyQ29udGV4dFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVFTWUhPVTdYLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-QSYHOU7X.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-VY37G23G.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@clerk/elements/dist/chunk-VY37G23G.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CAPTCHA_ELEMENT_ID: () => (/* binding */ CAPTCHA_ELEMENT_ID),\n/* harmony export */   ClerkElementsError: () => (/* binding */ ClerkElementsError),\n/* harmony export */   ClerkElementsRuntimeError: () => (/* binding */ ClerkElementsRuntimeError),\n/* harmony export */   Connection: () => (/* binding */ Connection),\n/* harmony export */   ERROR_CODES: () => (/* binding */ ERROR_CODES),\n/* harmony export */   Field: () => (/* binding */ Field),\n/* harmony export */   FieldError: () => (/* binding */ FieldError),\n/* harmony export */   FieldState: () => (/* binding */ FieldState),\n/* harmony export */   Form: () => (/* binding */ Form),\n/* harmony export */   FormStoreProvider: () => (/* binding */ FormStoreProvider),\n/* harmony export */   GlobalError: () => (/* binding */ GlobalError),\n/* harmony export */   Icon: () => (/* binding */ Icon),\n/* harmony export */   Input: () => (/* binding */ Input),\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   Link: () => (/* binding */ Link),\n/* harmony export */   Loading: () => (/* binding */ Loading),\n/* harmony export */   MAGIC_LINK_VERIFY_PATH_ROUTE: () => (/* binding */ MAGIC_LINK_VERIFY_PATH_ROUTE),\n/* harmony export */   NEXT_WINDOW_HISTORY_SUPPORT_VERSION: () => (/* binding */ NEXT_WINDOW_HISTORY_SUPPORT_VERSION),\n/* harmony export */   RESENDABLE_COUNTDOWN_DEFAULT: () => (/* binding */ RESENDABLE_COUNTDOWN_DEFAULT),\n/* harmony export */   ROUTING: () => (/* binding */ ROUTING),\n/* harmony export */   SEARCH_PARAMS: () => (/* binding */ SEARCH_PARAMS),\n/* harmony export */   SIGN_IN_DEFAULT_BASE_PATH: () => (/* binding */ SIGN_IN_DEFAULT_BASE_PATH),\n/* harmony export */   SIGN_UP_DEFAULT_BASE_PATH: () => (/* binding */ SIGN_UP_DEFAULT_BASE_PATH),\n/* harmony export */   SIGN_UP_MODES: () => (/* binding */ SIGN_UP_MODES),\n/* harmony export */   SSO_CALLBACK_PATH_ROUTE: () => (/* binding */ SSO_CALLBACK_PATH_ROUTE),\n/* harmony export */   SignInFirstFactor: () => (/* binding */ SignInFirstFactor),\n/* harmony export */   SignInFirstFactorCtx: () => (/* binding */ SignInFirstFactorCtx),\n/* harmony export */   SignInRouterCtx: () => (/* binding */ SignInRouterCtx),\n/* harmony export */   SignInRouterMachine: () => (/* binding */ SignInRouterMachine),\n/* harmony export */   SignInSafeIdentifierSelectorForStrategy: () => (/* binding */ SignInSafeIdentifierSelectorForStrategy),\n/* harmony export */   SignInSalutationSelector: () => (/* binding */ SignInSalutationSelector),\n/* harmony export */   SignInSecondFactor: () => (/* binding */ SignInSecondFactor),\n/* harmony export */   SignInSecondFactorCtx: () => (/* binding */ SignInSecondFactorCtx),\n/* harmony export */   SignInSessionList: () => (/* binding */ SignInSessionList),\n/* harmony export */   SignInSessionListItem: () => (/* binding */ SignInSessionListItem),\n/* harmony export */   SignInStep: () => (/* binding */ SignInStep),\n/* harmony export */   SignInStrategy: () => (/* binding */ SignInStrategy),\n/* harmony export */   SignInSupportedStrategy: () => (/* binding */ SignInSupportedStrategy),\n/* harmony export */   SignUpRouterCtx: () => (/* binding */ SignUpRouterCtx),\n/* harmony export */   SignUpStartCtx: () => (/* binding */ SignUpStartCtx),\n/* harmony export */   SignUpStep: () => (/* binding */ SignUpStep),\n/* harmony export */   SignUpStrategy: () => (/* binding */ SignUpStrategy),\n/* harmony export */   SignUpVerificationCtx: () => (/* binding */ SignUpVerificationCtx),\n/* harmony export */   Submit: () => (/* binding */ Submit),\n/* harmony export */   ThirdPartyMachine: () => (/* binding */ ThirdPartyMachine),\n/* harmony export */   ThirdPartyMachineId: () => (/* binding */ ThirdPartyMachineId),\n/* harmony export */   __privateAdd: () => (/* binding */ __privateAdd),\n/* harmony export */   __privateGet: () => (/* binding */ __privateGet),\n/* harmony export */   __privateSet: () => (/* binding */ __privateSet),\n/* harmony export */   assertActorEventError: () => (/* binding */ assertActorEventError),\n/* harmony export */   inspect: () => (/* binding */ inspect),\n/* harmony export */   sendToLoading: () => (/* binding */ sendToLoading),\n/* harmony export */   shouldUseVirtualRouting: () => (/* binding */ shouldUseVirtualRouting),\n/* harmony export */   useActiveTags: () => (/* binding */ useActiveTags),\n/* harmony export */   useFormStore: () => (/* binding */ useFormStore),\n/* harmony export */   useSignInActiveSessionContext: () => (/* binding */ useSignInActiveSessionContext),\n/* harmony export */   useSignInStrategy: () => (/* binding */ useSignInStrategy)\n/* harmony export */ });\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-form */ \"(app-pages-browser)/./node_modules/@radix-ui/react-form/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _xstate_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @xstate/react */ \"(app-pages-browser)/./node_modules/@xstate/react/dist/xstate-react.development.esm.js\");\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/error */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var _clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/underscore */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/underscore.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/log-5a7b5528.development.esm.js\");\n/* harmony import */ var _clerk_shared_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/shared/react */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs\");\n/* harmony import */ var _clerk_shared_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared/utils */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/utils/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @clerk/shared/logger */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/logger.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var _clerk_shared_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @clerk/shared/constants */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/constants.mjs\");\n/* harmony import */ var _clerk_shared_oauth__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @clerk/shared/oauth */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/oauth.mjs\");\n/* harmony import */ var _clerk_shared_web3__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @clerk/shared/web3 */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/web3.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @clerk/shared/webauthn */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/webauthn.mjs\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @clerk/shared/url */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-59549771.development.esm.js\");\n/* harmony import */ var _clerk_shared_router__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @clerk/shared/router */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\n\n// src/react/common/index.ts\n\n\n// src/react/common/form/field.tsx\n\n\n\n// src/internals/machines/form/form.context.ts\n\n\n// src/internals/machines/form/form.machine.ts\n\n\n\n\n// src/internals/errors/index.ts\nvar ClerkElementsErrorBase = class extends Error {\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n    this.clerkError = true;\n    this.clerkElementsError = true;\n    this.name = \"ClerkElementsError\";\n    this.rawMessage = message;\n  }\n  toString() {\n    return `[${this.name}]\nCode: ${this.code}\nMessage: ${this.message}`;\n  }\n};\nvar ClerkElementsError = class _ClerkElementsError extends ClerkElementsErrorBase {\n  static fromAPIError(error) {\n    return new _ClerkElementsError(\n      error.code.toString(),\n      // @ts-expect-error - Expected that longMessage isn't a property of MetamaskError\n      error.longMessage || error.message\n    );\n  }\n  constructor(code, message) {\n    super(code, message);\n    this.name = \"ClerkElementsError\";\n  }\n};\nvar ClerkElementsRuntimeError = class extends ClerkElementsErrorBase {\n  constructor(message) {\n    super(\"elements_runtime_error\", message);\n    this.name = \"ClerkElementsRuntimeError\";\n  }\n};\nvar ClerkElementsFieldError = class _ClerkElementsFieldError extends ClerkElementsErrorBase {\n  constructor(code, message) {\n    super(code, message);\n    this.matchFn = () => true;\n    this.name = \"ClerkElementsFieldError\";\n  }\n  static fromAPIError(error) {\n    return new _ClerkElementsFieldError(error.code, error.longMessage || error.message);\n  }\n  get validityState() {\n    return this.code;\n  }\n  get forceMatch() {\n    return true;\n  }\n};\n\n// src/internals/machines/form/form.machine.ts\nvar FormMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actions: {\n    setGlobalErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      errors: (_, params) => [...params.errors]\n    }),\n    setFieldFeedback: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fields: ({ context }, params) => {\n        if (!params.name) {\n          throw new Error(\"Field name is required\");\n        }\n        const fieldName = params.name;\n        if (context.fields.has(fieldName)) {\n          context.fields.get(fieldName).feedback = params.feedback;\n        }\n        return context.fields;\n      }\n    })\n  },\n  types: {}\n}).createMachine({\n  id: \"Form\",\n  context: () => ({\n    defaultValues: /* @__PURE__ */ new Map(),\n    errors: [],\n    fields: /* @__PURE__ */ new Map(),\n    progressive: false\n  }),\n  on: {\n    \"ERRORS.SET\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, event }) => {\n        var _a, _b, _c;\n        const isClerkAPIError = (err) => \"meta\" in err;\n        if ((0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isKnownError)(event.error)) {\n          const fields = {};\n          const globalErrors = [];\n          const errors = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isClerkAPIResponseError)(event.error) ? (_a = event.error) == null ? void 0 : _a.errors : [event.error];\n          for (const error of errors) {\n            const name = isClerkAPIError(error) ? (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.snakeToCamel)((_b = error.meta) == null ? void 0 : _b.paramName) : null;\n            if (!name || (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isMetamaskError)(error)) {\n              globalErrors.push(ClerkElementsError.fromAPIError(error));\n              continue;\n            }\n            if (!fields[name]) {\n              fields[name] = [];\n            }\n            (_c = fields[name]) == null ? void 0 : _c.push(ClerkElementsFieldError.fromAPIError(error));\n          }\n          enqueue({\n            type: \"setGlobalErrors\",\n            params: {\n              errors: globalErrors\n            }\n          });\n          for (const field in fields) {\n            enqueue({\n              type: \"setFieldFeedback\",\n              params: {\n                name: field,\n                feedback: {\n                  type: \"error\",\n                  message: fields[field][0]\n                }\n              }\n            });\n          }\n        }\n      })\n    },\n    \"ERRORS.CLEAR\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        errors: () => []\n      })\n    },\n    \"FIELD.ADD\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          event.field.value = event.field.value || context.defaultValues.get(event.field.name) || void 0;\n          context.fields.set(event.field.name, event.field);\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.UPDATE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          var _a;\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.checked = event.field.checked;\n            field.disabled = (_a = event.field.disabled) != null ? _a : field.disabled;\n            field.value = event.field.value;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.DISABLE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.disabled = true;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.ENABLE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.disabled = false;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.REMOVE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          context.fields.delete(event.field.name);\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.FEEDBACK.SET\": {\n      actions: [\n        {\n          type: \"setFieldFeedback\",\n          params: ({ event }) => event.field\n        }\n      ]\n    },\n    \"FIELD.FEEDBACK.CLEAR\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          if (context.fields.has(event.field.name)) {\n            context.fields.get(event.field.name).feedback = void 0;\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.FEEDBACK.CLEAR.ALL\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context }) => {\n          context.fields.forEach((field) => {\n            field.feedback = void 0;\n          });\n          return context.fields;\n        }\n      })\n    },\n    MARK_AS_PROGRESSIVE: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => {\n        const missing = new Set(event.missing);\n        return {\n          defaultValues: event.defaultValues,\n          hidden: /* @__PURE__ */ new Set([...event.required.filter((f) => !missing.has(f)), ...event.optional]),\n          missing,\n          optional: new Set(event.optional),\n          progressive: true,\n          required: new Set(event.required)\n        };\n      })\n    },\n    UNMARK_AS_PROGRESSIVE: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        defaultValues: /* @__PURE__ */ new Map(),\n        hidden: void 0,\n        missing: void 0,\n        optional: void 0,\n        progressive: false,\n        required: void 0\n      })\n    },\n    PREFILL_DEFAULT_VALUES: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => {\n        return {\n          defaultValues: event.defaultValues\n        };\n      })\n    }\n  }\n});\n\n// src/utils/safe-access.ts\nfunction safeAccess(fn, fallback) {\n  try {\n    return fn();\n  } catch {\n    return fallback;\n  }\n}\n\n// src/internals/utils/inspector/index.ts\nvar inspect;\nif (false) {}\n\n// src/internals/machines/form/form.context.ts\nvar FormMachineContext = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.createActorContext)(FormMachine, { inspect });\nvar FormStoreProvider = FormMachineContext.Provider;\nvar useFormStore = FormMachineContext.useActorRef;\nvar useFormSelector = FormMachineContext.useSelector;\nvar globalErrorsSelector = (state) => state.context.errors;\nvar fieldValueSelector = (name) => (state) => {\n  var _a;\n  return name ? (_a = state.context.fields.get(name)) == null ? void 0 : _a.value : \"\";\n};\nvar fieldHasValueSelector = (name) => (state) => Boolean(fieldValueSelector(name)(state));\nvar fieldFeedbackSelector = (name) => (state) => {\n  var _a;\n  return name ? (_a = state.context.fields.get(name)) == null ? void 0 : _a.feedback : void 0;\n};\n\n// src/react/common/form/hooks/use-field-feedback.ts\nfunction useFieldFeedback({ name }) {\n  const feedback = useFormSelector(fieldFeedbackSelector(name));\n  return {\n    feedback\n  };\n}\n\n// src/react/common/form/hooks/use-field.ts\nfunction useField({ name }) {\n  const hasValue = useFormSelector(fieldHasValueSelector(name));\n  const { feedback } = useFieldFeedback({ name });\n  const shouldBeHidden = false;\n  const hasError = feedback ? feedback.type === \"error\" : false;\n  return {\n    hasValue,\n    props: {\n      \"data-hidden\": shouldBeHidden ? true : void 0,\n      serverInvalid: hasError\n    }\n  };\n}\n\n// src/react/common/form/hooks/use-field-context.ts\n\nvar FieldContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\nvar useFieldContext = () => react__WEBPACK_IMPORTED_MODULE_1__.useContext(FieldContext);\n\n// src/react/common/form/types.ts\nvar FIELD_STATES = {\n  success: \"success\",\n  error: \"error\",\n  idle: \"idle\",\n  warning: \"warning\",\n  info: \"info\"\n};\n\n// src/react/common/form/hooks/use-field-state.ts\nfunction useFieldState({ name }) {\n  const { feedback } = useFieldFeedback({ name });\n  const hasValue = useFormSelector(fieldHasValueSelector(name));\n  let state = FIELD_STATES.idle;\n  if (!hasValue) {\n    state = FIELD_STATES.idle;\n  }\n  switch (feedback == null ? void 0 : feedback.type) {\n    case \"error\":\n      state = FIELD_STATES.error;\n      break;\n    case \"warning\":\n      state = FIELD_STATES.warning;\n      break;\n    case \"info\":\n      state = FIELD_STATES.info;\n      break;\n    case \"success\":\n      state = FIELD_STATES.success;\n      break;\n    default:\n      break;\n  }\n  return {\n    state\n  };\n}\n\n// src/react/common/form/hooks/use-form.ts\n\n\n// src/react/common/form/hooks/use-global-errors.ts\nfunction useGlobalErrors() {\n  const errors = useFormSelector(globalErrorsSelector);\n  return {\n    errors\n  };\n}\n\n// src/react/common/form/hooks/use-form.ts\nfunction useForm({ flowActor }) {\n  const { errors } = useGlobalErrors();\n  const onSubmit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      event.preventDefault();\n      if (flowActor) {\n        flowActor.send({ type: \"SUBMIT\", action: \"submit\" });\n      }\n    },\n    [flowActor]\n  );\n  return {\n    props: {\n      ...errors.length > 0 ? { \"data-global-error\": true } : {},\n      onSubmit\n    }\n  };\n}\n\n// src/react/common/form/hooks/use-input.tsx\n\n\n\n// src/react/hooks/use-password.hook.ts\n\n\n\n\n// src/react/utils/generate-password-error-text.ts\nvar errorMessages = {\n  max_length: [\"less than %length% characters\", \"length\"],\n  min_length: [\"%length% or more characters\", \"length\"],\n  require_numbers: \"a number\",\n  require_lowercase: \"a lowercase letter\",\n  require_uppercase: \"an uppercase letter\",\n  require_special_char: \"a special character\"\n};\nvar createListFormat = (message) => {\n  let messageWithPrefix;\n  if (\"ListFormat\" in Intl) {\n    const formatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"conjunction\" });\n    messageWithPrefix = formatter.format(message);\n  } else {\n    messageWithPrefix = message.join(\", \");\n  }\n  return messageWithPrefix;\n};\nfunction buildErrorTuple(key, config) {\n  switch (key) {\n    case \"max_length\":\n      return [key, { max_length: config.max_length }];\n    case \"min_length\":\n      return [key, { min_length: config.min_length }];\n    case \"require_special_char\":\n      return [key, { allowed_special_characters: config.allowed_special_characters }];\n    default:\n      return key;\n  }\n}\nvar generatePasswordErrorText = ({ config, failedValidations }) => {\n  const codes = [];\n  if (!failedValidations || Object.keys(failedValidations).length === 0) {\n    return {\n      codes,\n      message: \"\"\n    };\n  }\n  const hasMinLengthError = (failedValidations == null ? void 0 : failedValidations.min_length) || false;\n  const messages = Object.entries(failedValidations).filter((k) => hasMinLengthError ? k[0] === \"min_length\" : true).filter(([, v]) => !!v).map(([k]) => {\n    const entry = k;\n    const errorTuple = buildErrorTuple(entry, config);\n    codes.push(errorTuple);\n    const errorKey = errorMessages[entry];\n    if (Array.isArray(errorKey)) {\n      const [msg, replaceValue] = errorKey;\n      return msg.replace(`%${replaceValue}%`, config[k]);\n    }\n    return errorKey;\n  });\n  const messageWithPrefix = createListFormat(messages);\n  return {\n    codes,\n    message: `Your password must contain ${messageWithPrefix}.`\n  };\n};\n\n// src/react/hooks/use-password.hook.ts\nvar usePassword = (callbacks) => {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  const passwordSettings = (_a = clerk.__unstable__environment) == null ? void 0 : _a.userSettings.passwordSettings;\n  const { disable_hibp, min_zxcvbn_strength, show_zxcvbn, ...config } = passwordSettings || {};\n  const {\n    onValidationError = _clerk_shared_utils__WEBPACK_IMPORTED_MODULE_8__.noop,\n    onValidationSuccess = _clerk_shared_utils__WEBPACK_IMPORTED_MODULE_8__.noop,\n    onValidationWarning = _clerk_shared_utils__WEBPACK_IMPORTED_MODULE_8__.noop,\n    onValidationInfo = _clerk_shared_utils__WEBPACK_IMPORTED_MODULE_8__.noop,\n    onValidationComplexity\n  } = callbacks || {};\n  const onValidate = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (res) => {\n      var _a2, _b, _c;\n      if (res.complexity) {\n        if (Object.values(res == null ? void 0 : res.complexity).length > 0) {\n          const { message, codes } = generatePasswordErrorText({\n            config,\n            failedValidations: res.complexity\n          });\n          if ((_a2 = res.complexity) == null ? void 0 : _a2.min_length) {\n            return onValidationInfo(message, codes);\n          }\n          return onValidationError(message, codes);\n        }\n      }\n      if (((_b = res == null ? void 0 : res.strength) == null ? void 0 : _b.state) === \"fail\") {\n        const keys = res.strength.keys;\n        const error = JSON.stringify(keys);\n        return onValidationError(error, keys);\n      }\n      if (((_c = res == null ? void 0 : res.strength) == null ? void 0 : _c.state) === \"pass\") {\n        const keys = res.strength.keys;\n        const error = JSON.stringify(keys);\n        return onValidationWarning(error, keys);\n      }\n      return onValidationSuccess();\n    },\n    [callbacks, config]\n  );\n  const validatePassword = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => {\n    return (password) => {\n      return clerk.client.signUp.validatePassword(password, {\n        onValidation: onValidate,\n        onValidationComplexity\n      });\n    };\n  }, [onValidate]);\n  return {\n    validatePassword\n  };\n};\n\n// src/react/common/form/otp.tsx\n\n\n\nvar ZERO = [0, 0];\nvar OUTSIDE = [-1, -1];\nvar OTP_LENGTH_DEFAULT = 6;\nvar PASSWORD_MANAGER_OFFSET_DEFAULT = 40;\nvar OTPInput = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function OTPInput2(props, ref) {\n  const { render, length, autoSubmit, ...rest } = props;\n  const hasRenderProp = typeof render !== \"undefined\";\n  if (hasRenderProp) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      OTPInputSegmented,\n      {\n        ...rest,\n        ref,\n        render,\n        length,\n        autoSubmit\n      }\n    );\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    OTPInputStandard,\n    {\n      ...rest,\n      ref,\n      length,\n      autoSubmit\n    }\n  );\n});\nvar OTPInputStandard = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  function OTPInput3(props, ref) {\n    const { length = OTP_LENGTH_DEFAULT, autoSubmit = false, ...rest } = props;\n    const innerRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(ref, () => innerRef.current, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      var _a, _b;\n      if (String(props.value).length === length && autoSubmit) {\n        (_b = (_a = innerRef.current) == null ? void 0 : _a.form) == null ? void 0 : _b.requestSubmit();\n      }\n    }, [props.value, length, autoSubmit]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control,\n      {\n        ref: innerRef,\n        ...rest,\n        \"data-otp-input-standard\": true\n      }\n    );\n  }\n);\nvar OTPInputSegmented = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  function OTPInput4(props, ref) {\n    const {\n      className: userProvidedClassName,\n      render,\n      length = OTP_LENGTH_DEFAULT,\n      autoSubmit = false,\n      passwordManagerOffset = PASSWORD_MANAGER_OFFSET_DEFAULT,\n      ...rest\n    } = props;\n    const innerRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const [selectionRange, setSelectionRange] = react__WEBPACK_IMPORTED_MODULE_1__.useState(props.autoFocus ? ZERO : OUTSIDE);\n    const [isHovering, setIsHovering] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    const isFocused = () => document.activeElement === innerRef.current;\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(ref, () => innerRef.current, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(() => {\n      if (document.activeElement !== innerRef.current) {\n        return;\n      }\n      setSelectionRange((cur) => selectionRangeUpdater(cur, innerRef));\n    }, [props.value]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      function onSelectionChange() {\n        if (!isFocused()) {\n          return;\n        }\n        setSelectionRange((cur) => selectionRangeUpdater(cur, innerRef));\n      }\n      document.addEventListener(\"selectionchange\", onSelectionChange, { capture: true });\n      return () => document.removeEventListener(\"selectionchange\", onSelectionChange);\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      var _a, _b;\n      if (String(props.value).length === length && autoSubmit) {\n        (_b = (_a = innerRef.current) == null ? void 0 : _a.form) == null ? void 0 : _b.requestSubmit();\n      }\n    }, [props.value, length, autoSubmit]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(\n      \"div\",\n      {\n        \"data-otp-input-wrapper\": true,\n        style: wrapperStyle,\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"style\", { children: `\n      input[data-otp-input-segmented]::selection {\n        color: transparent;\n        background-color: transparent;\n      }\n      ` }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n            _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control,\n            {\n              \"data-otp-input-segmented\": true,\n              ref: innerRef,\n              ...rest,\n              onFocus: (event) => {\n                var _a;\n                if (innerRef.current) {\n                  const start = Math.min(innerRef.current.value.length, length - 1);\n                  const end = innerRef.current.value.length;\n                  innerRef.current.setSelectionRange(start, end);\n                  setSelectionRange([start, end]);\n                }\n                (_a = rest == null ? void 0 : rest.onFocus) == null ? void 0 : _a.call(rest, event);\n              },\n              onBlur: (event) => {\n                var _a;\n                setSelectionRange([-1, -1]);\n                (_a = rest == null ? void 0 : rest.onBlur) == null ? void 0 : _a.call(rest, event);\n              },\n              onMouseOver: (event) => {\n                var _a;\n                if (!isFocused()) {\n                  setIsHovering(true);\n                }\n                (_a = props.onMouseOver) == null ? void 0 : _a.call(props, event);\n              },\n              onMouseLeave: (event) => {\n                var _a;\n                setIsHovering(false);\n                (_a = props.onMouseLeave) == null ? void 0 : _a.call(props, event);\n              },\n              style: {\n                ...inputStyle,\n                clipPath: `inset(0 calc(1ch + ${passwordManagerOffset}px) 0 0)`,\n                width: `calc(100% + 1ch + ${passwordManagerOffset}px)`\n              }\n            }\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n            \"div\",\n            {\n              className: userProvidedClassName,\n              \"aria-hidden\": true,\n              style: segmentWrapperStyle,\n              children: Array.from({ length }).map((_, i) => {\n                var _a, _b;\n                const isHovered = isHovering && !isFocused();\n                const isCursor = selectionRange[0] === selectionRange[1] && selectionRange[0] === i;\n                const isSelected = ((_a = selectionRange[0]) != null ? _a : -1) <= i && ((_b = selectionRange[1]) != null ? _b : -1) > i;\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: render({\n                  value: String(props.value)[i] || \"\",\n                  status: isHovered ? \"hovered\" : isCursor ? \"cursor\" : isSelected ? \"selected\" : \"none\",\n                  index: i\n                }) }, `otp-segment-${i}`);\n              })\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nfunction selectionRangeUpdater(cur, inputRef) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n  let updated = [\n    (_b = (_a = inputRef.current) == null ? void 0 : _a.selectionStart) != null ? _b : 0,\n    (_d = (_c = inputRef.current) == null ? void 0 : _c.selectionEnd) != null ? _d : 0,\n    (_f = (_e = inputRef.current) == null ? void 0 : _e.selectionDirection) != null ? _f : null\n  ];\n  if (cur[0] === updated[0] && cur[1] === updated[1]) {\n    return cur;\n  }\n  if (updated[0] === 0 && updated[1] === 1) {\n    updated[2] = \"forward\";\n  }\n  if (updated[0] === updated[1]) {\n    if (updated[0] > 0 && cur[0] === updated[0] && cur[1] === updated[0] + 1) {\n      updated = [updated[0] - 1, updated[1], \"backward\"];\n    } else if (typeof ((_g = inputRef.current) == null ? void 0 : _g.value[updated[0]]) !== \"undefined\") {\n      updated = [updated[0], updated[1] + 1, \"backward\"];\n    } else if (updated[0] >= OTP_LENGTH_DEFAULT) {\n      updated = [updated[0] - 1, updated[1], \"backward\"];\n    }\n  }\n  (_i = inputRef.current) == null ? void 0 : _i.setSelectionRange(updated[0], updated[1], (_h = updated[2]) != null ? _h : void 0);\n  return [updated[0], updated[1]];\n}\nvar wrapperStyle = {\n  position: \"relative\",\n  userSelect: \"none\"\n};\nvar inputStyle = {\n  display: \"block\",\n  background: \"transparent\",\n  opacity: 0,\n  outline: \"transparent solid 0px\",\n  appearance: \"none\",\n  color: \"transparent\",\n  position: \"absolute\",\n  inset: 0,\n  caretColor: \"transparent\",\n  border: \"0px solid transparent\",\n  // width is handled inline\n  height: \"100%\",\n  letterSpacing: \"-1rem\"\n};\nvar segmentWrapperStyle = {\n  zIndex: 1,\n  pointerEvents: \"none\"\n};\n\n// src/react/common/form/utils/enrich-field-state.ts\nfunction enrichFieldState(validity, fieldState) {\n  return (validity == null ? void 0 : validity.valid) === false ? FIELD_STATES.error : fieldState;\n}\n\n// src/react/common/form/utils/determine-input-type-from-name.ts\nfunction determineInputTypeFromName(name) {\n  if (name === \"password\" || name === \"confirmPassword\" || name === \"currentPassword\" || name === \"newPassword\") {\n    return \"password\";\n  }\n  if (name === \"emailAddress\") {\n    return \"email\";\n  }\n  if (name === \"phoneNumber\") {\n    return \"tel\";\n  }\n  if (name === \"code\") {\n    return \"otp\";\n  }\n  if (name === \"backup_code\") {\n    return \"backup_code\";\n  }\n  return \"text\";\n}\n\n// src/react/common/form/hooks/use-previous.ts\n\nfunction usePrevious(value) {\n  const ref = react__WEBPACK_IMPORTED_MODULE_1__.useRef();\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n// src/react/common/form/hooks/use-validity-state-context.ts\n\nvar ValidityStateContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nvar useValidityStateContext = () => react__WEBPACK_IMPORTED_MODULE_1__.useContext(ValidityStateContext);\n\n// src/react/common/form/hooks/use-input.tsx\nfunction useInput({\n  name: inputName,\n  value: providedValue,\n  checked: providedChecked,\n  onChange: onChangeProp,\n  onBlur: onBlurProp,\n  onFocus: onFocusProp,\n  type: inputType,\n  ...passthroughProps\n}) {\n  const fieldContext = useFieldContext();\n  const rawName = inputName || (fieldContext == null ? void 0 : fieldContext.name);\n  const name = rawName === \"backup_code\" ? \"code\" : rawName;\n  const { state: fieldState } = useFieldState({ name });\n  const validity = useValidityStateContext();\n  if (!rawName || !name) {\n    throw new Error(\"Clerk: <Input /> must be wrapped in a <Field> component or have a name prop.\");\n  }\n  const ref = useFormStore();\n  const [hasPassedValiation, setHasPassedValidation] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n  const { validatePassword } = usePassword({\n    onValidationComplexity: (hasPassed) => setHasPassedValidation(hasPassed),\n    onValidationSuccess: () => {\n      ref.send({\n        type: \"FIELD.FEEDBACK.SET\",\n        field: { name, feedback: { type: \"success\", message: \"Your password meets all the necessary requirements.\" } }\n      });\n    },\n    onValidationError: (error, codes) => {\n      if (error) {\n        ref.send({\n          type: \"FIELD.FEEDBACK.SET\",\n          field: {\n            name,\n            feedback: {\n              type: \"error\",\n              message: new ClerkElementsFieldError(\"password-validation-error\", error),\n              codes\n            }\n          }\n        });\n      }\n    },\n    onValidationWarning: (warning, codes) => ref.send({\n      type: \"FIELD.FEEDBACK.SET\",\n      field: { name, feedback: { type: \"warning\", message: warning, codes } }\n    }),\n    onValidationInfo: (info, codes) => {\n      ref.send({\n        type: \"FIELD.FEEDBACK.SET\",\n        field: {\n          name,\n          feedback: {\n            type: \"info\",\n            message: info,\n            codes\n          }\n        }\n      });\n    }\n  });\n  const value = useFormSelector(fieldValueSelector(name));\n  const prevValue = usePrevious(value);\n  const hasValue = Boolean(value);\n  const type = inputType != null ? inputType : determineInputTypeFromName(rawName);\n  let nativeFieldType = type;\n  let shouldValidatePassword = false;\n  if (type === \"password\" || type === \"text\") {\n    shouldValidatePassword = Boolean(passthroughProps.validatePassword);\n  }\n  if (nativeFieldType === \"otp\" || nativeFieldType === \"backup_code\") {\n    nativeFieldType = \"text\";\n  }\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (!name) {\n      return;\n    }\n    ref.send({\n      type: \"FIELD.ADD\",\n      field: { name, type: nativeFieldType, value: providedValue, checked: providedChecked }\n    });\n    return () => ref.send({ type: \"FIELD.REMOVE\", field: { name } });\n  }, [ref]);\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (!name) {\n      return;\n    }\n    if (type === \"checkbox\" && providedChecked !== void 0 || type !== \"checkbox\" && providedValue !== void 0) {\n      ref.send({\n        type: \"FIELD.UPDATE\",\n        field: { name, value: providedValue, checked: providedChecked }\n      });\n    }\n  }, [name, type, ref, providedValue, providedChecked]);\n  const onChange = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onChangeProp == null ? void 0 : onChangeProp(event);\n      if (!name) {\n        return;\n      }\n      ref.send({ type: \"FIELD.UPDATE\", field: { name, value: event.target.value, checked: event.target.checked } });\n      if (shouldValidatePassword) {\n        validatePassword(event.target.value);\n      }\n    },\n    [ref, name, onChangeProp, shouldValidatePassword, validatePassword]\n  );\n  const onBlur = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onBlurProp == null ? void 0 : onBlurProp(event);\n      if (shouldValidatePassword && event.target.value !== prevValue) {\n        validatePassword(event.target.value);\n      }\n    },\n    [onBlurProp, shouldValidatePassword, validatePassword, prevValue]\n  );\n  const onFocus = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onFocusProp == null ? void 0 : onFocusProp(event);\n      if (shouldValidatePassword && event.target.value !== prevValue) {\n        validatePassword(event.target.value);\n      }\n    },\n    [onFocusProp, shouldValidatePassword, validatePassword, prevValue]\n  );\n  const shouldBeHidden = false;\n  const Element = type === \"otp\" ? OTPInput : _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control;\n  let props = {};\n  if (type === \"otp\") {\n    const p = passthroughProps;\n    const length = p.length || OTP_LENGTH_DEFAULT;\n    props = {\n      \"data-otp-input\": true,\n      autoComplete: \"one-time-code\",\n      inputMode: \"numeric\",\n      pattern: `[0-9]{${length}}`,\n      minLength: length,\n      maxLength: length,\n      onChange: (event) => {\n        event.currentTarget.value = event.currentTarget.value.replace(/\\D+/g, \"\");\n        onChange(event);\n      },\n      type: \"text\",\n      spellCheck: false\n    };\n  } else if (type === \"backup_code\") {\n    props = {\n      autoComplete: \"off\",\n      type: \"text\",\n      spellCheck: false\n    };\n  } else if (type === \"password\" && shouldValidatePassword) {\n    props = {\n      \"data-has-passed-validation\": hasPassedValiation ? true : void 0\n    };\n  }\n  const { validatePassword: _1, ...rest } = passthroughProps;\n  return {\n    Element,\n    props: {\n      type,\n      value: value != null ? value : \"\",\n      onChange,\n      onBlur,\n      onFocus,\n      \"data-hidden\": shouldBeHidden ? true : void 0,\n      \"data-has-value\": hasValue ? true : void 0,\n      \"data-state\": enrichFieldState(validity, fieldState),\n      ...props,\n      ...rest\n    }\n  };\n}\n\n// src/react/common/form/field.tsx\n\nvar DISPLAY_NAME = \"ClerkElementsField\";\nvar DISPLAY_NAME_INNER = \"ClerkElementsFieldInner\";\nvar Field = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ alwaysShow, ...rest }, forwardedRef) => {\n  var _a;\n  const formRef = useFormStore();\n  const formCtx = formRef.getSnapshot().context;\n  const isHiddenField = formCtx.progressive && Boolean((_a = formCtx.hidden) == null ? void 0 : _a.has(rest.name));\n  const shouldHide = alwaysShow ? false : isHiddenField;\n  return shouldHide ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(FieldContext.Provider, { value: { name: rest.name }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    FieldInner,\n    {\n      ...rest,\n      ref: forwardedRef\n    }\n  ) });\n});\nField.displayName = DISPLAY_NAME;\nvar FieldInner = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, forwardedRef) => {\n  const { children, ...rest } = props;\n  const field = useField({ name: rest.name });\n  const { state: fieldState } = useFieldState({ name: rest.name });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Field,\n    {\n      ...field.props,\n      ...rest,\n      ref: forwardedRef,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.ValidityState, { children: (validity) => {\n        const enrichedFieldState = enrichFieldState(validity, fieldState);\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(ValidityStateContext.Provider, { value: validity, children: typeof children === \"function\" ? children(enrichedFieldState) : children });\n      } })\n    }\n  );\n});\nFieldInner.displayName = DISPLAY_NAME_INNER;\n\n// src/react/common/form/field-error.tsx\n\n\n\n\n// src/react/utils/is-react-fragment.ts\n\nfunction isReactFragment(node) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(node) && node.type === react__WEBPACK_IMPORTED_MODULE_1__.Fragment;\n}\n\n// src/react/common/form/field-error.tsx\n\nvar DISPLAY_NAME2 = \"ClerkElementsFieldError\";\nvar FieldError = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild = false, children, code, name, ...rest }, forwardedRef) => {\n    const fieldContext = useFieldContext();\n    const rawFieldName = (fieldContext == null ? void 0 : fieldContext.name) || name;\n    const fieldName = rawFieldName === \"backup_code\" ? \"code\" : rawFieldName;\n    const { feedback } = useFieldFeedback({ name: fieldName });\n    if (!((feedback == null ? void 0 : feedback.type) === \"error\")) {\n      return null;\n    }\n    const error = feedback.message;\n    if (!error) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"span\";\n    const child = typeof children === \"function\" ? children(error) : children;\n    if (isReactFragment(child)) {\n      throw new ClerkElementsRuntimeError(\"<FieldError /> cannot render a Fragment as a child.\");\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.FormMessage,\n      {\n        \"data-error-code\": error.code,\n        ...rest,\n        ref: forwardedRef,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { children: child || error.message })\n      }\n    );\n  }\n);\nFieldError.displayName = DISPLAY_NAME2;\n\n// src/react/common/form/field-state.tsx\nvar DISPLAY_NAME3 = \"ClerkElementsFieldState\";\nfunction FieldState({ children }) {\n  const field = useFieldContext();\n  const { feedback } = useFieldFeedback({ name: field == null ? void 0 : field.name });\n  const { state } = useFieldState({ name: field == null ? void 0 : field.name });\n  const validity = useValidityStateContext();\n  const message = (feedback == null ? void 0 : feedback.message) instanceof ClerkElementsFieldError ? feedback.message.message : feedback == null ? void 0 : feedback.message;\n  const codes = feedback == null ? void 0 : feedback.codes;\n  const fieldState = { state: enrichFieldState(validity, state), message, codes };\n  return children(fieldState);\n}\nFieldState.displayName = DISPLAY_NAME3;\n\n// src/react/common/form/form.tsx\n\n\n\n\nvar DISPLAY_NAME4 = \"ClerkElementsForm\";\nvar Form = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ flowActor, onSubmit, ...rest }, forwardedRef) => {\n  const form = useForm({ flowActor });\n  const { onSubmit: internalOnSubmit, ...internalFormProps } = form.props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Form,\n    {\n      ...internalFormProps,\n      ...rest,\n      onSubmit: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_12__.composeEventHandlers)(internalOnSubmit, onSubmit),\n      ref: forwardedRef\n    }\n  );\n});\nForm.displayName = DISPLAY_NAME4;\n\n// src/react/common/form/global-error.tsx\n\n\n\nvar DISPLAY_NAME5 = \"ClerkElementsGlobalError\";\nvar GlobalError = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild = false, children, code, ...rest }, forwardedRef) => {\n    const { errors } = useGlobalErrors();\n    const error = errors == null ? void 0 : errors[0];\n    if (!error || code && error.code !== code) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n    const child = typeof children === \"function\" ? children(error) : children;\n    if (isReactFragment(child)) {\n      throw new ClerkElementsRuntimeError(\"<GlobalError /> cannot render a Fragment as a child.\");\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      Comp,\n      {\n        role: \"alert\",\n        ...rest,\n        ref: forwardedRef,\n        children: child || error.message\n      }\n    );\n  }\n);\nGlobalError.displayName = DISPLAY_NAME5;\n\n// src/react/common/form/input.tsx\n\n\n\n\n\n// src/react/utils/create-context-from-actor-ref.ts\n\n\nfunction createContextFromActorRef(displayName) {\n  const ReactContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({ children, actorRef }) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n      OriginalProvider,\n      {\n        value: actorRef\n      },\n      children\n    );\n  }\n  Provider.displayName = displayName;\n  function useContext9(allowMissingActor = false) {\n    const actorRef = react__WEBPACK_IMPORTED_MODULE_1__.useContext(ReactContext);\n    if (!allowMissingActor && !actorRef) {\n      throw new Error(\n        `You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}.Provider> component.`\n      );\n    }\n    return actorRef;\n  }\n  function useSelector6(selector, compare) {\n    const actor = useContext9();\n    return (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actor, selector, compare);\n  }\n  return {\n    Provider,\n    useActorRef: useContext9,\n    useSelector: useSelector6\n  };\n}\n\n// src/react/sign-in/context/router.context.ts\nvar SignInRouterCtx = createContextFromActorRef(\"SignInRouterCtx\");\nfunction useSignInStep(name) {\n  return SignInRouterCtx.useSelector((state) => state.children[name]);\n}\nvar useSignInStartStep = () => useSignInStep(\"start\");\nvar useSignInFirstFactorStep = () => useSignInStep(\"firstFactor\");\nvar useSignInSecondFactorStep = () => useSignInStep(\"secondFactor\");\nvar useSignInResetPasswordStep = () => useSignInStep(\"resetPassword\");\nvar useSignInPasskeyAutofill = () => SignInRouterCtx.useSelector((state) => state.context.webAuthnAutofillSupport);\n\n// src/react/sign-in/context/sign-in-strategy.context.ts\n\nvar SignInStrategyContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n  strategy: void 0\n});\nfunction useSignInStrategy() {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SignInStrategyContext);\n  if (!ctx) {\n    throw new ClerkElementsRuntimeError(\n      \"useSignInStrategy must be used within a <SignIn.Strategy> or <SignIn.SupportedStrategy> component.\"\n    );\n  }\n  const { strategy } = ctx;\n  return strategy;\n}\n\n// src/react/sign-in/context/strategies.context.ts\n\nvar StrategiesContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n  current: void 0,\n  isActive: (_name) => false,\n  preferred: void 0\n});\nfunction useStrategy(name) {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(StrategiesContext);\n  if (!ctx) {\n    throw new ClerkElementsRuntimeError(\n      'useStrategy must be used within a <SignIn.Step name=\"verifications\"> component. Did you mean to `import { Step } from \"@clerk/elements/sign-up\"` instead?'\n    );\n  }\n  const { current, preferred, isActive } = ctx;\n  return {\n    current,\n    preferred,\n    get active() {\n      return isActive(name);\n    }\n  };\n}\n\n// src/react/common/form/input.tsx\n\nvar DISPLAY_NAME6 = \"ClerkElementsInput\";\nvar DISPLAY_NAME_PASSKEYS_AUTOFILL = \"ClerkElementsInputWithPasskeyAutofill\";\nvar Input = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  (props, forwardedRef) => {\n    var _a, _b, _c;\n    const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n    const field = useInput(props);\n    const hasPasskeyAutofillProp = Boolean((_a = field.props.autoComplete) == null ? void 0 : _a.includes(\"webauthn\"));\n    const allowedTypeForPasskey = [\"text\", \"email\", \"tel\"].includes(field.props.type);\n    const signInRouterRef = SignInRouterCtx.useActorRef(true);\n    (_c = clerk.telemetry) == null ? void 0 : _c.record(\n      (0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_14__.eventComponentMounted)(\"Elements_Input\", {\n        type: (_b = props.type) != null ? _b : false,\n        // @ts-expect-error - Depending on type the props can be different\n        render: Boolean(props == null ? void 0 : props.render),\n        // @ts-expect-error - Depending on type the props can be different\n        asChild: Boolean(props == null ? void 0 : props.asChild),\n        // @ts-expect-error - Depending on type the props can be different\n        validatePassword: Boolean(props == null ? void 0 : props.validatePassword)\n      })\n    );\n    if (signInRouterRef && hasPasskeyAutofillProp && allowedTypeForPasskey) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        InputWithPasskeyAutofill,\n        {\n          ref: forwardedRef,\n          ...props\n        }\n      );\n    }\n    if (hasPasskeyAutofillProp && !allowedTypeForPasskey) {\n      _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_13__.logger.warnOnce(\n        `<Input autoComplete=\"webauthn\"> can only be used with <Input type=\"text\"> or <Input type=\"email\">`\n      );\n    } else if (hasPasskeyAutofillProp) {\n      _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_13__.logger.warnOnce(\n        `<Input autoComplete=\"webauthn\"> can only be used inside <SignIn> in order to trigger a sign-in attempt, otherwise it will be ignored.`\n      );\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      field.Element,\n      {\n        ref: forwardedRef,\n        ...field.props\n      }\n    );\n  }\n);\nInput.displayName = DISPLAY_NAME6;\nvar InputWithPasskeyAutofill = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  (props, forwardedRef) => {\n    const signInRouterRef = SignInRouterCtx.useActorRef(true);\n    const passkeyAutofillSupported = useSignInPasskeyAutofill();\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      if (passkeyAutofillSupported) {\n        signInRouterRef == null ? void 0 : signInRouterRef.send({ type: \"AUTHENTICATE.PASSKEY.AUTOFILL\" });\n      }\n    }, [passkeyAutofillSupported, signInRouterRef]);\n    const field = useInput(props);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      field.Element,\n      {\n        ref: forwardedRef,\n        ...field.props\n      }\n    );\n  }\n);\nInputWithPasskeyAutofill.displayName = DISPLAY_NAME_PASSKEYS_AUTOFILL;\n\n// src/react/common/form/label.tsx\n\nvar DISPLAY_NAME7 = \"ClerkElementsLabel\";\nvar Label = _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Label;\nLabel.displayName = DISPLAY_NAME7;\n\n// src/react/common/form/submit.tsx\n\nvar DISPLAY_NAME8 = \"ClerkElementsSubmit\";\nvar Submit = _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Submit;\nSubmit.displayName = DISPLAY_NAME8;\n\n// src/react/common/connections.tsx\n\n\n\n// src/react/hooks/use-active-tags.hook.ts\n\nvar ActiveTagsMode = {\n  any: \"any\",\n  all: \"all\"\n};\nfunction useActiveTags(actor, tags, mode = ActiveTagsMode.any) {\n  const state = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(\n    actor,\n    (s) => s,\n    (prev, next) => prev.tags === next.tags\n  );\n  if (!state) {\n    return false;\n  }\n  if (typeof tags === \"string\") {\n    return state.hasTag(tags);\n  }\n  if (!Array.isArray(tags)) {\n    throw new Error(\"Invalid tags parameter provided to useActiveTags\");\n  }\n  switch (mode) {\n    case ActiveTagsMode.any: {\n      const matching = new Set(tags.filter((tag) => state.hasTag(tag)));\n      return { active: matching.size > 0, activeTags: matching };\n    }\n    case ActiveTagsMode.all:\n      return tags.length === state.tags.size ? tags.every((tag) => state.hasTag(tag)) : false;\n    default:\n      return false;\n  }\n}\n\n// src/react/hooks/use-third-party-provider.hook.ts\n\n\n\n// src/utils/third-party-strategies.ts\n\n\n\n\n// src/utils/clerk-js.ts\nvar fromEntries = (iterable) => {\n  return [...iterable].reduce((obj, [key, val]) => {\n    obj[key] = val;\n    return obj;\n  }, {});\n};\n\n// src/utils/third-party-strategies.ts\nvar oauthStrategies = _clerk_shared_oauth__WEBPACK_IMPORTED_MODULE_16__.OAUTH_PROVIDERS.map((p) => p.strategy);\nvar providerToDisplayData = fromEntries(\n  [..._clerk_shared_oauth__WEBPACK_IMPORTED_MODULE_16__.OAUTH_PROVIDERS, ..._clerk_shared_web3__WEBPACK_IMPORTED_MODULE_17__.WEB3_PROVIDERS].map((p) => {\n    return [p.provider, { iconUrl: (0,_clerk_shared_constants__WEBPACK_IMPORTED_MODULE_15__.iconImageUrl)(p.provider), name: p.name, strategy: p.strategy }];\n  })\n);\nvar strategyToDisplayData = fromEntries(\n  [..._clerk_shared_oauth__WEBPACK_IMPORTED_MODULE_16__.OAUTH_PROVIDERS, ..._clerk_shared_web3__WEBPACK_IMPORTED_MODULE_17__.WEB3_PROVIDERS].map((p) => {\n    return [p.strategy, { iconUrl: (0,_clerk_shared_constants__WEBPACK_IMPORTED_MODULE_15__.iconImageUrl)(p.provider), id: p.provider, name: p.name }];\n  })\n);\nfunction isSamlStrategy(strategy) {\n  return strategy === \"saml\";\n}\nfunction isEnterpriseSSOStrategy(strategy) {\n  return strategy === \"enterprise_sso\";\n}\nfunction isWeb3Strategy(strategy, available) {\n  return available.includes(strategy.startsWith(\"web3_\") ? strategy : `web3_${strategy}_signature`);\n}\nfunction isAuthenticatableOauthStrategy(strategy, available) {\n  return available.includes(strategy.startsWith(\"oauth_\") ? strategy : `oauth_${strategy}`);\n}\nvar emptyThirdPartyProviders = {\n  authenticatableOauthStrategies: [],\n  providerToDisplayData: {},\n  strategies: [],\n  strategyToDisplayData: {},\n  web3Strategies: []\n};\nvar getEnabledThirdPartyProviders = (environment) => {\n  if (!(environment == null ? void 0 : environment.userSettings)) {\n    return emptyThirdPartyProviders;\n  }\n  const { socialProviderStrategies, web3FirstFactors, authenticatableSocialStrategies } = environment.userSettings;\n  const knownSocialProviderStrategies = socialProviderStrategies.filter((s) => oauthStrategies.includes(s));\n  const knownAuthenticatableSocialStrategies = authenticatableSocialStrategies.filter((s) => oauthStrategies.includes(s));\n  return {\n    authenticatableOauthStrategies: [...knownAuthenticatableSocialStrategies],\n    providerToDisplayData,\n    strategies: [...knownSocialProviderStrategies, ...web3FirstFactors],\n    strategyToDisplayData,\n    web3Strategies: web3FirstFactors\n  };\n};\n\n// src/react/hooks/use-third-party-provider.hook.ts\nvar useIsProviderEnabled = (provider) => {\n  var _a, _b, _c, _d;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  if (!clerk.loaded) {\n    return null;\n  }\n  if (provider === \"saml\" || provider === \"enterprise_sso\") {\n    return (_d = (_c = (_a = clerk.__unstable__environment) == null ? void 0 : _a.userSettings.saml.enabled) != null ? _c : (_b = clerk.__unstable__environment) == null ? void 0 : _b.userSettings.enterpriseSSO.enabled) != null ? _d : false;\n  }\n  const data = getEnabledThirdPartyProviders(clerk.__unstable__environment);\n  return isAuthenticatableOauthStrategy(provider, data.authenticatableOauthStrategies) || isWeb3Strategy(provider, data.web3Strategies);\n};\nvar useThirdPartyProvider = (ref, provider) => {\n  const isProviderEnabled = useIsProviderEnabled(provider);\n  const isSaml = isSamlStrategy(provider);\n  const isEnterpriseSSO = isEnterpriseSSOStrategy(provider);\n  const details = isEnterpriseSSO || isSaml ? {\n    name: \"SSO\",\n    strategy: provider\n  } : providerToDisplayData[provider];\n  const authenticate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      if (!isProviderEnabled) {\n        return;\n      }\n      event.preventDefault();\n      if (isSaml) {\n        return ref.send({ type: \"AUTHENTICATE.SAML\" });\n      }\n      if (isEnterpriseSSO) {\n        return ref.send({ type: \"AUTHENTICATE.ENTERPRISE_SSO\" });\n      }\n      if (provider === \"metamask\") {\n        return ref.send({ type: \"AUTHENTICATE.WEB3\", strategy: \"web3_metamask_signature\" });\n      }\n      if (provider === \"coinbase_wallet\") {\n        return ref.send({ type: \"AUTHENTICATE.WEB3\", strategy: \"web3_coinbase_wallet_signature\" });\n      }\n      if (provider === \"okx_wallet\") {\n        return ref.send({ type: \"AUTHENTICATE.WEB3\", strategy: \"web3_okx_wallet_signature\" });\n      }\n      return ref.send({ type: \"AUTHENTICATE.OAUTH\", strategy: `oauth_${provider}` });\n    },\n    [provider, isProviderEnabled, isSaml, isEnterpriseSSO, ref]\n  );\n  if (isProviderEnabled === false) {\n    const dashboardPath = `https://dashboard.clerk.com/last-active?path=/user-authentication/${provider === \"metamask\" ? \"web3\" : \"social-connections\"}`;\n    throw new ClerkElementsRuntimeError(\n      `You have used <Connection name=\"${provider}\"> which isn't enabled for your project. Enable ${details.name} in your Clerk dashboard: ${dashboardPath}`\n    );\n  }\n  return {\n    events: {\n      authenticate\n    },\n    ...details\n  };\n};\n\n// src/react/sign-up/context/router.context.ts\nvar SignUpRouterCtx = createContextFromActorRef(\"SignUpRouterCtx\");\nfunction useSignUpStep(name) {\n  return SignUpRouterCtx.useSelector((state) => state.children[name]);\n}\nvar useSignUpStartStep = () => useSignUpStep(\"start\");\nvar useSignUpContinueStep = () => useSignUpStep(\"continue\");\nvar useSignUpVerificationStep = () => useSignUpStep(\"verification\");\n\n// src/react/common/connections.tsx\n\nvar ConnectionContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nvar useConnectionContext = () => {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConnectionContext);\n  if (!ctx) {\n    throw new Error(\"useConnectionContext must be used within <Clerk.Connection>\");\n  }\n  return ctx;\n};\nfunction Connection({ asChild, name, ...rest }) {\n  const signInRef = SignInRouterCtx.useActorRef(true);\n  const signUpRef = SignUpRouterCtx.useActorRef(true);\n  const provider = useThirdPartyProvider(signInRef || signUpRef, name);\n  if (!provider) {\n    return null;\n  }\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"button\";\n  const defaultProps = asChild ? {} : { type: \"button\" };\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(ConnectionContext.Provider, { value: provider, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Comp,\n    {\n      onClick: provider.events.authenticate,\n      ...defaultProps,\n      ...rest\n    }\n  ) });\n}\nfunction Icon({ asChild, ...rest }) {\n  const { iconUrl, name } = useConnectionContext();\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"img\";\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Comp,\n    {\n      alt: `${name} logo`,\n      src: iconUrl,\n      ...rest\n    }\n  );\n}\n\n// src/react/common/loading.tsx\n\n\n\n\n// src/react/hooks/use-loading.hook.ts\n\nvar selectLoading = (snapshot) => {\n  var _a;\n  return (_a = snapshot == null ? void 0 : snapshot.context) == null ? void 0 : _a.loading;\n};\nvar compareLoadingValue = (prev, next) => (prev == null ? void 0 : prev.isLoading) === (next == null ? void 0 : next.isLoading);\nfunction useLoading(actor) {\n  const loadingCtx = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actor, selectLoading, compareLoadingValue);\n  if (!loadingCtx) {\n    return [false, { step: void 0, strategy: void 0, action: void 0 }];\n  }\n  return [loadingCtx.isLoading, { step: loadingCtx.step, strategy: loadingCtx.strategy, action: loadingCtx.action }];\n}\n\n// src/react/sign-in/step.tsx\n\n\n\n// src/react/sign-in/choose-session/choose-session.tsx\n\n\n\n// src/react/utils/create-context-for-dom-validation.ts\n\nfunction createContextForDomValidation(displayName) {\n  const ReactContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(false);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({ children }) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n      OriginalProvider,\n      {\n        value: true\n      },\n      children\n    );\n  }\n  Provider.displayName = displayName;\n  function useContext9(allowMissingContext = false) {\n    const context = react__WEBPACK_IMPORTED_MODULE_1__.useContext(ReactContext);\n    if (!allowMissingContext && !context) {\n      throw new Error(\n        `You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}.Provider> component.`\n      );\n    }\n    return context;\n  }\n  return {\n    Provider,\n    useDomValidation: useContext9\n  };\n}\n\n// src/react/utils/is-valid-component-type.ts\n\nfunction isValidComponentType(child, type) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(child) && child.type === type;\n}\n\n// src/react/sign-in/choose-session/choose-session.hooks.ts\n\nvar SignInActiveSessionContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\nfunction useSignInActiveSessionContext() {\n  const ctx = react__WEBPACK_IMPORTED_MODULE_1__.useContext(SignInActiveSessionContext);\n  if (!ctx) {\n    throw new Error(\"SignInActiveSessionContext must be used within a SessionList/SignInSessionListItem\");\n  }\n  return ctx;\n}\nfunction useSignInChooseSessionIsActive() {\n  const routerRef = SignInRouterCtx.useActorRef();\n  return useActiveTags(routerRef, \"step:choose-session\");\n}\nfunction useSignInSessionList(params) {\n  const { omitCurrent = true } = params || {};\n  return SignInRouterCtx.useSelector((state) => {\n    var _a, _b, _c, _d;\n    const signedInSessions = ((_b = (_a = state.context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signedInSessions) || [];\n    const currentSessionId = (_d = (_c = state.context.clerk) == null ? void 0 : _c.session) == null ? void 0 : _d.id;\n    const filteredSessions = omitCurrent ? signedInSessions.filter((s) => s.id !== currentSessionId) : signedInSessions;\n    return filteredSessions.map((s) => ({\n      id: s.id,\n      ...s.publicUserData\n    }));\n  });\n}\n\n// src/react/sign-in/choose-session/choose-session.tsx\n\nvar SignInChooseSessionCtx = createContextForDomValidation(\"SignInChooseSessionCtx\");\nfunction SignInChooseSession({ asChild, children, ...props }) {\n  const activeState = useSignInChooseSessionIsActive();\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseSessionCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...props, children }) }) : null;\n}\nfunction SignInSessionList({ asChild, children, includeCurrentSession, ...props }) {\n  const sessions = useSignInSessionList({ omitCurrent: !includeCurrentSession });\n  if (!children || !(sessions == null ? void 0 : sessions.length)) {\n    return null;\n  }\n  if (react__WEBPACK_IMPORTED_MODULE_1__.Children.count(children) > 1) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.Children.only(null);\n  }\n  if (asChild && isValidComponentType(children, SignInSessionListItem)) {\n    throw new Error(\"asChild cannot be used with SessionListItem as the direct child\");\n  }\n  if (!react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(children)) {\n    throw new Error(\"children must be a valid React element\");\n  }\n  const newChildren = asChild ? children.props.children : children;\n  const childrenWithCtx = sessions.map((session) => {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      SignInActiveSessionContext.Provider,\n      {\n        value: session,\n        children: newChildren\n      },\n      `SignInActiveSessionContext-${session.id}`\n    );\n  });\n  if (asChild) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot, { ...props, children: react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(children, void 0, childrenWithCtx) });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"ul\", { ...props, children: childrenWithCtx });\n}\nfunction SignInSessionListItem(props) {\n  const { asChild = false, children, ...passthroughProps } = props;\n  const session = useSignInActiveSessionContext();\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"li\";\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...passthroughProps, children: children({ session }) });\n}\n\n// src/react/sign-in/choose-strategy.tsx\n\n\n\n\n// src/internals/machines/sign-in/verification.machine.ts\n\n\n\n// src/internals/constants/index.ts\nvar SSO_CALLBACK_PATH_ROUTE = \"/sso-callback\";\nvar CHOOSE_SESSION_PATH_ROUTE = \"/choose\";\nvar MAGIC_LINK_VERIFY_PATH_ROUTE = \"/verify\";\nvar SIGN_UP_MODES = {\n  PUBLIC: \"public\",\n  RESTRICTED: \"restricted\"\n};\nvar SIGN_IN_DEFAULT_BASE_PATH = safeAccess(\n  () => {\n    var _a;\n    return (_a = process.env.CLERK_SIGN_IN_URL) != null ? _a : \"/sign-in\";\n  },\n  \"/sign-in\"\n);\nvar SIGN_UP_DEFAULT_BASE_PATH = safeAccess(\n  () => {\n    var _a;\n    return (_a = process.env.CLERK_SIGN_UP_URL) != null ? _a : \"/sign-up\";\n  },\n  \"/sign-up\"\n);\nvar NEXT_WINDOW_HISTORY_SUPPORT_VERSION = \"14.1.0\";\nvar SEARCH_PARAMS = {\n  createdSession: \"__clerk_created_session\",\n  handshake: \"__clerk_handshake\",\n  help: \"__clerk_help\",\n  invitationToken: \"__clerk_invitation_token\",\n  modalState: \"__clerk_modal_state\",\n  satelliteUrl: \"__clerk_satellite_url\",\n  status: \"__clerk_status\",\n  synced: \"__clerk_synced\",\n  ticket: \"__clerk_ticket\",\n  transfer: \"__clerk_transfer\"\n};\nvar RESENDABLE_COUNTDOWN_DEFAULT = 60;\nvar CAPTCHA_ELEMENT_ID = \"clerk-captcha\";\nvar ERROR_CODES = {\n  FORM_IDENTIFIER_NOT_FOUND: \"form_identifier_not_found\",\n  FORM_PASSWORD_INCORRECT: \"form_password_incorrect\",\n  INVALID_STRATEGY_FOR_USER: \"strategy_for_user_invalid\",\n  NOT_ALLOWED_TO_SIGN_UP: \"not_allowed_to_sign_up\",\n  OAUTH_ACCESS_DENIED: \"oauth_access_denied\",\n  OAUTH_EMAIL_DOMAIN_RESERVED_BY_SAML: \"oauth_email_domain_reserved_by_saml\",\n  NOT_ALLOWED_ACCESS: \"not_allowed_access\",\n  SAML_USER_ATTRIBUTE_MISSING: \"saml_user_attribute_missing\",\n  USER_LOCKED: \"user_locked\",\n  ENTERPRISE_SSO_USER_ATTRIBUTE_MISSING: \"enterprise_sso_user_attribute_missing\",\n  ENTERPRISE_SSO_EMAIL_ADDRESS_DOMAIN_MISMATCH: \"enterprise_sso_email_address_domain_mismatch\",\n  ENTERPRISE_SSO_HOSTED_DOMAIN_MISMATCH: \"enterprise_sso_hosted_domain_mismatch\",\n  SAML_EMAIL_ADDRESS_DOMAIN_MISMATCH: \"saml_email_address_domain_mismatch\",\n  ORGANIZATION_MEMBERSHIP_QUOTA_EXCEEDED_FOR_SSO: \"organization_membership_quota_exceeded_for_sso\"\n};\nvar ROUTING = {\n  path: \"path\",\n  virtual: \"virtual\",\n  hash: \"hash\"\n};\n\n// src/internals/machines/shared/shared.actions.ts\nfunction sendToLoading({ context, event }) {\n  let step;\n  let strategy;\n  let action;\n  if (event.type.startsWith(\"xstate.done.\") || event.type.startsWith(\"xstate.error.\")) {\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: false,\n      step: void 0,\n      strategy: void 0\n    });\n  }\n  if (context.loadingStep === \"strategy\") {\n    step = void 0;\n    if (event.type === \"REDIRECT\") {\n      strategy = event.params.strategy;\n    }\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy\n    });\n  } else if (context.loadingStep === \"continue\") {\n    step = \"continue\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else if (context.loadingStep === \"reset-password\") {\n    step = \"reset-password\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else if (context.loadingStep === \"start\") {\n    step = \"start\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else {\n    step = context.loadingStep;\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  }\n}\n\n// src/internals/machines/sign-in/utils/starting-factors.ts\n\nvar makeSortingOrderMap = (arr) => arr.reduce(\n  (acc, k, i) => {\n    acc[k] = i;\n    return acc;\n  },\n  {}\n);\nvar STRATEGY_SORT_ORDER_PASSWORD_PREF = makeSortingOrderMap([\n  \"passkey\",\n  \"password\",\n  \"email_link\",\n  \"email_code\",\n  \"phone_code\"\n]);\nvar STRATEGY_SORT_ORDER_OTP_PREF = makeSortingOrderMap([\n  \"email_code\",\n  \"email_link\",\n  \"phone_code\",\n  \"passkey\",\n  \"password\"\n]);\nvar makeSortingFunction = (sortingMap) => (a, b) => {\n  const orderA = sortingMap[a.strategy];\n  const orderB = sortingMap[b.strategy];\n  if (orderA === void 0 || orderB === void 0) {\n    return 0;\n  }\n  return orderA - orderB;\n};\nvar passwordPrefFactorComparator = makeSortingFunction(STRATEGY_SORT_ORDER_PASSWORD_PREF);\nvar otpPrefFactorComparator = makeSortingFunction(STRATEGY_SORT_ORDER_OTP_PREF);\nvar findFactorForIdentifier = (i) => (f) => {\n  return \"safeIdentifier\" in f && f.safeIdentifier === i;\n};\nfunction determineStartingSignInFactor(firstFactors, identifier, preferredSignInStrategy) {\n  if (!firstFactors || firstFactors.length === 0) {\n    return null;\n  }\n  return preferredSignInStrategy === \"password\" ? determineStrategyWhenPasswordIsPreferred(firstFactors, identifier) : determineStrategyWhenOTPIsPreferred(firstFactors, identifier);\n}\nfunction findPasskeyStrategy(factors) {\n  if ((0,_clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_18__.isWebAuthnSupported)()) {\n    const passkeyFactor = factors.find(({ strategy }) => strategy === \"passkey\");\n    if (passkeyFactor) {\n      return passkeyFactor;\n    }\n  }\n  return null;\n}\nfunction determineStrategyWhenPasswordIsPreferred(factors, identifier) {\n  const passkeyFactor = findPasskeyStrategy(factors);\n  if (passkeyFactor) {\n    return passkeyFactor;\n  }\n  const selected = factors.sort(passwordPrefFactorComparator)[0];\n  if (selected.strategy === \"password\") {\n    return selected;\n  }\n  return factors.find(findFactorForIdentifier(identifier)) || selected || null;\n}\nfunction determineStrategyWhenOTPIsPreferred(factors, identifier) {\n  const passkeyFactor = findPasskeyStrategy(factors);\n  if (passkeyFactor) {\n    return passkeyFactor;\n  }\n  const sortedBasedOnPrefFactor = factors.sort(otpPrefFactorComparator);\n  const forIdentifier = sortedBasedOnPrefFactor.find(findFactorForIdentifier(identifier));\n  if (forIdentifier) {\n    return forIdentifier;\n  }\n  const firstBasedOnPref = sortedBasedOnPrefFactor[0];\n  if (firstBasedOnPref.strategy === \"email_link\") {\n    return firstBasedOnPref;\n  }\n  return factors.find(findFactorForIdentifier(identifier)) || firstBasedOnPref || null;\n}\nfunction determineStartingSignInSecondFactor(secondFactors) {\n  if (!secondFactors || secondFactors.length === 0) {\n    return null;\n  }\n  const totpFactor = secondFactors.find((f) => f.strategy === \"totp\");\n  if (totpFactor) {\n    return totpFactor;\n  }\n  const phoneCodeFactor = secondFactors.find((f) => f.strategy === \"phone_code\");\n  if (phoneCodeFactor) {\n    return phoneCodeFactor;\n  }\n  return secondFactors[0];\n}\n\n// src/internals/machines/utils/assert.ts\nfunction assertIsDefined(value, label) {\n  if (value === void 0 || value === null) {\n    throw new Error(`${label || value} is not defined`);\n  }\n}\nfunction assertActorEventError(event) {\n  if (\"error\" in event === false) {\n    throw new Error(`Expected an error event, got \"${event.type}\"`);\n  }\n}\n\n// src/internals/machines/sign-in/verification.types.ts\nvar SignInVerificationDelays = {\n  resendableTimeout: 1e3\n  // 1 second\n};\n\n// src/internals/machines/sign-in/verification.machine.ts\nvar isNonPreparableStrategy = (strategy) => {\n  if (!strategy) {\n    return false;\n  }\n  return [\"passkey\", \"password\"].includes(strategy);\n};\nvar SignInVerificationMachineId = \"SignInVerification\";\nvar SignInVerificationMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `determineStartingFactor` must be overridden\"))\n    ),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `prepare` must be overridden\"))\n    ),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `attempt` must be overridden\"))\n    ),\n    attemptPasskey: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(({ input: { parent, flow } }) => {\n      return parent.getSnapshot().context.clerk.client.signIn.authenticateWithPasskey({\n        flow\n      });\n    })\n  },\n  actions: {\n    resendableTick: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ context }) => ({\n      resendable: context.resendableAfter === 0,\n      resendableAfter: context.resendableAfter > 0 ? context.resendableAfter - 1 : context.resendableAfter\n    })),\n    resendableReset: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      resendable: false,\n      resendableAfter: RESENDABLE_COUNTDOWN_DEFAULT\n    }),\n    validateRegisteredStrategies: ({ context }) => {\n      var _a;\n      const clerk = context.parent.getSnapshot().context.clerk;\n      if ((_a = clerk.__unstable__environment) == null ? void 0 : _a.isProduction()) {\n        return;\n      }\n      if (false) {}\n    },\n    sendToNext: ({ context, event }) => context.parent.send({ type: \"NEXT\", resource: event.output }),\n    sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    ),\n    setConsoleError: ({ event }) => {\n      if (true) {\n        return;\n      }\n      assertActorEventError(event);\n      const error = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isClerkAPIResponseError)(event.error) ? event.error.errors[0].longMessage : event.error.message;\n      console.error(`Unable to fulfill the prepare or attempt request for the sign-in verification.\n      Error: ${error}\n      Please open an issue if you continue to run into this issue.`);\n    }\n  },\n  guards: {\n    isResendable: ({ context }) => context.resendable || context.resendableAfter === 0,\n    isNeverResendable: ({ context }) => {\n      var _a;\n      return isNonPreparableStrategy((_a = context.currentFactor) == null ? void 0 : _a.strategy);\n    }\n  },\n  delays: SignInVerificationDelays,\n  types: {}\n}).createMachine({\n  id: SignInVerificationMachineId,\n  context: ({ input }) => ({\n    currentFactor: null,\n    basePath: input.basePath || SIGN_IN_DEFAULT_BASE_PATH,\n    formRef: input.formRef,\n    loadingStep: \"verifications\",\n    parent: input.parent,\n    registeredStrategies: /* @__PURE__ */ new Set(),\n    resendable: false,\n    resendableAfter: RESENDABLE_COUNTDOWN_DEFAULT\n  }),\n  initial: \"Init\",\n  on: {\n    \"NAVIGATE.PREVIOUS\": \".Hist\",\n    \"STRATEGY.REGISTER\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        registeredStrategies: ({ context, event }) => context.registeredStrategies.add(event.factor)\n      })\n    },\n    \"STRATEGY.UNREGISTER\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        registeredStrategies: ({ context, event }) => {\n          context.registeredStrategies.delete(event.factor);\n          return context.registeredStrategies;\n        }\n      })\n    }\n  },\n  states: {\n    Init: {\n      tags: [\"state:preparing\", \"state:loading\"],\n      invoke: {\n        id: \"determineStartingFactor\",\n        src: \"determineStartingFactor\",\n        input: ({ context }) => ({\n          parent: context.parent\n        }),\n        onDone: {\n          target: \"Preparing\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n            currentFactor: ({ event }) => event.output\n          })\n        },\n        onError: {\n          target: \"Preparing\",\n          actions: [\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Clerk [Sign In Verification]: Error determining starting factor\"),\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n              currentFactor: { strategy: \"password\" }\n            })\n          ]\n        }\n      }\n    },\n    Preparing: {\n      tags: [\"state:preparing\", \"state:loading\"],\n      invoke: {\n        id: \"prepare\",\n        src: \"prepare\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          resendable: context.resendable,\n          params: {\n            ...context.currentFactor,\n            redirectUrl: `${window.location.origin}${context.basePath}${MAGIC_LINK_VERIFY_PATH_ROUTE}`\n          }\n        }),\n        onDone: {\n          actions: \"resendableReset\",\n          target: \"Pending\"\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"setConsoleError\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        \"AUTHENTICATE.PASSKEY\": {\n          target: \"AttemptingPasskey\",\n          reenter: true\n        },\n        \"NAVIGATE.CHOOSE_STRATEGY\": \"ChooseStrategy\",\n        \"NAVIGATE.FORGOT_PASSWORD\": \"ChooseStrategy\",\n        RETRY: \"Preparing\",\n        SUBMIT: {\n          target: \"Attempting\",\n          reenter: true\n        }\n      },\n      initial: \"Init\",\n      states: {\n        Init: {\n          description: \"Marks appropriate factors as never resendable.\",\n          always: [\n            {\n              guard: \"isNeverResendable\",\n              target: \"NeverResendable\"\n            },\n            {\n              target: \"NotResendable\"\n            }\n          ]\n        },\n        Resendable: {\n          description: \"Waiting for user to retry\"\n        },\n        NeverResendable: {\n          description: \"Handles never resendable\",\n          on: {\n            RETRY: {\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Never retriable\")\n            }\n          }\n        },\n        NotResendable: {\n          description: \"Handle countdowns\",\n          on: {\n            RETRY: {\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(({ context }) => `Not retriable; Try again in ${context.resendableAfter}s`)\n            }\n          },\n          after: {\n            resendableTimeout: [\n              {\n                description: \"Set as retriable if countdown is 0\",\n                guard: \"isResendable\",\n                actions: \"resendableTick\",\n                target: \"Resendable\"\n              },\n              {\n                description: \"Continue countdown if not retriable\",\n                actions: \"resendableTick\",\n                target: \"NotResendable\",\n                reenter: true\n              }\n            ]\n          }\n        }\n      },\n      after: {\n        3e3: {\n          actions: \"validateRegisteredStrategies\"\n        }\n      }\n    },\n    ChooseStrategy: {\n      description: \"Handles both choose strategy and forgot password as the latter is similar in functionality\",\n      tags: [\"state:choose-strategy\", \"state:forgot-password\"],\n      on: {\n        \"STRATEGY.UPDATE\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ currentFactor: ({ event }) => event.factor || null }),\n          target: \"Preparing\"\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          currentFactor: context.currentFactor,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"setConsoleError\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingPasskey: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptPasskey\",\n        src: \"attemptPasskey\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          flow: \"discoverable\"\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    Hist: {\n      type: \"history\"\n    }\n  }\n});\nvar SignInFirstFactorMachine = SignInVerificationMachine.provide({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(async ({ input }) => {\n      var _a;\n      const clerk = input.parent.getSnapshot().context.clerk;\n      return Promise.resolve(\n        determineStartingSignInFactor(\n          clerk.client.signIn.supportedFirstFactors,\n          clerk.client.signIn.identifier,\n          (_a = clerk.__unstable__environment) == null ? void 0 : _a.displayConfig.preferredSignInStrategy\n        )\n      );\n    }),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(async ({ input }) => {\n      const { params, parent, resendable } = input;\n      const clerk = parent.getSnapshot().context.clerk;\n      const currentVerificationExpiration = clerk.client.signIn.firstFactorVerification.expireAt;\n      const needsPrepare = resendable || !currentVerificationExpiration || currentVerificationExpiration < /* @__PURE__ */ new Date();\n      if (isNonPreparableStrategy(params == null ? void 0 : params.strategy) || !needsPrepare) {\n        return Promise.resolve(clerk.client.signIn);\n      }\n      assertIsDefined(params, \"First factor params\");\n      return await clerk.client.signIn.prepareFirstFactor(params);\n    }),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(async ({ input }) => {\n      var _a, _b, _c, _d, _e;\n      const { currentFactor, fields, parent } = input;\n      assertIsDefined(currentFactor, \"Current factor\");\n      let attemptParams;\n      const strategy = currentFactor.strategy;\n      const code = (_a = fields.get(\"code\")) == null ? void 0 : _a.value;\n      const password = (_b = fields.get(\"password\")) == null ? void 0 : _b.value;\n      switch (strategy) {\n        case \"passkey\": {\n          return await parent.getSnapshot().context.clerk.client.signIn.authenticateWithPasskey();\n        }\n        case \"password\": {\n          assertIsDefined(password, \"Password\");\n          attemptParams = {\n            strategy,\n            password\n          };\n          break;\n        }\n        case \"reset_password_phone_code\":\n        case \"reset_password_email_code\": {\n          assertIsDefined(code, \"Code for resetting phone/email\");\n          attemptParams = {\n            strategy,\n            code,\n            password\n          };\n          break;\n        }\n        case \"phone_code\":\n        case \"email_code\": {\n          assertIsDefined(code, \"Code for phone/email\");\n          attemptParams = {\n            strategy,\n            code\n          };\n          break;\n        }\n        case \"web3_metamask_signature\": {\n          const signature = (_c = fields.get(\"signature\")) == null ? void 0 : _c.value;\n          assertIsDefined(signature, \"Web3 Metamask signature\");\n          attemptParams = {\n            strategy,\n            signature\n          };\n          break;\n        }\n        case \"web3_coinbase_wallet_signature\": {\n          const signature = (_d = fields.get(\"signature\")) == null ? void 0 : _d.value;\n          assertIsDefined(signature, \"Web3 Coinbase Wallet signature\");\n          attemptParams = {\n            strategy,\n            signature\n          };\n          break;\n        }\n        case \"web3_okx_wallet_signature\": {\n          const signature = (_e = fields.get(\"signature\")) == null ? void 0 : _e.value;\n          assertIsDefined(signature, \"Web3 OKX Wallet signature\");\n          attemptParams = {\n            strategy,\n            signature\n          };\n          break;\n        }\n        default:\n          throw new ClerkElementsRuntimeError(`Invalid strategy: ${strategy}`);\n      }\n      return await parent.getSnapshot().context.clerk.client.signIn.attemptFirstFactor(attemptParams);\n    })\n  }\n});\nvar SignInSecondFactorMachine = SignInVerificationMachine.provide({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(\n      async ({ input }) => Promise.resolve(\n        determineStartingSignInSecondFactor(\n          input.parent.getSnapshot().context.clerk.client.signIn.supportedSecondFactors\n        )\n      )\n    ),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(async ({ input }) => {\n      const { params, parent, resendable } = input;\n      const clerk = parent.getSnapshot().context.clerk;\n      const currentVerificationExpiration = clerk.client.signIn.secondFactorVerification.expireAt;\n      const needsPrepare = resendable || !currentVerificationExpiration || currentVerificationExpiration < /* @__PURE__ */ new Date();\n      assertIsDefined(params, \"Second factor params\");\n      if (params.strategy !== \"phone_code\" || !needsPrepare) {\n        return Promise.resolve(clerk.client.signIn);\n      }\n      return await clerk.client.signIn.prepareSecondFactor({\n        strategy: params.strategy,\n        phoneNumberId: params.phoneNumberId\n      });\n    }),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(async ({ input }) => {\n      var _a;\n      const { fields, parent, currentFactor } = input;\n      const code = (_a = fields.get(\"code\")) == null ? void 0 : _a.value;\n      assertIsDefined(currentFactor, \"Current factor\");\n      assertIsDefined(code, \"Code\");\n      return await parent.getSnapshot().context.clerk.client.signIn.attemptSecondFactor({\n        strategy: currentFactor.strategy,\n        code\n      });\n    })\n  }\n});\n\n// src/internals/machines/sign-in/router.machine.ts\n\n\n\n\n// src/internals/machines/third-party/third-party.actors.ts\n\n\n// src/internals/machines/utils/clerkjs.ts\nfunction isClerkJSEvent(eventObj, event) {\n  return Object.values(eventObj).includes(event);\n}\nvar ClerkJSNavigationEvent = {\n  complete: \"CLERKJS.NAVIGATE.COMPLETE\",\n  signUp: \"CLERKJS.NAVIGATE.SIGN_UP\",\n  continue: \"CLERKJS.NAVIGATE.CONTINUE\",\n  generic: \"CLERKJS.NAVIGATE.GENERIC\",\n  resetPassword: \"CLERKJS.NAVIGATE.RESET_PASSWORD\",\n  signIn: \"CLERKJS.NAVIGATE.SIGN_IN\",\n  verification: \"CLERKJS.NAVIGATE.VERIFICATION\"\n};\nfunction isClerkJSNavigationEvent(event) {\n  return isClerkJSEvent(ClerkJSNavigationEvent, event);\n}\n\n// src/internals/machines/third-party/third-party.actors.ts\nvar redirect = (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(\n  async ({ input: { flow, params, parent } }) => {\n    const clerk = parent.getSnapshot().context.clerk;\n    return clerk.client[flow].authenticateWithRedirect({\n      redirectUrl: clerk.buildUrlWithAuth(params.redirectUrl || \"/\"),\n      redirectUrlComplete: clerk.buildUrlWithAuth(params.redirectUrlComplete || \"/\"),\n      ...params\n    });\n  }\n);\nvar handleRedirectCallback = (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromCallback)(\n  ({ sendBack, input: parent }) => {\n    var _a, _b;\n    const clerk = parent.getSnapshot().context.clerk;\n    const displayConfig = (_a = clerk.__unstable__environment) == null ? void 0 : _a.displayConfig;\n    const customNavigate = (toEvt) => {\n      const to = toEvt.split(\"/\").slice(-1)[0];\n      if (isClerkJSNavigationEvent(to)) {\n        sendBack({ type: to });\n      } else if (to === (displayConfig == null ? void 0 : displayConfig.signInUrl)) {\n        sendBack({ type: ClerkJSNavigationEvent.signIn });\n      } else if (to === (displayConfig == null ? void 0 : displayConfig.signUpUrl)) {\n        sendBack({ type: ClerkJSNavigationEvent.signUp });\n      } else {\n        sendBack({ type: \"FAILURE\", error: new ClerkElementsRuntimeError(`Unknown navigation event: ${to}`) });\n      }\n      return Promise.resolve();\n    };\n    const loadedClerk = (_b = clerk.clerkjs) != null ? _b : clerk;\n    void loadedClerk.handleRedirectCallback(\n      {\n        continueSignUpUrl: ClerkJSNavigationEvent.continue,\n        firstFactorUrl: ClerkJSNavigationEvent.signIn,\n        resetPasswordUrl: ClerkJSNavigationEvent.resetPassword,\n        secondFactorUrl: ClerkJSNavigationEvent.signIn,\n        verifyEmailAddressUrl: ClerkJSNavigationEvent.verification,\n        verifyPhoneNumberUrl: ClerkJSNavigationEvent.verification,\n        signUpUrl: ClerkJSNavigationEvent.signUp,\n        signInUrl: ClerkJSNavigationEvent.signIn\n      },\n      customNavigate\n    );\n    return () => void 0;\n  }\n);\n\n// src/internals/machines/third-party/third-party.machine.ts\n\nvar ThirdPartyMachineId = \"ThirdParty\";\nvar ThirdPartyMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    handleRedirectCallback,\n    redirect\n  },\n  actions: {\n    logError: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(({ event }) => `Error: ${event.type}`),\n    assignActiveStrategy: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      activeStrategy: ({ event }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"REDIRECT\");\n        return event.params.strategy;\n      }\n    }),\n    unassignActiveStrategy: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      activeStrategy: null\n    }),\n    sendToNext: ({ context }) => context.parent.send({ type: \"NEXT\" }),\n    sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  guards: {\n    isExampleMode: ({ context }) => Boolean(context.parent.getSnapshot().context.exampleMode)\n  },\n  types: {}\n}).createMachine({\n  id: ThirdPartyMachineId,\n  context: ({ input }) => ({\n    activeStrategy: null,\n    basePath: input.basePath,\n    formRef: input.formRef,\n    flow: input.flow,\n    parent: input.parent,\n    loadingStep: \"strategy\"\n  }),\n  initial: \"Idle\",\n  states: {\n    Idle: {\n      description: \"Sets third-party providers if not already set, and waits for a redirect or callback event\",\n      on: {\n        CALLBACK: \"HandlingCallback\",\n        REDIRECT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"isExampleMode\"),\n          target: \"Redirecting\",\n          reenter: true\n        }\n      }\n    },\n    Redirecting: {\n      description: \"Redirects to the third-party provider for authentication\",\n      tags: [\"state:redirect\", \"state:loading\"],\n      entry: [\"assignActiveStrategy\", \"sendToLoading\"],\n      exit: [\"unassignActiveStrategy\", \"sendToLoading\"],\n      invoke: {\n        id: \"redirect\",\n        src: \"redirect\",\n        input: ({ context, event }) => {\n          var _a;\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"REDIRECT\");\n          const legalAcceptedField = (_a = context.formRef.getSnapshot().context.fields.get(\"legalAccepted\")) == null ? void 0 : _a.checked;\n          return {\n            basePath: context.basePath,\n            flow: context.flow,\n            params: {\n              ...event.params,\n              legalAccepted: legalAcceptedField || void 0\n            },\n            parent: context.parent\n          };\n        },\n        onError: {\n          actions: \"setFormErrors\",\n          target: \"Idle\"\n        }\n      }\n    },\n    HandlingCallback: {\n      description: \"Handles the callback from the third-party provider\",\n      tags: [\"state:callback\", \"state:loading\"],\n      invoke: {\n        id: \"handleRedirectCallback\",\n        src: \"handleRedirectCallback\",\n        input: ({ context }) => context.parent,\n        onError: {\n          actions: [\"logError\", \"setFormErrors\"],\n          target: \"Idle\"\n        }\n      },\n      on: {\n        \"CLERKJS.NAVIGATE.*\": {\n          actions: \"sendToNext\",\n          target: \"Idle\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/utils/next.ts\nfunction shouldUseVirtualRouting() {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n  if (!window.next) {\n    return false;\n  }\n  return window.next.version < NEXT_WINDOW_HISTORY_SUPPORT_VERSION;\n}\n\n// src/internals/machines/sign-in/reset-password.machine.ts\n\nvar SignInResetPasswordMachineId = \"SignInResetPasswordMachine\";\nvar SignInResetPasswordMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(\n      ({ input: { fields, parent } }) => {\n        var _a, _b;\n        const password = ((_a = fields.get(\"password\")) == null ? void 0 : _a.value) || \"\";\n        const signOutOfOtherSessions = ((_b = fields.get(\"signOutOfOtherSessions\")) == null ? void 0 : _b.checked) || false;\n        return parent.getSnapshot().context.clerk.client.signIn.resetPassword({ password, signOutOfOtherSessions });\n      }\n    )\n  },\n  actions: {\n    sendToLoading,\n    sendToNext: ({ context, event }) => context.parent.send({ type: \"NEXT\", resource: event.output }),\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  types: {}\n}).createMachine({\n  id: SignInResetPasswordMachineId,\n  context: ({ input }) => ({\n    loadingStep: \"reset-password\",\n    parent: input.parent,\n    formRef: input.formRef\n  }),\n  initial: \"Pending\",\n  states: {\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        SUBMIT: {\n          target: \"Attempting\",\n          reenter: true\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-in/start.machine.ts\n\nvar DISABLEABLE_FIELDS = [\"emailAddress\", \"phoneNumber\"];\nvar SignInStartMachineId = \"SignInStart\";\nvar SignInStartMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    attemptPasskey: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(({ input: { parent, flow } }) => {\n      return parent.getSnapshot().context.clerk.client.signIn.authenticateWithPasskey({\n        flow\n      });\n    }),\n    attemptWeb3: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(\n      ({ input: { parent, strategy } }) => {\n        if (strategy === \"web3_metamask_signature\") {\n          return parent.getSnapshot().context.clerk.client.signIn.authenticateWithMetamask();\n        }\n        if (strategy === \"web3_coinbase_wallet_signature\") {\n          return parent.getSnapshot().context.clerk.client.signIn.authenticateWithCoinbaseWallet();\n        }\n        if (strategy === \"web3_okx_wallet_signature\") {\n          return parent.getSnapshot().context.clerk.client.signIn.authenticateWithOKXWallet();\n        }\n        throw new ClerkElementsRuntimeError(`Unsupported Web3 strategy: ${strategy}`);\n      }\n    ),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(({ input: { fields, parent, params } }) => {\n      var _a;\n      const clerk = parent.getSnapshot().context.clerk;\n      const password = fields.get(\"password\");\n      const identifier = fields.get(\"identifier\");\n      const passwordParams = (password == null ? void 0 : password.value) ? {\n        password: password.value,\n        strategy: \"password\"\n      } : {};\n      return clerk.client.signIn.create({\n        ...passwordParams,\n        ...(params == null ? void 0 : params.ticket) ? params : {\n          identifier: (_a = identifier == null ? void 0 : identifier.value) != null ? _a : \"\"\n        }\n      });\n    })\n  },\n  actions: {\n    sendToNext: ({ context, event }) => {\n      return context.parent.send({ type: \"NEXT\", resource: event == null ? void 0 : event.output });\n    },\n    sendToLoading,\n    setFormDisabledTicketFields: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ context, enqueue }) => {\n      if (!context.ticket) {\n        return;\n      }\n      const currentFields = context.formRef.getSnapshot().context.fields;\n      for (const name of DISABLEABLE_FIELDS) {\n        if (currentFields.has(name)) {\n          enqueue.sendTo(context.formRef, { type: \"FIELD.DISABLE\", field: { name } });\n        }\n      }\n    }),\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  guards: {\n    hasTicket: ({ context }) => Boolean(context.ticket),\n    isExampleMode: ({ context }) => Boolean(context.parent.getSnapshot().context.exampleMode)\n  },\n  types: {}\n}).createMachine({\n  id: SignInStartMachineId,\n  context: ({ input }) => ({\n    basePath: input.basePath || SIGN_IN_DEFAULT_BASE_PATH,\n    parent: input.parent,\n    formRef: input.formRef,\n    loadingStep: \"start\",\n    ticket: input.ticket\n  }),\n  initial: \"Init\",\n  states: {\n    Init: {\n      description: \"Handle ticket, if present; Else, default to Pending state.\",\n      always: [\n        {\n          guard: \"hasTicket\",\n          target: \"Attempting\"\n        },\n        {\n          target: \"Pending\"\n        }\n      ]\n    },\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        SUBMIT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"isExampleMode\"),\n          target: \"Attempting\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskey\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY.AUTOFILL\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskeyAutoFill\",\n          reenter: false\n        },\n        \"AUTHENTICATE.WEB3\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"isExampleMode\"),\n          target: \"AttemptingWeb3\",\n          reenter: true\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => {\n          const defaultParams = {\n            fields: context.formRef.getSnapshot().context.fields,\n            parent: context.parent\n          };\n          const params = context.ticket ? {\n            strategy: \"ticket\",\n            ticket: context.ticket\n          } : {};\n          return { ...defaultParams, params };\n        },\n        onDone: {\n          actions: [\"setFormDisabledTicketFields\", \"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormDisabledTicketFields\", \"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingPasskey: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptPasskey\",\n        src: \"attemptPasskey\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          flow: \"discoverable\"\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingPasskeyAutoFill: {\n      on: {\n        \"AUTHENTICATE.PASSKEY\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskey\",\n          reenter: true\n        },\n        SUBMIT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"isExampleMode\"),\n          target: \"Attempting\",\n          reenter: true\n        }\n      },\n      invoke: {\n        id: \"attemptPasskeyAutofill\",\n        src: \"attemptPasskey\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          flow: \"autofill\"\n        }),\n        onDone: {\n          actions: [\"sendToNext\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingWeb3: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptWeb3\",\n        src: \"attemptWeb3\",\n        input: ({ context, event }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"AUTHENTICATE.WEB3\");\n          return {\n            parent: context.parent,\n            strategy: event.strategy\n          };\n        },\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-in/router.machine.ts\nvar isCurrentPath = (path) => ({ context }, _params) => {\n  var _a, _b;\n  return (_b = (_a = context.router) == null ? void 0 : _a.match(path)) != null ? _b : false;\n};\nvar needsStatus = (status) => ({ context, event }, _) => {\n  var _a, _b;\n  return ((_a = event == null ? void 0 : event.resource) == null ? void 0 : _a.status) === status || ((_b = context.clerk) == null ? void 0 : _b.client.signIn.status) === status;\n};\nvar SignInRouterMachineId = \"SignInRouter\";\nvar SignInRouterMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    firstFactorMachine: SignInFirstFactorMachine,\n    formMachine: FormMachine,\n    resetPasswordMachine: SignInResetPasswordMachine,\n    startMachine: SignInStartMachine,\n    secondFactorMachine: SignInSecondFactorMachine,\n    thirdPartyMachine: ThirdPartyMachine,\n    webAuthnAutofillSupport: (0,xstate__WEBPACK_IMPORTED_MODULE_19__.fromPromise)(() => (0,_clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_18__.isWebAuthnAutofillSupported)())\n  },\n  actions: {\n    clearFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(({ context }) => context.formRef, { type: \"ERRORS.CLEAR\" }),\n    navigateInternal: ({ context }, { path, force = false }) => {\n      if (!context.router) {\n        return;\n      }\n      if (!force && shouldUseVirtualRouting()) {\n        return;\n      }\n      if (context.exampleMode) {\n        return;\n      }\n      const resolvedPath = (0,_clerk_shared_url__WEBPACK_IMPORTED_MODULE_20__.joinURL)(context.router.basePath, path);\n      if (resolvedPath === context.router.pathname()) {\n        return;\n      }\n      context.router.shallowPush(resolvedPath);\n    },\n    navigateExternal: ({ context }, { path }) => {\n      var _a;\n      return (_a = context.router) == null ? void 0 : _a.push(path);\n    },\n    raiseNext: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.O)({ type: \"NEXT\" }),\n    setActive: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, check, context, event }) => {\n      var _a;\n      if (check(\"isExampleMode\")) {\n        return;\n      }\n      const id = event == null ? void 0 : event.id;\n      const lastActiveSessionId = context.clerk.client.lastActiveSessionId;\n      const createdSessionId = ((event == null ? void 0 : event.resource) || context.clerk.client.signIn).createdSessionId;\n      const session = id || createdSessionId || lastActiveSessionId || null;\n      void context.clerk.setActive({\n        session,\n        redirectUrl: context.clerk.buildAfterSignInUrl({\n          params: (_a = context.router) == null ? void 0 : _a.searchParams()\n        })\n      });\n      enqueue.raise({ type: \"RESET\" }, { delay: 2e3 });\n    }),\n    setError: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      error: (_, { error }) => {\n        if (error) {\n          return error;\n        }\n        return new ClerkElementsRuntimeError(\"Unknown error\");\n      }\n    }),\n    setFormErrors: ({ context }, params) => (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(context.formRef, {\n      type: \"ERRORS.SET\",\n      error: params.error\n    }),\n    setFormOAuthErrors: ({ context }) => {\n      const errorOrig = context.clerk.client.signIn.firstFactorVerification.error;\n      if (!errorOrig) {\n        return;\n      }\n      let error;\n      switch (errorOrig.code) {\n        case ERROR_CODES.NOT_ALLOWED_TO_SIGN_UP:\n        case ERROR_CODES.OAUTH_ACCESS_DENIED:\n        case ERROR_CODES.NOT_ALLOWED_ACCESS:\n        case ERROR_CODES.SAML_USER_ATTRIBUTE_MISSING:\n        case ERROR_CODES.OAUTH_EMAIL_DOMAIN_RESERVED_BY_SAML:\n        case ERROR_CODES.USER_LOCKED:\n        case ERROR_CODES.ENTERPRISE_SSO_USER_ATTRIBUTE_MISSING:\n        case ERROR_CODES.ENTERPRISE_SSO_EMAIL_ADDRESS_DOMAIN_MISMATCH:\n        case ERROR_CODES.ENTERPRISE_SSO_HOSTED_DOMAIN_MISMATCH:\n        case ERROR_CODES.SAML_EMAIL_ADDRESS_DOMAIN_MISMATCH:\n        case ERROR_CODES.ORGANIZATION_MEMBERSHIP_QUOTA_EXCEEDED_FOR_SSO:\n          error = new ClerkElementsError(errorOrig.code, errorOrig.longMessage || \"\");\n          break;\n        default:\n          error = new ClerkElementsError(\n            \"unable_to_complete\",\n            \"Unable to complete action at this time. If the problem persists please contact support.\"\n          );\n      }\n      context.formRef.send({\n        type: \"ERRORS.SET\",\n        error\n      });\n    },\n    transfer: ({ context }) => {\n      var _a;\n      const searchParams = new URLSearchParams({ __clerk_transfer: \"1\" });\n      (_a = context.router) == null ? void 0 : _a.push(`${context.signUpPath}?${searchParams}`);\n    }\n  },\n  guards: {\n    hasAuthenticatedViaClerkJS: ({ context }) => Boolean(context.clerk.client.signIn.status === null && context.clerk.client.lastActiveSessionId),\n    hasOAuthError: ({ context }) => {\n      var _a, _b, _c, _d;\n      return Boolean((_d = (_c = (_b = (_a = context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signIn) == null ? void 0 : _c.firstFactorVerification) == null ? void 0 : _d.error);\n    },\n    hasResource: ({ context }) => {\n      var _a, _b, _c;\n      return Boolean((_c = (_b = (_a = context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signIn) == null ? void 0 : _c.status);\n    },\n    hasTicket: ({ context }) => Boolean(context.ticket),\n    isLoggedInAndSingleSession: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.D)([\"isLoggedIn\", \"isSingleSessionMode\", (0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"isExampleMode\")]),\n    isActivePathRoot: isCurrentPath(\"/\"),\n    isComplete: ({ context, event }) => {\n      const resource = event == null ? void 0 : event.resource;\n      const signIn = context.clerk.client.signIn;\n      return (resource == null ? void 0 : resource.status) === \"complete\" && Boolean(resource == null ? void 0 : resource.createdSessionId) || signIn.status === \"complete\" && Boolean(signIn.createdSessionId);\n    },\n    isLoggedIn: ({ context }) => {\n      var _a;\n      return Boolean((_a = context.clerk) == null ? void 0 : _a.user);\n    },\n    isSingleSessionMode: ({ context }) => {\n      var _a, _b;\n      return Boolean((_b = (_a = context.clerk) == null ? void 0 : _a.__unstable__environment) == null ? void 0 : _b.authConfig.singleSessionMode);\n    },\n    isExampleMode: ({ context }) => Boolean(context.exampleMode),\n    needsStart: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.F)([(0,xstate__WEBPACK_IMPORTED_MODULE_21__.E)(\"hasResource\"), \"statusNeedsIdentifier\", isCurrentPath(\"/\")]),\n    needsFirstFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.D)([\"statusNeedsFirstFactor\", isCurrentPath(\"/continue\")]),\n    needsSecondFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.D)([\"statusNeedsSecondFactor\", isCurrentPath(\"/continue\")]),\n    needsCallback: isCurrentPath(SSO_CALLBACK_PATH_ROUTE),\n    needsChooseSession: isCurrentPath(CHOOSE_SESSION_PATH_ROUTE),\n    needsNewPassword: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.D)([\"statusNeedsNewPassword\", isCurrentPath(\"/new-password\")]),\n    statusNeedsIdentifier: needsStatus(\"needs_identifier\"),\n    statusNeedsFirstFactor: needsStatus(\"needs_first_factor\"),\n    statusNeedsSecondFactor: needsStatus(\"needs_second_factor\"),\n    statusNeedsNewPassword: needsStatus(\"needs_new_password\")\n  },\n  types: {}\n}).createMachine({\n  id: SignInRouterMachineId,\n  // @ts-expect-error - Set in INIT event\n  context: {},\n  initial: \"Idle\",\n  on: {\n    \"AUTHENTICATE.OAUTH\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, ({ context, event }) => {\n        var _a, _b, _c, _d;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: event.strategy,\n            redirectUrl: `${((_a = context.router) == null ? void 0 : _a.mode) === ROUTING.virtual ? (_b = context.clerk.__unstable__environment) == null ? void 0 : _b.displayConfig.signInUrl : (_c = context.router) == null ? void 0 : _c.basePath}${SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: context.clerk.buildAfterSignInUrl({\n              params: (_d = context.router) == null ? void 0 : _d.searchParams()\n            })\n          }\n        };\n      })\n    },\n    \"AUTHENTICATE.SAML\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, ({ context }) => {\n        var _a, _b, _c, _d, _e;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: \"saml\",\n            identifier: (_a = context.formRef.getSnapshot().context.fields.get(\"identifier\")) == null ? void 0 : _a.value,\n            redirectUrl: `${((_b = context.router) == null ? void 0 : _b.mode) === ROUTING.virtual ? (_c = context.clerk.__unstable__environment) == null ? void 0 : _c.displayConfig.signInUrl : (_d = context.router) == null ? void 0 : _d.basePath}${SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: context.clerk.buildAfterSignInUrl({\n              params: (_e = context.router) == null ? void 0 : _e.searchParams()\n            })\n          }\n        };\n      })\n    },\n    \"AUTHENTICATE.ENTERPRISE_SSO\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, ({ context }) => {\n        var _a, _b, _c, _d, _e;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: \"enterprise_sso\",\n            identifier: (_a = context.formRef.getSnapshot().context.fields.get(\"identifier\")) == null ? void 0 : _a.value,\n            redirectUrl: `${((_b = context.router) == null ? void 0 : _b.mode) === ROUTING.virtual ? (_c = context.clerk.__unstable__environment) == null ? void 0 : _c.displayConfig.signInUrl : (_d = context.router) == null ? void 0 : _d.basePath}${SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: context.clerk.buildAfterSignInUrl({\n              params: (_e = context.router) == null ? void 0 : _e.searchParams()\n            })\n          }\n        };\n      })\n    },\n    \"FORM.ATTACH\": {\n      description: \"Attach/re-attach the form to the router.\",\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, event }) => {\n        enqueue.assign({\n          formRef: event.formRef\n        });\n        enqueue.raise({ type: \"RESET.STEP\" });\n      })\n    },\n    \"NAVIGATE.PREVIOUS\": \".Hist\",\n    \"NAVIGATE.START\": \".Start\",\n    LOADING: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => ({\n        loading: {\n          isLoading: event.isLoading,\n          step: event.step,\n          strategy: event.strategy,\n          action: event.action\n        }\n      }))\n    },\n    RESET: \".Idle\"\n  },\n  states: {\n    Idle: {\n      invoke: {\n        id: \"webAuthnAutofill\",\n        src: \"webAuthnAutofillSupport\",\n        onDone: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ webAuthnAutofillSupport: ({ event }) => event.output })\n        }\n      },\n      on: {\n        INIT: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => {\n            var _a;\n            const searchParams = (_a = event.router) == null ? void 0 : _a.searchParams();\n            return {\n              clerk: event.clerk,\n              exampleMode: event.exampleMode || false,\n              formRef: event.formRef,\n              loading: {\n                isLoading: false\n              },\n              router: event.router,\n              signUpPath: event.signUpPath || SIGN_UP_DEFAULT_BASE_PATH,\n              ticket: (searchParams == null ? void 0 : searchParams.get(SEARCH_PARAMS.ticket)) || void 0\n            };\n          }),\n          target: \"Init\"\n        }\n      }\n    },\n    Init: {\n      entry: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ context, enqueue, self }) => {\n        var _a, _b;\n        if (!self.getSnapshot().children[ThirdPartyMachineId]) {\n          enqueue.spawnChild(\"thirdPartyMachine\", {\n            id: ThirdPartyMachineId,\n            systemId: ThirdPartyMachineId,\n            input: {\n              basePath: (_b = (_a = context.router) == null ? void 0 : _a.basePath) != null ? _b : SIGN_IN_DEFAULT_BASE_PATH,\n              flow: \"signIn\",\n              formRef: context.formRef,\n              parent: self\n            }\n          });\n        }\n      }),\n      always: [\n        {\n          guard: \"needsCallback\",\n          target: \"Callback\"\n        },\n        {\n          guard: \"needsChooseSession\",\n          target: \"ChooseSession\"\n        },\n        {\n          guard: \"isComplete\",\n          actions: \"setActive\"\n        },\n        {\n          guard: \"isLoggedInAndSingleSession\",\n          actions: [\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Already logged in\"),\n            {\n              type: \"navigateExternal\",\n              params: ({ context }) => {\n                var _a;\n                return {\n                  path: context.clerk.buildAfterSignInUrl({\n                    params: (_a = context.router) == null ? void 0 : _a.searchParams()\n                  })\n                };\n              }\n            }\n          ]\n        },\n        {\n          guard: \"needsStart\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        },\n        {\n          guard: \"needsFirstFactor\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/continue\" } },\n          target: \"FirstFactor\"\n        },\n        {\n          guard: \"needsSecondFactor\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/continue\" } },\n          target: \"SecondFactor\"\n        },\n        {\n          guard: \"needsNewPassword\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/reset-password\" } },\n          target: \"ResetPassword\"\n        },\n        {\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        },\n        {\n          guard: \"hasTicket\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        }\n      ]\n    },\n    Start: {\n      tags: [\"step:start\"],\n      exit: \"clearFormErrors\",\n      invoke: {\n        id: \"start\",\n        src: \"startMachine\",\n        input: ({ context, self }) => {\n          var _a;\n          return {\n            basePath: (_a = context.router) == null ? void 0 : _a.basePath,\n            formRef: context.formRef,\n            parent: self,\n            ticket: context.ticket\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"Start\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        \"AUTHENTICATE.PASSKEY.AUTOFILL\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        \"AUTHENTICATE.WEB3\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ]\n      }\n    },\n    FirstFactor: {\n      tags: [\"step:first-factor\", \"step:verifications\"],\n      invoke: {\n        id: \"firstFactor\",\n        src: \"firstFactorMachine\",\n        input: ({ context, self }) => {\n          var _a;\n          return {\n            formRef: context.formRef,\n            parent: self,\n            basePath: (_a = context.router) == null ? void 0 : _a.basePath\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"AUTHENTICATE.PASSKEY\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event)\n        },\n        \"RESET.STEP\": {\n          target: \"FirstFactor\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ],\n        \"STRATEGY.UPDATE\": {\n          description: \"Send event to verification machine to update the current strategy.\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n          target: \".Idle\"\n        }\n      },\n      initial: \"Idle\",\n      states: {\n        Idle: {\n          on: {\n            \"NAVIGATE.FORGOT_PASSWORD\": {\n              description: \"Navigate to forgot password screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n              target: \"ForgotPassword\"\n            },\n            \"NAVIGATE.CHOOSE_STRATEGY\": {\n              description: \"Navigate to choose strategy screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n              target: \"ChoosingStrategy\"\n            }\n          }\n        },\n        ChoosingStrategy: {\n          tags: [\"step:choose-strategy\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": {\n              description: \"Go to Idle, and also tell firstFactor to go to Pending\",\n              target: \"Idle\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", { type: \"NAVIGATE.PREVIOUS\" })\n            }\n          }\n        },\n        ForgotPassword: {\n          tags: [\"step:forgot-password\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": \"Idle\"\n          }\n        }\n      }\n    },\n    SecondFactor: {\n      tags: [\"step:second-factor\", \"step:verifications\"],\n      invoke: {\n        id: \"secondFactor\",\n        src: \"secondFactorMachine\",\n        input: ({ context, self }) => ({\n          formRef: context.formRef,\n          parent: self\n        }),\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"SecondFactor\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ],\n        \"STRATEGY.UPDATE\": {\n          description: \"Send event to verification machine to update the current strategy.\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", ({ event }) => event),\n          target: \".Idle\"\n        }\n      },\n      initial: \"Idle\",\n      states: {\n        Idle: {\n          on: {\n            \"NAVIGATE.CHOOSE_STRATEGY\": {\n              description: \"Navigate to choose strategy screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", ({ event }) => event),\n              target: \"ChoosingStrategy\"\n            }\n          }\n        },\n        ChoosingStrategy: {\n          tags: [\"step:choose-strategy\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": {\n              description: \"Go to Idle, and also tell firstFactor to go to Pending\",\n              target: \"Idle\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", { type: \"NAVIGATE.PREVIOUS\" })\n            }\n          }\n        }\n      }\n    },\n    ResetPassword: {\n      tags: [\"step:reset-password\"],\n      invoke: {\n        id: \"resetPassword\",\n        src: \"resetPasswordMachine\",\n        input: ({ context, self }) => ({\n          formRef: context.formRef,\n          parent: self\n        }),\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"ResetPassword\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          }\n        ]\n      }\n    },\n    Callback: {\n      tags: [\"step:callback\"],\n      entry: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, { type: \"CALLBACK\" }),\n      on: {\n        NEXT: [\n          {\n            guard: \"hasOAuthError\",\n            actions: [\"setFormOAuthErrors\", { type: \"navigateInternal\", params: { force: true, path: \"/\" } }],\n            target: \"Start\"\n          },\n          {\n            guard: (0,xstate__WEBPACK_IMPORTED_MODULE_21__.F)([\"isLoggedIn\", \"isComplete\", \"hasAuthenticatedViaClerkJS\"]),\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsIdentifier\",\n            actions: \"transfer\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ]\n      }\n    },\n    ChooseSession: {\n      tags: [\"step:choose-session\"],\n      on: {\n        \"SESSION.SET_ACTIVE\": {\n          actions: {\n            type: \"setActive\",\n            params: ({ event }) => ({ id: event.id })\n          }\n        }\n      }\n    },\n    Error: {\n      tags: [\"step:error\"],\n      on: {\n        NEXT: {\n          target: \"Start\",\n          actions: \"clearFormErrors\"\n        }\n      }\n    },\n    Hist: {\n      type: \"history\",\n      exit: \"clearFormErrors\"\n    }\n  }\n});\n\n// src/internals/machines/utils/formatters.ts\n\nfunction formatName(...args) {\n  switch (args.length) {\n    case 0:\n      return void 0;\n    case 1:\n      return (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.titleize)(args[0]);\n    default:\n      return args.filter(Boolean).map(_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.titleize).join(\" \");\n  }\n}\nfunction formatSalutation({\n  firstName,\n  lastName,\n  identifier\n}) {\n  return firstName && formatName(firstName) || lastName && formatName(lastName) || identifier || \"\";\n}\n\n// src/internals/machines/sign-in/router.selectors.ts\nfunction SignInSafeIdentifierSelectorForStrategy(strategy) {\n  return (s) => {\n    var _a, _b, _c;\n    const signIn = (_a = s.context.clerk) == null ? void 0 : _a.client.signIn;\n    if (strategy) {\n      const matchingFactors = [\n        ...(_b = signIn.supportedFirstFactors) != null ? _b : [],\n        ...(_c = signIn.supportedSecondFactors) != null ? _c : []\n      ].filter((f) => f.strategy === strategy);\n      const matchingFactorForIdentifier = signIn.identifier && matchingFactors.length > 0 ? matchingFactors.find((f) => \"safeIdentifier\" in f && f.safeIdentifier === signIn.identifier) : null;\n      const matchingFactorForStrategy = matchingFactors[0];\n      if (matchingFactorForIdentifier && \"safeIdentifier\" in matchingFactorForIdentifier) {\n        return matchingFactorForIdentifier.safeIdentifier;\n      }\n      if (matchingFactorForStrategy && \"safeIdentifier\" in matchingFactorForStrategy) {\n        return matchingFactorForStrategy.safeIdentifier;\n      }\n    }\n    return signIn.identifier || \"\";\n  };\n}\nfunction SignInSalutationSelector(s) {\n  var _a, _b, _c;\n  const signIn = (_a = s.context.clerk) == null ? void 0 : _a.client.signIn;\n  return formatSalutation({\n    firstName: (_b = signIn == null ? void 0 : signIn.userData) == null ? void 0 : _b.firstName,\n    identifier: signIn == null ? void 0 : signIn.identifier,\n    lastName: (_c = signIn == null ? void 0 : signIn.userData) == null ? void 0 : _c.lastName\n  });\n}\n\n// src/internals/machines/sign-in/router.types.ts\nvar SignInRouterSystemId = {\n  start: \"start\",\n  firstFactor: \"firstFactor\",\n  secondFactor: \"secondFactor\",\n  resetPassword: \"resetPassword\"\n};\n\n// src/react/sign-in/choose-strategy.tsx\n\nvar SignInChooseStrategyCtx = createContextForDomValidation(\"SignInChooseStrategyCtx\");\nfunction SignInChooseStrategy({ asChild, children, ...props }) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeStateFirstFactor = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:first-factor\", \"step:choose-strategy\"],\n    ActiveTagsMode.all\n  );\n  const activeStateSecondFactor = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:second-factor\", \"step:choose-strategy\"],\n    ActiveTagsMode.all\n  );\n  const activeState = activeStateFirstFactor || activeStateSecondFactor;\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategyCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...props, children }) }) : null;\n}\nfunction SignInForgotPassword({ asChild, children, ...props }) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:first-factor\", \"step:forgot-password\"],\n    ActiveTagsMode.all\n  );\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategyCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...props, children }) }) : null;\n}\nvar SUPPORTED_STRATEGY_NAME = \"SignInSupportedStrategy\";\nvar SignInSupportedStrategy = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild, children, name, ...rest }, forwardedRef) => {\n    const routerRef = SignInRouterCtx.useActorRef();\n    const snapshot = routerRef.getSnapshot();\n    const status = snapshot.context.clerk.client.signIn.status;\n    const supportedFirstFactors = status === \"needs_first_factor\" ? snapshot.context.clerk.client.signIn.supportedFirstFactors || [] : [];\n    const supportedSecondFactors = status === \"needs_second_factor\" ? snapshot.context.clerk.client.signIn.supportedSecondFactors || [] : [];\n    const factor = [...supportedFirstFactors, ...supportedSecondFactors].find((factor2) => name === factor2.strategy);\n    const currentFactor = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(\n      snapshot.children[SignInRouterSystemId.firstFactor] || snapshot.children[SignInRouterSystemId.secondFactor],\n      (state) => {\n        var _a;\n        return (_a = state == null ? void 0 : state.context.currentFactor) == null ? void 0 : _a.strategy;\n      }\n    );\n    const sendUpdateStrategyEvent = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n      () => routerRef.send({ type: \"STRATEGY.UPDATE\", factor }),\n      [routerRef, factor]\n    );\n    if (currentFactor === name) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    return factor ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStrategyContext.Provider, { value: { strategy: name }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        ref: forwardedRef,\n        onClick: sendUpdateStrategyEvent,\n        children: children || factor.strategy\n      }\n    ) }) : null;\n  }\n);\nSignInSupportedStrategy.displayName = SUPPORTED_STRATEGY_NAME;\n\n// src/react/sign-in/reset-password.tsx\n\nvar SignInResetPasswordCtx = createContextFromActorRef(\"SignInResetPasswordCtx\");\nfunction SignInResetPassword(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:reset-password\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPasswordInner, { ...props }) : null;\n}\nfunction SignInResetPasswordInner(props) {\n  const ref = useSignInResetPasswordStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPasswordCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-in/sso-callback.tsx\nfunction SignInSSOCallback({ children }) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:callback\");\n  return activeState ? children : null;\n}\n\n// src/react/sign-in/start.tsx\n\nvar SignInStartCtx = createContextFromActorRef(\"SignInStartCtx\");\nfunction SignInStart(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:start\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStartInner, { ...props }) : null;\n}\nfunction SignInStartInner(props) {\n  const ref = useSignInStartStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStartCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-in/verifications.tsx\n\n\n\n// src/internals/machines/utils/strategies.ts\nvar matchStrategy = (current, desired) => {\n  if (!current || !desired) {\n    return false;\n  }\n  if (current === desired) {\n    return true;\n  }\n  return current.startsWith(`${desired}_`);\n};\n\n// src/react/sign-in/verifications.tsx\n\nvar SignInFirstFactorCtx = createContextFromActorRef(\"SignInFirstFactorCtx\");\nvar SignInSecondFactorCtx = createContextFromActorRef(\"SignInSecondFactorCtx\");\nvar strategiesSelector = (state) => {\n  var _a;\n  return (_a = state.context.currentFactor) == null ? void 0 : _a.strategy;\n};\nfunction SignInStrategiesProvider({\n  children,\n  preferred,\n  actorRef,\n  ...props\n}) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const current = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actorRef, strategiesSelector);\n  const isChoosingAltStrategy = useActiveTags(routerRef, [\"step:choose-strategy\", \"step:forgot-password\"]);\n  const isActive = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((name) => current ? matchStrategy(current, name) : false, [current]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(StrategiesContext.Provider, { value: { current, preferred, isActive }, children: isChoosingAltStrategy.active ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: actorRef,\n      ...props,\n      children\n    }\n  ) });\n}\nfunction useFactorCtx() {\n  const firstFactorRef = SignInFirstFactorCtx.useActorRef(true);\n  const secondFactorRef = SignInSecondFactorCtx.useActorRef(true);\n  return firstFactorRef || secondFactorRef;\n}\nfunction SignInStrategy({ children, name }) {\n  const { active } = useStrategy(name);\n  const factorCtx = useFactorCtx();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (factorCtx) {\n      factorCtx.send({ type: \"STRATEGY.REGISTER\", factor: name });\n    }\n    return () => {\n      if ((factorCtx == null ? void 0 : factorCtx.getSnapshot().status) === \"active\") {\n        factorCtx.send({ type: \"STRATEGY.UNREGISTER\", factor: name });\n      }\n    };\n  }, [factorCtx, name]);\n  return active ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStrategyContext.Provider, { value: { strategy: name }, children }) : null;\n}\nfunction SignInVerifications(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const { activeTags: activeRoutes } = useActiveTags(routerRef, [\"step:first-factor\", \"step:second-factor\"]);\n  if (activeRoutes.has(\"step:first-factor\")) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorInner, { ...props });\n  }\n  if (activeRoutes.has(\"step:second-factor\")) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorInner, { ...props });\n  }\n  return null;\n}\nfunction SignInFirstFactor(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:first-factor\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorInner, { ...props }) : null;\n}\nfunction SignInSecondFactor(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:second-factor\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorInner, { ...props }) : null;\n}\nfunction SignInFirstFactorInner(props) {\n  const ref = useSignInFirstFactorStep();\n  if (!ref) {\n    return null;\n  }\n  return ref ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    SignInStrategiesProvider,\n    {\n      actorRef: ref,\n      ...props\n    }\n  ) }) : null;\n}\nfunction SignInSecondFactorInner(props) {\n  const ref = useSignInSecondFactorStep();\n  if (!ref) {\n    return null;\n  }\n  return ref ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    SignInStrategiesProvider,\n    {\n      actorRef: ref,\n      ...props\n    }\n  ) }) : null;\n}\n\n// src/react/sign-in/step.tsx\n\nvar SIGN_IN_STEPS = {\n  start: \"start\",\n  verifications: \"verifications\",\n  \"choose-strategy\": \"choose-strategy\",\n  \"choose-session\": \"choose-session\",\n  \"forgot-password\": \"forgot-password\",\n  \"reset-password\": \"reset-password\",\n  \"sso-callback\": \"sso-callback\"\n};\nfunction SignInStep(props) {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_14__.eventComponentMounted)(\"Elements_SignInStep\", { name: props.name }));\n  switch (props.name) {\n    case SIGN_IN_STEPS.start:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStart, { ...props });\n    case SIGN_IN_STEPS.verifications:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInVerifications, { ...props });\n    case SIGN_IN_STEPS[\"choose-strategy\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategy, { ...props });\n    case SIGN_IN_STEPS[\"forgot-password\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInForgotPassword, { ...props });\n    case SIGN_IN_STEPS[\"reset-password\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPassword, { ...props });\n    case SIGN_IN_STEPS[\"choose-session\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseSession, { ...props });\n    case SIGN_IN_STEPS[\"sso-callback\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSSOCallback, { ...props });\n    default:\n      throw new ClerkElementsRuntimeError(`Invalid step name. Use: ${Object.keys(SIGN_IN_STEPS).join(\",\")}.`);\n  }\n}\n\n// src/react/sign-up/step.tsx\n\n\n\n// src/react/sign-up/continue.tsx\n\nvar SignUpContinueCtx = createContextFromActorRef(\"SignUpContinueCtx\");\nfunction SignUpContinue(props) {\n  const routerRef = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:continue\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinueInner, { ...props }) : null;\n}\nfunction SignUpContinueInner(props) {\n  const ref = useSignUpContinueStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinueCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-up/restricted.tsx\n\nfunction SignUpRestricted(props) {\n  const routerRef = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:restricted\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: routerRef,\n      ...props\n    }\n  ) : null;\n}\n\n// src/react/sign-up/start.tsx\n\nvar SignUpStartCtx = createContextFromActorRef(\"SignUpStartCtx\");\nfunction SignUpStart(props) {\n  const routerRef = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:start\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStartInner, { ...props }) : null;\n}\nfunction SignUpStartInner(props) {\n  const ref = useSignUpStartStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStartCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-up/verifications.tsx\n\nvar SignUpVerificationCtx = createContextFromActorRef(\"SignUpVerificationCtx\");\nfunction SignUpVerifications(props) {\n  const ref = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(ref, \"step:verification\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerifyInner, { ...props }) : null;\n}\nfunction SignUpVerifyInner(props) {\n  const ref = useSignUpVerificationStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerificationCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\nfunction SignUpStrategy({ children, name: tag }) {\n  const ref = SignUpVerificationCtx.useActorRef(true);\n  if (!ref) {\n    throw new Error(\n      '<Strategy> used outside of <SignUp>. Did you mean to `import { Strategy } from \"@clerk/elements/sign-in\"` instead?'\n    );\n  }\n  const { active } = useActiveTags(ref, [\n    `verification:${tag}`,\n    `verification:category:${tag}`\n  ]);\n  return active ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment, { children }) : null;\n}\n\n// src/react/sign-up/step.tsx\n\nvar SIGN_UP_STEPS = {\n  start: \"start\",\n  continue: \"continue\",\n  verifications: \"verifications\",\n  restricted: \"restricted\"\n};\nfunction SignUpStep(props) {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_14__.eventComponentMounted)(\"Elements_SignUpStep\", { name: props.name }));\n  switch (props.name) {\n    case SIGN_UP_STEPS.start:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStart, { ...props });\n    case SIGN_UP_STEPS.continue:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinue, { ...props });\n    case SIGN_UP_STEPS.verifications:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerifications, { ...props });\n    case SIGN_UP_STEPS.restricted:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpRestricted, { ...props });\n    default:\n      throw new ClerkElementsRuntimeError(\n        `Invalid step name. Use 'start', 'continue', 'verifications', or 'restricted'.`\n      );\n  }\n}\n\n// src/react/utils/map-scope-to-strategy.ts\nfunction isProviderStrategyScope(value) {\n  return value.startsWith(\"provider:\");\n}\nfunction mapScopeToStrategy(scope) {\n  if (scope === \"provider:metamask\") {\n    return \"web3_metamask_signature\";\n  }\n  if (scope === \"provider:coinbase_wallet\") {\n    return \"web3_coinbase_wallet_signature\";\n  }\n  if (scope === \"provider:okx_wallet\") {\n    return \"web3_okx_wallet_signature\";\n  }\n  if (scope === \"provider:saml\") {\n    return \"saml\";\n  }\n  if (scope === \"provider:enterprise_sso\") {\n    return \"enterprise_sso\";\n  }\n  const scopeWithoutPrefix = scope.replace(\"provider:\", \"\");\n  return `oauth_${scopeWithoutPrefix}`;\n}\n\n// src/react/common/loading.tsx\n\nfunction isSignInScope(scope) {\n  if (!scope) {\n    return true;\n  }\n  if (scope.startsWith(\"step:\")) {\n    return Object.prototype.hasOwnProperty.call(SIGN_IN_STEPS, scope.replace(\"step:\", \"\"));\n  }\n  return true;\n}\nfunction isSignUpScope(scope) {\n  if (!scope) {\n    return true;\n  }\n  if (scope.startsWith(\"step:\")) {\n    return Object.prototype.hasOwnProperty.call(SIGN_UP_STEPS, scope.replace(\"step:\", \"\"));\n  }\n  return true;\n}\nfunction Loading({ children, scope }) {\n  var _a;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  (_a = clerk.telemetry) == null ? void 0 : _a.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_14__.eventComponentMounted)(\"Elements_Loading\", { scope: scope != null ? scope : false }));\n  const signInRouterRef = SignInRouterCtx.useActorRef(true);\n  const signUpRouterRef = SignUpRouterCtx.useActorRef(true);\n  if (!signInRouterRef && !signUpRouterRef) {\n    throw new ClerkElementsRuntimeError(`<Loading> must be used within a <SignIn> or <SignUp> component.`);\n  }\n  if (signInRouterRef) {\n    if (isSignInScope(scope)) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        SignInLoading,\n        {\n          scope,\n          routerRef: signInRouterRef,\n          children\n        }\n      );\n    } else {\n      throw new ClerkElementsRuntimeError(`Invalid scope \"${scope}\" used for <Loading> inside <SignIn>.`);\n    }\n  }\n  if (signUpRouterRef) {\n    if (isSignUpScope(scope)) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        SignUpLoading,\n        {\n          scope,\n          routerRef: signUpRouterRef,\n          children\n        }\n      );\n    } else {\n      throw new ClerkElementsRuntimeError(`Invalid scope \"${scope}\" used for <Loading> inside <SignUp>.`);\n    }\n  }\n  throw new ClerkElementsRuntimeError(\"Invalid state for <Loading>. Please open an issue.\");\n}\nfunction SignInLoading({ children, scope, routerRef }) {\n  const [isLoading, { step: loadingStep, strategy, action }] = useLoading(routerRef);\n  const tags = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(routerRef, (s) => s.tags);\n  const isStepLoading = (step) => isLoading && loadingStep === step;\n  const isInferredStepLoading = (step) => tags.has(`step:${step}`) && isStepLoading(step);\n  let loadingResult = false;\n  if (scope === \"global\") {\n    loadingResult = isLoading;\n  } else if (scope && isProviderStrategyScope(scope)) {\n    loadingResult = isLoading && loadingStep === void 0 && strategy === mapScopeToStrategy(scope);\n  } else if (scope) {\n    loadingResult = isStepLoading(scope.replace(\"step:\", \"\")) || scope === action;\n  } else {\n    loadingResult = isInferredStepLoading(\"start\") || isInferredStepLoading(\"verifications\") || isInferredStepLoading(\"choose-strategy\") || isInferredStepLoading(\"forgot-password\") || isInferredStepLoading(\"reset-password\");\n  }\n  return children(loadingResult);\n}\nfunction SignUpLoading({ children, scope, routerRef }) {\n  const [isLoading, { step: loadingStep, strategy, action }] = useLoading(routerRef);\n  const tags = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(routerRef, (s) => s.tags);\n  const isStepLoading = (step) => isLoading && loadingStep === step;\n  const isInferredStepLoading = (step) => tags.has(`step:${step}`) && isStepLoading(step);\n  let loadingResult = false;\n  if (scope === \"global\") {\n    loadingResult = isLoading;\n  } else if (scope && isProviderStrategyScope(scope)) {\n    loadingResult = isLoading && loadingStep === void 0 && strategy === mapScopeToStrategy(scope);\n  } else if (scope) {\n    loadingResult = isStepLoading(scope.replace(\"step:\", \"\")) || scope === action;\n  } else {\n    loadingResult = isInferredStepLoading(\"start\") || isInferredStepLoading(\"continue\") || isInferredStepLoading(\"verifications\");\n  }\n  return children(loadingResult);\n}\n\n// src/react/common/link.tsx\n\n\n\nvar paths = {\n  \"sign-in\": \"signInUrl\",\n  \"sign-up\": \"signUpUrl\"\n};\nfunction Link({ navigate, children, ...rest }) {\n  const router = (0,_clerk_shared_router__WEBPACK_IMPORTED_MODULE_22__.useClerkRouter)();\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  const destinationUrl = router.makeDestinationUrlWithPreservedQueryParameters(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    clerk.__internal_getOption(paths[navigate])\n  );\n  if (typeof children === \"function\") {\n    return children({ url: destinationUrl });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    \"a\",\n    {\n      onClick: (e) => {\n        if (router) {\n          e.preventDefault();\n          router.push(destinationUrl);\n        }\n      },\n      href: destinationUrl,\n      ...rest,\n      children\n    }\n  );\n}\n\n\n//# sourceMappingURL=chunk-VY37G23G.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-VY37G23G.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/elements/dist/react/sign-up/index.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@clerk/elements/dist/react/sign-up/index.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Action: () => (/* binding */ SignUpAction),\n/* harmony export */   Captcha: () => (/* binding */ SignUpCaptcha),\n/* harmony export */   Root: () => (/* binding */ SignUpRoot),\n/* harmony export */   SignUp: () => (/* binding */ SignUpRoot),\n/* harmony export */   Step: () => (/* reexport safe */ _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SignUpStep),\n/* harmony export */   Strategy: () => (/* reexport safe */ _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SignUpStrategy)\n/* harmony export */ });\n/* harmony import */ var _chunk_QSYHOU7X_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../chunk-QSYHOU7X.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs\");\n/* harmony import */ var _chunk_QSYHOU7X_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../chunk-QSYHOU7X.mjs */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-QSYHOU7X.mjs\");\n/* harmony import */ var _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../chunk-VY37G23G.mjs */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-VY37G23G.mjs\");\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var _clerk_shared_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/react */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var _xstate_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @xstate/react */ \"(app-pages-browser)/./node_modules/@xstate/react/dist/xstate-react.development.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-59549771.development.esm.js\");\n/* harmony import */ var _clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/underscore */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/underscore.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @clerk/shared/url */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/log-5a7b5528.development.esm.js\");\n/* harmony import */ var _clerk_shared_poller__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @clerk/shared/poller */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/poller.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n\n\n\n// src/react/sign-up/index.ts\n\n\n// src/react/sign-up/root.tsx\n\n\n\n\n\n\n// src/internals/machines/sign-up/continue.machine.ts\n\n\n\n// src/internals/machines/sign-up/utils/fields-to-params.ts\nvar SignUpAdditionalKeys = [\n  \"firstName\",\n  \"lastName\",\n  \"emailAddress\",\n  \"username\",\n  \"password\",\n  \"phoneNumber\",\n  \"legalAccepted\"\n];\nvar signUpKeys = new Set(SignUpAdditionalKeys);\nfunction isSignUpParam(key) {\n  return signUpKeys.has(key);\n}\nfunction fieldsToSignUpParams(fields) {\n  const params = {};\n  fields.forEach(({ value, checked, type }, key) => {\n    if (isSignUpParam(key) && value !== void 0 && type !== \"checkbox\") {\n      params[key] = value;\n    }\n    if (isSignUpParam(key) && checked !== void 0 && type === \"checkbox\") {\n      params[key] = checked;\n    }\n  });\n  return params;\n}\n\n// src/internals/machines/sign-up/continue.machine.ts\nvar SignUpContinueMachineId = \"SignUpContinue\";\nvar SignUpContinueMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_5__.setup)({\n  actors: {\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_6__.fromPromise)(\n      ({ input: { fields, parent } }) => {\n        const params = fieldsToSignUpParams(fields);\n        return parent.getSnapshot().context.clerk.client.signUp.update(params);\n      }\n    )\n  },\n  actions: {\n    setFormErrors: ({ context, event }) => {\n      (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.assertActorEventError)(event);\n      context.formRef.send({\n        type: \"ERRORS.SET\",\n        error: event.error\n      });\n    },\n    markFormAsProgressive: ({ context }) => {\n      const signUp = context.parent.getSnapshot().context.clerk.client.signUp;\n      const missing = signUp.missingFields.map(_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_4__.snakeToCamel);\n      const optional = signUp.optionalFields.map(_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_4__.snakeToCamel);\n      const required = signUp.requiredFields.map(_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_4__.snakeToCamel);\n      const progressiveFieldValues = /* @__PURE__ */ new Map();\n      for (const key of required.concat(optional)) {\n        if (key in signUp) {\n          progressiveFieldValues.set(key, signUp[key]);\n        }\n      }\n      context.formRef.send({\n        type: \"MARK_AS_PROGRESSIVE\",\n        missing,\n        optional,\n        required,\n        defaultValues: progressiveFieldValues\n      });\n    },\n    unmarkFormAsProgressive: ({ context }) => context.formRef.send({ type: \"UNMARK_AS_PROGRESSIVE\" }),\n    sendToNext: ({ context, event }) => context.parent.send({ type: \"NEXT\", resource: event.output }),\n    sendToLoading: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.sendToLoading\n  },\n  guards: {\n    isStatusMissingRequirements: ({ context }) => {\n      var _a, _b, _c;\n      return ((_c = (_b = (_a = context.parent.getSnapshot().context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signUp) == null ? void 0 : _c.status) === \"missing_requirements\";\n    },\n    hasMetPreviousMissingRequirements: ({ context }) => {\n      const signUp = context.parent.getSnapshot().context.clerk.client.signUp;\n      const fields = context.formRef.getSnapshot().context.fields;\n      const signUpMissingFields = signUp.missingFields.map(_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_4__.snakeToCamel);\n      const missingFields = Array.from(context.formRef.getSnapshot().context.fields.keys()).filter((key) => {\n        var _a, _b;\n        return !signUpMissingFields.includes(key) && !((_a = fields.get(key)) == null ? void 0 : _a.value) && !((_b = fields.get(key)) == null ? void 0 : _b.checked);\n      });\n      return missingFields.length === 0;\n    }\n  },\n  types: {}\n}).createMachine({\n  id: SignUpContinueMachineId,\n  context: ({ input }) => ({\n    basePath: input.basePath || _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_UP_DEFAULT_BASE_PATH,\n    formRef: input.formRef,\n    parent: input.parent,\n    loadingStep: \"continue\"\n  }),\n  entry: \"markFormAsProgressive\",\n  onDone: {\n    actions: \"unmarkFormAsProgressive\"\n  },\n  initial: \"Pending\",\n  states: {\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        SUBMIT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.F)([\"hasMetPreviousMissingRequirements\", (0,xstate__WEBPACK_IMPORTED_MODULE_8__.E)(\"isStatusMissingRequirements\")]),\n          target: \"Attempting\",\n          reenter: true\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-up/router.machine.ts\n\n\n\n// src/internals/machines/sign-up/start.machine.ts\n\nvar DISABLEABLE_FIELDS = [\"emailAddress\", \"phoneNumber\"];\nvar SignUpStartMachineId = \"SignUpStart\";\nvar PREFILL_FIELDS = [\"firstName\", \"lastName\", \"emailAddress\", \"username\", \"phoneNumber\"];\nvar SignUpStartMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_5__.setup)({\n  actors: {\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_6__.fromPromise)(({ input: { fields, parent, params } }) => {\n      const fieldParams = fieldsToSignUpParams(fields);\n      return parent.getSnapshot().context.clerk.client.signUp.create({ ...fieldParams, ...params });\n    }),\n    attemptWeb3: (0,xstate__WEBPACK_IMPORTED_MODULE_6__.fromPromise)(\n      ({ input: { parent, strategy } }) => {\n        if (strategy === \"web3_metamask_signature\") {\n          return parent.getSnapshot().context.clerk.client.signUp.authenticateWithMetamask();\n        }\n        if (strategy === \"web3_coinbase_wallet_signature\") {\n          return parent.getSnapshot().context.clerk.client.signUp.authenticateWithCoinbaseWallet();\n        }\n        if (strategy === \"web3_okx_wallet_signature\") {\n          return parent.getSnapshot().context.clerk.client.signUp.authenticateWithOKXWallet();\n        }\n        throw new _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ClerkElementsRuntimeError(`Unsupported Web3 strategy: ${strategy}`);\n      }\n    ),\n    thirdParty: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachine\n  },\n  actions: {\n    sendToNext: ({ context, event }) => context.parent.send({ type: \"NEXT\", resource: event.output }),\n    sendToLoading: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.sendToLoading,\n    setFormRef: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)(({ event }) => {\n      return {\n        formRef: event.formRef\n      };\n    }),\n    setFormDisabledTicketFields: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.b)(({ context, enqueue }) => {\n      if (!context.ticket) {\n        return;\n      }\n      const currentFields = context.formRef.getSnapshot().context.fields;\n      for (const name of DISABLEABLE_FIELDS) {\n        if (currentFields.has(name)) {\n          enqueue.sendTo(context.formRef, { type: \"FIELD.DISABLE\", field: { name } });\n        }\n      }\n    }),\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.assertActorEventError)(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    ),\n    setDefaultFormValues: ({ context }) => {\n      const signUp = context.parent.getSnapshot().context.clerk.client.signUp;\n      const prefilledDefaultValues = /* @__PURE__ */ new Map();\n      for (const key of PREFILL_FIELDS) {\n        if (key in signUp) {\n          prefilledDefaultValues.set(key, signUp[key]);\n        }\n      }\n      context.formRef.send({\n        type: \"PREFILL_DEFAULT_VALUES\",\n        defaultValues: prefilledDefaultValues\n      });\n    }\n  },\n  guards: {\n    isMissingRequirements: ({ context }) => {\n      var _a, _b, _c;\n      return ((_c = (_b = (_a = context.parent.getSnapshot().context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signUp) == null ? void 0 : _c.status) === \"missing_requirements\";\n    },\n    hasTicket: ({ context }) => Boolean(context.ticket),\n    isExampleMode: ({ context }) => Boolean(context.parent.getSnapshot().context.exampleMode)\n  },\n  types: {}\n}).createMachine({\n  id: SignUpStartMachineId,\n  context: ({ input }) => ({\n    basePath: input.basePath || _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_UP_DEFAULT_BASE_PATH,\n    formRef: input.formRef,\n    parent: input.parent,\n    loadingStep: \"start\",\n    ticket: input.ticket\n  }),\n  entry: \"setDefaultFormValues\",\n  initial: \"Init\",\n  on: {\n    SET_FORM: {\n      actions: \"setFormRef\"\n    }\n  },\n  states: {\n    Init: {\n      description: \"Handle ticket, if present; Else, default to Pending state. Per tickets, `Attempting` makes a `signUp.create` request allowing for an incomplete sign up to contain progressively filled fields on the Start step.\",\n      always: [\n        {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"hasTicket\", \"isMissingRequirements\"]),\n          target: \"Pending\"\n        },\n        {\n          guard: \"hasTicket\",\n          target: \"Attempting\"\n        },\n        {\n          target: \"Pending\"\n        }\n      ]\n    },\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        SUBMIT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.E)(\"isExampleMode\"),\n          target: \"Attempting\",\n          reenter: true\n        },\n        \"AUTHENTICATE.WEB3\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.E)(\"isExampleMode\"),\n          target: \"AttemptingWeb3\",\n          reenter: true\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptCreate\",\n        src: \"attempt\",\n        input: ({ context }) => {\n          const defaultParams = {\n            fields: context.formRef.getSnapshot().context.fields,\n            parent: context.parent\n          };\n          const params = context.ticket ? {\n            strategy: \"ticket\",\n            ticket: context.ticket\n          } : {};\n          return { ...defaultParams, params };\n        },\n        onDone: {\n          actions: [\"setFormDisabledTicketFields\", \"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormDisabledTicketFields\", \"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingWeb3: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptCreateWeb3\",\n        src: \"attemptWeb3\",\n        input: ({ context, event }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_5__.assertEvent)(event, \"AUTHENTICATE.WEB3\");\n          return {\n            parent: context.parent,\n            strategy: event.strategy\n          };\n        },\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-up/verification.machine.ts\n\n\n\n// src/internals/machines/sign-up/verification.types.ts\nvar SignUpVerificationDelays = {\n  emailLinkTimeout: 3e5,\n  // 5 minutes\n  resendableTimeout: 1e3\n  // 1 second\n};\n\n// src/internals/machines/sign-up/verification.machine.ts\nvar SignUpVerificationMachineId = \"SignUpVerification\";\nvar shouldVerify = (field, strategy) => {\n  const guards = [\n    {\n      type: \"isFieldUnverified\",\n      params: {\n        field\n      }\n    }\n  ];\n  if (strategy) {\n    guards.push({\n      type: \"isStrategyEnabled\",\n      params: {\n        attribute: field,\n        strategy\n      }\n    });\n  }\n  return (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)(guards);\n};\nvar SignUpVerificationMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_5__.setup)({\n  actors: {\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_6__.fromPromise)(({ input: { params, parent } }) => {\n      const clerk = parent.getSnapshot().context.clerk;\n      if (params.strategy === \"email_link\" && params.redirectUrl) {\n        params.redirectUrl = clerk.buildUrlWithAuth(params.redirectUrl);\n      }\n      return clerk.client.signUp.prepareVerification(params);\n    }),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_6__.fromPromise)(\n      async ({ input: { params, parent } }) => parent.getSnapshot().context.clerk.client.signUp.attemptVerification(params)\n    ),\n    attemptEmailLinkVerification: (0,xstate__WEBPACK_IMPORTED_MODULE_6__.fromCallback)(\n      ({ receive, sendBack, input: { parent } }) => {\n        const { run, stop } = (0,_clerk_shared_poller__WEBPACK_IMPORTED_MODULE_11__.Poller)();\n        const clerk = parent.getSnapshot().context.clerk;\n        void run(\n          async () => clerk.client.signUp.reload().then((resource) => {\n            const signInStatus = resource.status;\n            const verificationStatus = resource.verifications.emailAddress.status;\n            if (signInStatus === \"complete\") {\n              return sendBack({ type: \"EMAIL_LINK.VERIFIED\", resource });\n            }\n            switch (verificationStatus) {\n              case \"verified\":\n              case \"transferable\":\n              case \"expired\": {\n                sendBack({ type: `EMAIL_LINK.${verificationStatus.toUpperCase()}`, resource });\n                break;\n              }\n              case \"failed\": {\n                sendBack({\n                  type: \"EMAIL_LINK.FAILED\",\n                  error: new _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ClerkElementsError(\"email-link-verification-failed\", \"Email verification failed\"),\n                  resource\n                });\n                break;\n              }\n              // case 'unverified':\n              default:\n                return;\n            }\n            stop();\n          }).catch((error) => {\n            stop();\n            new _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ClerkElementsRuntimeError(error.message);\n          })\n        );\n        receive((event) => {\n          if (event.type === \"STOP\") {\n            stop();\n          }\n        });\n        return () => stop();\n      }\n    )\n  },\n  actions: {\n    resendableTick: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)(({ context }) => ({\n      resendable: context.resendableAfter === 1,\n      resendableAfter: context.resendableAfter > 1 ? context.resendableAfter - 1 : context.resendableAfter\n    })),\n    resendableReset: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)({\n      resendable: false,\n      resendableAfter: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.RESENDABLE_COUNTDOWN_DEFAULT\n    }),\n    sendToLoading: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.assertActorEventError)(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  guards: {\n    isComplete: ({ context }) => context.resource.status === \"complete\",\n    isFieldUnverified: ({ context, event }, { field }) => {\n      let resource = context.resource;\n      if ((event == null ? void 0 : event.type) === \"NEXT\" && event.resource) {\n        resource = event.resource;\n      }\n      return resource.unverifiedFields.includes(field);\n    },\n    isResendable: ({ context }) => context.resendable || context.resendableAfter === 0,\n    isStrategyEnabled: ({ context }, { attribute, strategy }) => {\n      var _a;\n      return Boolean((_a = context.attributes) == null ? void 0 : _a[attribute].verifications.includes(strategy));\n    },\n    shouldVerifyPhoneCode: shouldVerify(\"phone_number\"),\n    shouldVerifyEmailLink: shouldVerify(\"email_address\", \"email_link\"),\n    shouldVerifyEmailCode: shouldVerify(\"email_address\", \"email_code\")\n  },\n  delays: SignUpVerificationDelays,\n  types: {}\n}).createMachine({\n  id: SignUpVerificationMachineId,\n  initial: \"Init\",\n  context: ({ input }) => ({\n    attributes: input.attributes,\n    basePath: input.basePath || _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_UP_DEFAULT_BASE_PATH,\n    loadingStep: \"verifications\",\n    formRef: input.formRef,\n    parent: input.parent,\n    resendable: false,\n    resendableAfter: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.RESENDABLE_COUNTDOWN_DEFAULT,\n    resource: input.resource\n  }),\n  on: {\n    NEXT: [\n      {\n        guard: \"isComplete\",\n        actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.s)(({ event }) => ({ type: \"NEXT\", resource: event.resource }))\n      },\n      {\n        description: \"Validate via phone number\",\n        guard: \"shouldVerifyPhoneCode\",\n        target: \".PhoneCode\"\n      },\n      {\n        description: \"Validate via email link\",\n        guard: \"shouldVerifyEmailLink\",\n        target: \".EmailLink\"\n      },\n      {\n        description: \"Verify via email code\",\n        guard: \"shouldVerifyEmailCode\",\n        target: \".EmailCode\"\n      },\n      {\n        actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.s)(({ event }) => ({ type: \"NEXT\", resource: event.resource }))\n      }\n    ]\n  },\n  states: {\n    Init: {\n      always: [\n        {\n          description: \"Validate via phone number\",\n          guard: \"shouldVerifyPhoneCode\",\n          target: \"PhoneCode\"\n        },\n        {\n          description: \"Validate via email link\",\n          guard: \"shouldVerifyEmailLink\",\n          target: \"EmailLink\"\n        },\n        {\n          description: \"Verify via email code\",\n          guard: \"shouldVerifyEmailCode\",\n          target: \"EmailCode\"\n        },\n        {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.s)(({ context }) => ({ type: \"NEXT\", resource: context.resource }))\n        }\n      ]\n    },\n    EmailLink: {\n      tags: [\"verification:method:email\", \"verification:category:link\", \"verification:email_link\"],\n      initial: \"Preparing\",\n      on: {\n        RETRY: \".Preparing\",\n        \"EMAIL_LINK.RESTART\": {\n          target: \".Attempting\",\n          reenter: true\n        },\n        \"EMAIL_LINK.FAILED\": {\n          actions: [\n            {\n              type: \"setFormErrors\",\n              params: ({ event }) => ({ error: event.error })\n            },\n            (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)({ resource: ({ event }) => event.resource })\n          ],\n          target: \".Pending\"\n        },\n        \"EMAIL_LINK.*\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.b)(({ enqueue, event }) => {\n            if (event.type === \"EMAIL_LINK.RESTART\") {\n              return;\n            }\n            enqueue.assign({ resource: event.resource });\n            enqueue.raise({ type: \"NEXT\", resource: event.resource });\n          })\n        }\n      },\n      states: {\n        Preparing: {\n          tags: [\"state:preparing\", \"state:loading\"],\n          exit: \"resendableReset\",\n          invoke: {\n            id: \"prepareEmailLinkVerification\",\n            src: \"prepare\",\n            input: ({ context }) => ({\n              parent: context.parent,\n              params: {\n                strategy: \"email_link\",\n                redirectUrl: `${context.basePath}${_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.MAGIC_LINK_VERIFY_PATH_ROUTE}`\n              }\n            }),\n            onDone: {\n              target: \"Attempting\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)({ resource: ({ event }) => event.output })\n            },\n            onError: {\n              actions: \"setFormErrors\",\n              target: \"Pending\"\n            }\n          }\n        },\n        Pending: {\n          description: \"Placeholder for allowing resending of email link\",\n          tags: [\"state:pending\"],\n          on: {\n            NEXT: \"Preparing\"\n          }\n        },\n        Attempting: {\n          tags: [\"state:attempting\"],\n          invoke: {\n            id: \"attemptEmailLinkVerification\",\n            src: \"attemptEmailLinkVerification\",\n            input: ({ context }) => ({\n              parent: context.parent\n            })\n          },\n          after: {\n            emailLinkTimeout: {\n              description: \"Timeout after 5 minutes\",\n              target: \"Pending\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(({ context }) => context.formRef, {\n                type: \"ERRORS.SET\",\n                error: new _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ClerkElementsError(\"verify-email-link-timeout\", \"Email link verification timed out\")\n              })\n            }\n          },\n          initial: \"NotResendable\",\n          states: {\n            Resendable: {\n              description: \"Waiting for user to retry\"\n            },\n            NotResendable: {\n              description: \"Handle countdowns\",\n              on: {\n                RETRY: {\n                  actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.l)(({ context }) => `Not retriable; Try again in ${context.resendableAfter}s`)\n                }\n              },\n              after: {\n                resendableTimeout: [\n                  {\n                    description: \"Set as retriable if countdown is 0\",\n                    guard: \"isResendable\",\n                    actions: \"resendableTick\",\n                    target: \"Resendable\"\n                  },\n                  {\n                    description: \"Continue countdown if not retriable\",\n                    actions: \"resendableTick\",\n                    target: \"NotResendable\",\n                    reenter: true\n                  }\n                ]\n              }\n            }\n          }\n        }\n      }\n    },\n    EmailCode: {\n      tags: [\"verification:method:email\", \"verification:category:code\", \"verification:email_code\"],\n      initial: \"Preparing\",\n      states: {\n        Preparing: {\n          tags: [\"state:preparing\", \"state:loading\"],\n          exit: \"resendableReset\",\n          invoke: {\n            id: \"prepareEmailAddressCodeVerification\",\n            src: \"prepare\",\n            input: ({ context }) => ({\n              parent: context.parent,\n              params: {\n                strategy: \"email_code\"\n              }\n            }),\n            onDone: [\n              {\n                guard: \"shouldVerifyEmailCode\",\n                target: \"Pending\"\n              },\n              {\n                actions: [\n                  (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)({ resource: ({ event }) => event.output }),\n                  (0,xstate__WEBPACK_IMPORTED_MODULE_8__.O)(({ event }) => ({ type: \"NEXT\", resource: event.output }))\n                ]\n              }\n            ],\n            onError: {\n              actions: \"setFormErrors\",\n              target: \"Pending\"\n            }\n          }\n        },\n        Pending: {\n          tags: [\"state:pending\"],\n          on: {\n            RETRY: \"Preparing\",\n            SUBMIT: {\n              target: \"Attempting\",\n              reenter: true\n            }\n          },\n          initial: \"NotResendable\",\n          states: {\n            Resendable: {\n              description: \"Waiting for user to retry\"\n            },\n            NotResendable: {\n              description: \"Handle countdowns\",\n              on: {\n                RETRY: {\n                  actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.l)(({ context }) => `Not retriable; Try again in ${context.resendableAfter}s`)\n                }\n              },\n              after: {\n                resendableTimeout: [\n                  {\n                    description: \"Set as retriable if countdown is 0\",\n                    guard: \"isResendable\",\n                    actions: \"resendableTick\",\n                    target: \"Resendable\"\n                  },\n                  {\n                    description: \"Continue countdown if not retriable\",\n                    actions: \"resendableTick\",\n                    target: \"NotResendable\",\n                    reenter: true\n                  }\n                ]\n              }\n            }\n          }\n        },\n        Attempting: {\n          tags: [\"state:attempting\", \"state:loading\"],\n          entry: \"sendToLoading\",\n          invoke: {\n            id: \"attemptEmailAddressCodeVerification\",\n            src: \"attempt\",\n            input: ({ context }) => {\n              var _a;\n              return {\n                parent: context.parent,\n                params: {\n                  strategy: \"email_code\",\n                  code: ((_a = context.formRef.getSnapshot().context.fields.get(\"code\")) == null ? void 0 : _a.value) || \"\"\n                }\n              };\n            },\n            onDone: {\n              actions: [(0,xstate__WEBPACK_IMPORTED_MODULE_8__.O)(({ event }) => ({ type: \"NEXT\", resource: event.output })), \"sendToLoading\"]\n            },\n            onError: {\n              actions: [\"setFormErrors\", \"sendToLoading\"],\n              target: \"Pending\"\n            }\n          }\n        }\n      }\n    },\n    PhoneCode: {\n      tags: [\"verification:method:phone\", \"verification:category:code\", \"verification:phone_code\"],\n      initial: \"Preparing\",\n      states: {\n        Preparing: {\n          tags: [\"state:preparing\", \"state:loading\"],\n          exit: \"resendableReset\",\n          invoke: {\n            id: \"preparePhoneCodeVerification\",\n            src: \"prepare\",\n            input: ({ context }) => ({\n              parent: context.parent,\n              params: {\n                strategy: \"phone_code\"\n              }\n            }),\n            onDone: [\n              {\n                guard: \"shouldVerifyPhoneCode\",\n                target: \"Pending\",\n                actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)({ resource: ({ event }) => event.output })\n              },\n              {\n                actions: [\n                  (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)({ resource: ({ event }) => event.output }),\n                  (0,xstate__WEBPACK_IMPORTED_MODULE_8__.O)(({ event }) => ({ type: \"NEXT\", resource: event.output }))\n                ]\n              }\n            ],\n            onError: {\n              actions: \"setFormErrors\",\n              target: \"Pending\"\n            }\n          }\n        },\n        Pending: {\n          tags: [\"state:pending\"],\n          on: {\n            RETRY: \"Preparing\",\n            SUBMIT: {\n              target: \"Attempting\",\n              reenter: true\n            }\n          },\n          initial: \"NotResendable\",\n          states: {\n            Resendable: {\n              description: \"Waiting for user to retry\"\n            },\n            NotResendable: {\n              description: \"Handle countdowns\",\n              on: {\n                RETRY: {\n                  actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.l)(({ context }) => `Not retriable; Try again in ${context.resendableAfter}s`)\n                }\n              },\n              after: {\n                resendableTimeout: [\n                  {\n                    description: \"Set as retriable if countdown is 0\",\n                    guard: \"isResendable\",\n                    actions: \"resendableTick\",\n                    target: \"Resendable\"\n                  },\n                  {\n                    description: \"Continue countdown if not retriable\",\n                    actions: \"resendableTick\",\n                    target: \"NotResendable\",\n                    reenter: true\n                  }\n                ]\n              }\n            }\n          }\n        },\n        Attempting: {\n          tags: [\"state:attempting\", \"state:loading\"],\n          entry: \"sendToLoading\",\n          invoke: {\n            id: \"attemptPhoneNumberVerification\",\n            src: \"attempt\",\n            input: ({ context }) => {\n              var _a;\n              return {\n                parent: context.parent,\n                params: {\n                  strategy: \"phone_code\",\n                  code: ((_a = context.formRef.getSnapshot().context.fields.get(\"code\")) == null ? void 0 : _a.value) || \"\"\n                }\n              };\n            },\n            onDone: {\n              actions: [(0,xstate__WEBPACK_IMPORTED_MODULE_8__.O)(({ event }) => ({ type: \"NEXT\", resource: event.output })), \"sendToLoading\"]\n            },\n            onError: {\n              actions: [\"setFormErrors\", \"sendToLoading\"],\n              target: \"Pending\"\n            }\n          }\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-up/router.machine.ts\nvar SignUpRouterMachineId = \"SignUpRouter\";\nvar isCurrentPath = (path) => ({ context }, _params) => {\n  var _a, _b;\n  return (_b = (_a = context.router) == null ? void 0 : _a.match(path)) != null ? _b : false;\n};\nvar needsStatus = (status) => ({ context, event }, _) => {\n  var _a, _b, _c, _d;\n  return ((_a = event == null ? void 0 : event.resource) == null ? void 0 : _a.status) === status || ((_d = (_c = (_b = context.clerk) == null ? void 0 : _b.client) == null ? void 0 : _c.signUp) == null ? void 0 : _d.status) === status;\n};\nvar SignUpRouterMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_5__.setup)({\n  actors: {\n    continueMachine: SignUpContinueMachine,\n    startMachine: SignUpStartMachine,\n    thirdPartyMachine: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachine,\n    verificationMachine: SignUpVerificationMachine\n  },\n  actions: {\n    clearFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(({ context }) => context.formRef, { type: \"ERRORS.CLEAR\" }),\n    logUnknownError: (snapshot) => console.error(\"Unknown error:\", snapshot),\n    navigateInternal: ({ context }, { path, force = false }) => {\n      if (!context.router) {\n        return;\n      }\n      if (!force && (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.shouldUseVirtualRouting)()) {\n        return;\n      }\n      if (context.exampleMode) {\n        return;\n      }\n      const resolvedPath = (0,_clerk_shared_url__WEBPACK_IMPORTED_MODULE_9__.joinURL)(context.router.basePath, path);\n      if (resolvedPath === context.router.pathname()) {\n        return;\n      }\n      context.router.shallowPush(resolvedPath);\n    },\n    navigateExternal: ({ context }, { path }) => {\n      var _a;\n      return (_a = context.router) == null ? void 0 : _a.push(path);\n    },\n    raiseNext: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.O)({ type: \"NEXT\" }),\n    setActive: ({ context, event }, params) => {\n      var _a;\n      if (context.exampleMode) {\n        return;\n      }\n      const session = (params == null ? void 0 : params.sessionId) || (params == null ? void 0 : params.useLastActiveSession) && context.clerk.client.lastActiveSessionId || ((event == null ? void 0 : event.resource) || context.clerk.client.signUp).createdSessionId;\n      void context.clerk.setActive({\n        session,\n        redirectUrl: context.clerk.buildAfterSignUpUrl({\n          params: (_a = context.router) == null ? void 0 : _a.searchParams()\n        })\n      });\n    },\n    delayedReset: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.O)({ type: \"RESET\" }, { delay: 3e3 }),\n    // Reset machine after 3s delay.\n    setError: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)({\n      error: (_, { error }) => {\n        if (error) {\n          return error;\n        }\n        return new _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ClerkElementsRuntimeError(\"Unknown error\");\n      }\n    }),\n    setFormOAuthErrors: ({ context }) => {\n      const errorOrig = context.clerk.client.signIn.firstFactorVerification.error;\n      if (!errorOrig) {\n        return;\n      }\n      let error;\n      switch (errorOrig.code) {\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.NOT_ALLOWED_TO_SIGN_UP:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.OAUTH_ACCESS_DENIED:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.NOT_ALLOWED_ACCESS:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.SAML_USER_ATTRIBUTE_MISSING:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.OAUTH_EMAIL_DOMAIN_RESERVED_BY_SAML:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.USER_LOCKED:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.ENTERPRISE_SSO_USER_ATTRIBUTE_MISSING:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.ENTERPRISE_SSO_EMAIL_ADDRESS_DOMAIN_MISMATCH:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.ENTERPRISE_SSO_HOSTED_DOMAIN_MISMATCH:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.SAML_EMAIL_ADDRESS_DOMAIN_MISMATCH:\n        case _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ERROR_CODES.ORGANIZATION_MEMBERSHIP_QUOTA_EXCEEDED_FOR_SSO:\n          error = new _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ClerkElementsError(errorOrig.code, errorOrig.longMessage);\n          break;\n        default:\n          error = new _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ClerkElementsError(\n            \"unable_to_complete\",\n            \"Unable to complete action at this time. If the problem persists please contact support.\"\n          );\n      }\n      context.formRef.send({\n        type: \"ERRORS.SET\",\n        error\n      });\n    },\n    transfer: ({ context }) => {\n      var _a;\n      return (_a = context.router) == null ? void 0 : _a.push(context.clerk.buildSignInUrl());\n    }\n  },\n  guards: {\n    areFieldsMissing: ({ context }) => {\n      var _a, _b, _c, _d;\n      return ((_d = (_c = (_b = (_a = context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signUp) == null ? void 0 : _c.missingFields) == null ? void 0 : _d.length) > 0;\n    },\n    areFieldsUnverified: ({ context }) => {\n      var _a, _b, _c, _d;\n      return ((_d = (_c = (_b = (_a = context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signUp) == null ? void 0 : _c.unverifiedFields) == null ? void 0 : _d.length) > 0;\n    },\n    hasAuthenticatedViaClerkJS: ({ context }) => Boolean(context.clerk.client.signUp.status === null && context.clerk.client.lastActiveSessionId),\n    hasCreatedSession: ({ context }) => {\n      var _a;\n      return Boolean((_a = context.router) == null ? void 0 : _a.searchParams().get(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SEARCH_PARAMS.createdSession));\n    },\n    hasClerkStatus: ({ context }, params) => {\n      var _a;\n      const value = (_a = context.router) == null ? void 0 : _a.searchParams().get(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SEARCH_PARAMS.status);\n      if (!params) {\n        return Boolean(value);\n      }\n      return value === params.status;\n    },\n    hasClerkTransfer: ({ context }) => {\n      var _a;\n      return Boolean((_a = context.router) == null ? void 0 : _a.searchParams().get(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SEARCH_PARAMS.transfer));\n    },\n    hasResource: ({ context }) => Boolean(context.clerk.client.signUp),\n    hasTicket: ({ context }) => Boolean(context.ticket),\n    isLoggedInAndSingleSession: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"isLoggedIn\", \"isSingleSessionMode\", (0,xstate__WEBPACK_IMPORTED_MODULE_8__.E)(\"isExampleMode\")]),\n    isStatusAbandoned: needsStatus(\"abandoned\"),\n    isStatusComplete: ({ context, event }) => {\n      var _a, _b;\n      const resource = event == null ? void 0 : event.resource;\n      const signUp = (_b = (_a = context.clerk) == null ? void 0 : _a.client) == null ? void 0 : _b.signUp;\n      return (resource == null ? void 0 : resource.status) === \"complete\" && Boolean(resource == null ? void 0 : resource.createdSessionId) || (signUp == null ? void 0 : signUp.status) === \"complete\" && Boolean(signUp == null ? void 0 : signUp.createdSessionId);\n    },\n    isStatusMissingRequirements: needsStatus(\"missing_requirements\"),\n    isLoggedIn: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.F)([\"isStatusComplete\", ({ context }) => Boolean(context.clerk.user)]),\n    isSingleSessionMode: ({ context }) => {\n      var _a, _b;\n      return Boolean((_b = (_a = context.clerk) == null ? void 0 : _a.__unstable__environment) == null ? void 0 : _b.authConfig.singleSessionMode);\n    },\n    isRestricted: ({ context }) => {\n      var _a, _b;\n      return ((_b = (_a = context.clerk) == null ? void 0 : _a.__unstable__environment) == null ? void 0 : _b.userSettings.signUp.mode) === _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_UP_MODES.RESTRICTED;\n    },\n    isRestrictedWithoutTicket: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"isRestricted\", (0,xstate__WEBPACK_IMPORTED_MODULE_8__.E)(\"hasTicket\")]),\n    isExampleMode: ({ context }) => Boolean(context.exampleMode),\n    isMissingRequiredFields: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"isStatusMissingRequirements\", \"areFieldsMissing\"]),\n    isMissingRequiredUnverifiedFields: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"isStatusMissingRequirements\", \"areFieldsUnverified\"]),\n    needsIdentifier: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.F)([\"statusNeedsIdentifier\", isCurrentPath(\"/\")]),\n    needsContinue: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"statusNeedsContinue\", isCurrentPath(\"/continue\")]),\n    needsVerification: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"statusNeedsVerification\", isCurrentPath(\"/verify\")]),\n    needsCallback: isCurrentPath(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SSO_CALLBACK_PATH_ROUTE),\n    statusNeedsIdentifier: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.F)([(0,xstate__WEBPACK_IMPORTED_MODULE_8__.E)(\"hasResource\"), \"isStatusAbandoned\"]),\n    statusNeedsContinue: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.F)([\"isMissingRequiredFields\"]),\n    statusNeedsVerification: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.F)([\"isMissingRequiredUnverifiedFields\", (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"areFieldsMissing\", \"hasClerkStatus\"])])\n  },\n  delays: {\n    \"TIMEOUT.POLLING\": 3e5\n    // 5 minutes\n  },\n  types: {}\n}).createMachine({\n  id: SignUpRouterMachineId,\n  // @ts-expect-error - Set in INIT event\n  context: {},\n  initial: \"Idle\",\n  on: {\n    \"AUTHENTICATE.OAUTH\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachineId, ({ context, event }) => {\n        var _a, _b, _c, _d;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: event.strategy,\n            redirectUrl: `${((_a = context.router) == null ? void 0 : _a.mode) === _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ROUTING.virtual ? (_b = context.clerk.__unstable__environment) == null ? void 0 : _b.displayConfig.signUpUrl : (_c = context.router) == null ? void 0 : _c.basePath}${_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: context.clerk.buildAfterSignUpUrl({\n              params: (_d = context.router) == null ? void 0 : _d.searchParams()\n            })\n          }\n        };\n      })\n    },\n    \"AUTHENTICATE.SAML\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachineId, ({ context }) => {\n        var _a, _b, _c, _d, _e;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: \"saml\",\n            emailAddress: (_a = context.formRef.getSnapshot().context.fields.get(\"emailAddress\")) == null ? void 0 : _a.value,\n            redirectUrl: `${((_b = context.router) == null ? void 0 : _b.mode) === _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ROUTING.virtual ? (_c = context.clerk.__unstable__environment) == null ? void 0 : _c.displayConfig.signUpUrl : (_d = context.router) == null ? void 0 : _d.basePath}${_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: context.clerk.buildAfterSignUpUrl({\n              params: (_e = context.router) == null ? void 0 : _e.searchParams()\n            })\n          }\n        };\n      })\n    },\n    \"AUTHENTICATE.ENTERPRISE_SSO\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachineId, ({ context }) => {\n        var _a, _b, _c, _d, _e;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: \"enterprise_sso\",\n            emailAddress: (_a = context.formRef.getSnapshot().context.fields.get(\"emailAddress\")) == null ? void 0 : _a.value,\n            redirectUrl: `${((_b = context.router) == null ? void 0 : _b.mode) === _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ROUTING.virtual ? (_c = context.clerk.__unstable__environment) == null ? void 0 : _c.displayConfig.signUpUrl : (_d = context.router) == null ? void 0 : _d.basePath}${_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: context.clerk.buildAfterSignUpUrl({\n              params: (_e = context.router) == null ? void 0 : _e.searchParams()\n            })\n          }\n        };\n      })\n    },\n    \"AUTHENTICATE.WEB3\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(\"start\", ({ event }) => event)\n    },\n    \"FORM.ATTACH\": {\n      description: \"Attach/re-attach the form to the router.\",\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.b)(({ enqueue, event }) => {\n        enqueue.assign({\n          formRef: event.formRef\n        });\n        enqueue.raise({ type: \"RESET.STEP\" });\n      })\n    },\n    \"NAVIGATE.PREVIOUS\": \".Hist\",\n    \"NAVIGATE.START\": \".Start\",\n    LOADING: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)(({ event }) => ({\n        loading: {\n          isLoading: event.isLoading,\n          step: event.step,\n          strategy: event.strategy,\n          action: event.action\n        }\n      }))\n    },\n    RESET: \".Idle\"\n  },\n  states: {\n    Idle: {\n      on: {\n        INIT: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.a)(({ event }) => {\n            var _a;\n            const searchParams = (_a = event.router) == null ? void 0 : _a.searchParams();\n            return {\n              clerk: event.clerk,\n              router: event.router,\n              signInPath: event.signInPath || _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_IN_DEFAULT_BASE_PATH,\n              loading: {\n                isLoading: false\n              },\n              exampleMode: event.exampleMode || false,\n              formRef: event.formRef,\n              ticket: (searchParams == null ? void 0 : searchParams.get(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SEARCH_PARAMS.ticket)) || (searchParams == null ? void 0 : searchParams.get(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SEARCH_PARAMS.invitationToken)) || void 0\n            };\n          }),\n          target: \"Init\"\n        }\n      }\n    },\n    Init: {\n      entry: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.b)(({ context, enqueue, self }) => {\n        var _a, _b;\n        if (!self.getSnapshot().children[_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachineId]) {\n          enqueue.spawnChild(\"thirdPartyMachine\", {\n            id: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachineId,\n            systemId: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachineId,\n            input: {\n              basePath: (_b = (_a = context.router) == null ? void 0 : _a.basePath) != null ? _b : _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_UP_DEFAULT_BASE_PATH,\n              flow: \"signUp\",\n              formRef: context.formRef,\n              parent: self\n            }\n          });\n        }\n      }),\n      always: [\n        {\n          guard: \"isLoggedInAndSingleSession\",\n          actions: [\n            (0,xstate__WEBPACK_IMPORTED_MODULE_10__.l)(\"Already logged in\"),\n            {\n              type: \"navigateExternal\",\n              params: ({ context }) => {\n                var _a;\n                return {\n                  path: context.clerk.buildAfterSignUpUrl({\n                    params: (_a = context.router) == null ? void 0 : _a.searchParams()\n                  })\n                };\n              }\n            }\n          ]\n        },\n        {\n          guard: \"needsCallback\",\n          target: \"Callback\"\n        },\n        {\n          guard: \"hasTicket\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        },\n        {\n          guard: \"needsVerification\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/verify\" } },\n          target: \"Verification\"\n        },\n        {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.F)([\"needsContinue\", \"hasClerkTransfer\"]),\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/continue\" } },\n          target: \"Continue\"\n        },\n        {\n          guard: \"isRestrictedWithoutTicket\",\n          target: \"Restricted\"\n        },\n        {\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        }\n      ]\n    },\n    Start: {\n      tags: [\"step:start\"],\n      exit: \"clearFormErrors\",\n      invoke: {\n        id: \"start\",\n        src: \"startMachine\",\n        input: ({ context, self }) => {\n          var _a;\n          return {\n            basePath: (_a = context.router) == null ? void 0 : _a.basePath,\n            formRef: context.formRef,\n            parent: self,\n            ticket: context.ticket\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.b)(({ enqueue, context }) => {\n            enqueue(\"clearFormErrors\");\n            enqueue.sendTo(\"start\", { type: \"SET_FORM\", formRef: context.formRef });\n          })\n        },\n        NEXT: [\n          {\n            guard: \"isStatusComplete\",\n            actions: [\"setActive\", \"delayedReset\"]\n          },\n          {\n            guard: (0,xstate__WEBPACK_IMPORTED_MODULE_8__.D)([\"hasTicket\", \"statusNeedsContinue\"]),\n            actions: { type: \"navigateInternal\", params: { path: \"/\" } },\n            target: \"Start\",\n            reenter: true\n          },\n          {\n            guard: \"statusNeedsVerification\",\n            target: \"Verification\",\n            actions: { type: \"navigateInternal\", params: { path: \"/verify\" } }\n          },\n          {\n            guard: \"statusNeedsContinue\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"Continue\"\n          }\n        ]\n      }\n    },\n    Continue: {\n      tags: [\"step:continue\"],\n      invoke: {\n        id: \"continue\",\n        src: \"continueMachine\",\n        input: ({ context, self }) => {\n          var _a;\n          return {\n            basePath: (_a = context.router) == null ? void 0 : _a.basePath,\n            formRef: context.formRef,\n            parent: self\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"Continue\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isStatusComplete\",\n            actions: [\"setActive\", \"delayedReset\"]\n          },\n          {\n            guard: \"statusNeedsVerification\",\n            target: \"Verification\",\n            actions: { type: \"navigateInternal\", params: { path: \"/verify\" } }\n          }\n        ]\n      }\n    },\n    Verification: {\n      tags: [\"step:verification\"],\n      invoke: {\n        id: \"verification\",\n        src: \"verificationMachine\",\n        input: ({ context, self }) => {\n          var _a, _b;\n          return {\n            attributes: (_a = context.clerk.__unstable__environment) == null ? void 0 : _a.userSettings.attributes,\n            basePath: (_b = context.router) == null ? void 0 : _b.basePath,\n            formRef: context.formRef,\n            parent: self,\n            resource: context.clerk.client.signUp\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      always: [\n        {\n          guard: \"hasCreatedSession\",\n          actions: [\n            ({ context }) => {\n              var _a;\n              return {\n                type: \"setActive\",\n                params: { sessionId: (_a = context.router) == null ? void 0 : _a.searchParams().get(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SEARCH_PARAMS.createdSession) }\n              };\n            },\n            \"delayedReset\"\n          ]\n        },\n        {\n          guard: { type: \"hasClerkStatus\", params: { status: \"verified\" } },\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/continue\" } }\n        },\n        {\n          guard: { type: \"hasClerkStatus\", params: { status: \"expired\" } },\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } }\n        }\n      ],\n      on: {\n        \"RESET.STEP\": {\n          target: \"Verification\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isStatusComplete\",\n            actions: [\"setActive\", \"delayedReset\"]\n          },\n          {\n            guard: \"statusNeedsContinue\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"Continue\"\n          }\n        ]\n      }\n    },\n    Callback: {\n      tags: [\"step:callback\"],\n      entry: (0,xstate__WEBPACK_IMPORTED_MODULE_10__.c)(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ThirdPartyMachineId, { type: \"CALLBACK\" }),\n      on: {\n        NEXT: [\n          {\n            guard: \"isStatusComplete\",\n            actions: [\"setActive\", \"delayedReset\"]\n          },\n          {\n            description: \"Handle a case where the user has already been authenticated via ClerkJS\",\n            guard: \"hasAuthenticatedViaClerkJS\",\n            actions: [{ type: \"setActive\", params: { useLastActiveSession: true } }, \"delayedReset\"]\n          },\n          {\n            guard: \"statusNeedsVerification\",\n            actions: { type: \"navigateInternal\", params: { path: \"/verify\" } },\n            target: \"Verification\"\n          },\n          {\n            guard: \"statusNeedsContinue\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"Continue\"\n          },\n          {\n            actions: { type: \"navigateInternal\", params: { path: \"/\" } },\n            target: \"Start\"\n          }\n        ]\n      }\n    },\n    Restricted: {\n      tags: [\"step:restricted\"],\n      on: {\n        NEXT: \"Start\"\n      }\n    },\n    Error: {\n      tags: [\"step:error\"],\n      on: {\n        NEXT: {\n          target: \"Start\",\n          actions: \"clearFormErrors\"\n        }\n      }\n    },\n    Hist: {\n      type: \"history\",\n      exit: \"clearFormErrors\"\n    }\n  }\n});\n\n// src/react/sign-up/root.tsx\n\nvar actor = (0,xstate__WEBPACK_IMPORTED_MODULE_8__.A)(SignUpRouterMachine, { inspect: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.inspect });\nactor.start();\nfunction SignUpFlowProvider({ children, exampleMode, fallback, isRootPath }) {\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_1__.useClerk)();\n  const router = (0,_chunk_QSYHOU7X_mjs__WEBPACK_IMPORTED_MODULE_13__.useClerkRouter)();\n  const formRef = (0,_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.useFormStore)();\n  const isReady = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_14__.useSelector)(actor, (state) => state.value !== \"Idle\");\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (!clerk || !router) {\n      return;\n    }\n    const cb = () => {\n      const evt = {\n        type: \"INIT\",\n        clerk,\n        exampleMode,\n        formRef,\n        router,\n        signInPath: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_IN_DEFAULT_BASE_PATH\n      };\n      if (actor.getSnapshot().can(evt)) {\n        actor.send(evt);\n      }\n      if (formRef && actor.getSnapshot().can({ type: \"RESET.STEP\" })) {\n        actor.send({\n          type: \"FORM.ATTACH\",\n          formRef\n        });\n      }\n    };\n    if (\"addOnLoaded\" in clerk) {\n      clerk.addOnLoaded(cb);\n    } else {\n      cb();\n    }\n  }, [clerk, exampleMode, formRef == null ? void 0 : formRef.id, !!router, clerk.loaded]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SignUpRouterCtx.Provider, { actorRef: actor, children: [\n    isRootPath && !isReady && fallback ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.Form, { children: fallback }) : null,\n    clerk.loaded && isReady ? children : null\n  ] });\n}\nfunction SignUpRoot({\n  children,\n  exampleMode = false,\n  fallback = null,\n  path: pathProp,\n  routing = _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ROUTING.path\n}) {\n  var _a, _b;\n  const clerk = (0,_clerk_shared_react__WEBPACK_IMPORTED_MODULE_1__.useClerk)();\n  const router = (routing === _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ROUTING.virtual ? _chunk_QSYHOU7X_mjs__WEBPACK_IMPORTED_MODULE_15__.useVirtualRouter : _chunk_QSYHOU7X_mjs__WEBPACK_IMPORTED_MODULE_15__.useNextRouter)();\n  const pathname = router.pathname();\n  const inferredPath = (_a = router.inferredBasePath) == null ? void 0 : _a.call(router);\n  const path = pathProp || inferredPath || _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SIGN_UP_DEFAULT_BASE_PATH;\n  const isRootPath = path === pathname;\n  (_b = clerk.telemetry) == null ? void 0 : _b.record(\n    (0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_2__.eventComponentMounted)(\"Elements_SignUpRoot\", {\n      exampleMode,\n      fallback: Boolean(fallback),\n      path,\n      routing\n    })\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_chunk_QSYHOU7X_mjs__WEBPACK_IMPORTED_MODULE_13__.ClerkHostRouterContext.Provider, { value: router, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_chunk_QSYHOU7X_mjs__WEBPACK_IMPORTED_MODULE_13__.Router, { basePath: path, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.FormStoreProvider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(\n    SignUpFlowProvider,\n    {\n      exampleMode,\n      fallback,\n      isRootPath,\n      children\n    }\n  ) }) }) });\n}\n\n// src/react/sign-up/action/action.tsx\n\n\n// src/react/sign-up/action/navigate.tsx\n\n\n\nvar SIGN_UP_NAVIGATE_NAME = \"SignInNavigate\";\nvar SignUpNavigationEventMap = {\n  start: `NAVIGATE.START`,\n  previous: `NAVIGATE.PREVIOUS`\n};\nvar SignUpNavigate = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(\n  ({ asChild, to, ...rest }, forwardedRef) => {\n    const actorRef = _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SignUpRouterCtx.useActorRef();\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_16__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    const sendEvent = react__WEBPACK_IMPORTED_MODULE_3__.useCallback(() => {\n      const type = SignUpNavigationEventMap[to];\n      if (actorRef.getSnapshot().can({ type })) {\n        actorRef.send({ type });\n      } else {\n        console.warn(\n          `Clerk: <SignUp.Action navigate=\"${to}\"> is an invalid navigation event. You can only navigate to: ${Object.keys(SignUpNavigationEventMap).join(\", \")}.`\n        );\n      }\n    }, [actorRef, to]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        onClick: sendEvent,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignUpNavigate.displayName = SIGN_UP_NAVIGATE_NAME;\n\n// src/react/sign-up/action/resend.tsx\n\n\n\n\nvar SIGN_UP_RESEND_NAME = \"SignUpResend\";\nvar SignUpResend = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(\n  ({ asChild, fallback, ...rest }, forwardedRef) => {\n    const ref = _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SignUpVerificationCtx.useActorRef(true);\n    if (!ref) {\n      throw new Error('The resend action must be used within <SignUp.Step name=\"verifications\">.');\n    }\n    const fallbackProps = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_14__.useSelector)(\n      ref,\n      (state) => ({\n        resendable: state.context.resendable,\n        resendableAfter: state.context.resendableAfter\n      }),\n      (a, b) => a.resendableAfter === b.resendableAfter && a.resendable === b.resendable\n    );\n    if (fallback && !fallbackProps.resendable) {\n      return typeof fallback === \"function\" ? fallback(fallbackProps) : fallback;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_16__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        disabled: !fallbackProps.resendable,\n        onClick: () => ref.send({ type: \"RETRY\" }),\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignUpResend.displayName = SIGN_UP_RESEND_NAME;\n\n// src/react/sign-up/action/action.tsx\n\nvar SignUpAction = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef((props, forwardedRef) => {\n  const { submit, navigate, resend, ...rest } = props;\n  let Comp;\n  if (submit) {\n    Comp = _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.Submit;\n  } else if (navigate) {\n    Comp = SignUpNavigate;\n  } else if (resend) {\n    Comp = SignUpResend;\n  }\n  return Comp ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(\n    Comp,\n    {\n      to: navigate,\n      ...rest,\n      ref: forwardedRef\n    }\n  ) : null;\n});\nSignUpAction.displayName = \"SignUpAction\";\n\n// src/react/sign-up/captcha.tsx\n\n\n\nvar SignUpCaptcha = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(\n  ({ asChild, children, ...rest }, forwardedRef) => {\n    const ref = _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.SignUpStartCtx.useActorRef(true);\n    if (!ref) {\n      throw new _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.ClerkElementsRuntimeError('<Captcha> must be used within the <SignUp.Step name=\"start\"> component.');\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_16__.Slot : \"div\";\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(\n      Comp,\n      {\n        id: _chunk_VY37G23G_mjs__WEBPACK_IMPORTED_MODULE_7__.CAPTCHA_ELEMENT_ID,\n        ...rest,\n        ref: forwardedRef\n      }\n    );\n  }\n);\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvZWxlbWVudHMvZGlzdC9yZWFjdC9zaWduLXVwL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1rQztBQTZCQTs7QUFFbEM7QUFDcUI7O0FBRXJCO0FBQytDO0FBQ2lCO0FBQ3BCO0FBQ1Y7QUFDRzs7QUFFckM7QUFDd0Q7QUFDSDs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEIsNkNBQUs7QUFDakM7QUFDQSxhQUFhLG1EQUFXO0FBQ3hCLFNBQVMsU0FBUyxrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQkFBc0IsZ0JBQWdCO0FBQ3RDLE1BQU0sMEVBQXFCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsOEJBQThCLFNBQVM7QUFDdkM7QUFDQSwrQ0FBK0Msa0VBQVk7QUFDM0QsaURBQWlELGtFQUFZO0FBQzdELGlEQUFpRCxrRUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLGdDQUFnQyxTQUFTLDRCQUE0QiwrQkFBK0I7QUFDcEcsbUJBQW1CLGdCQUFnQiwyQkFBMkIsc0NBQXNDO0FBQ3BHLGlCQUFpQjtBQUNqQixHQUFHO0FBQ0g7QUFDQSxvQ0FBb0MsU0FBUztBQUM3QztBQUNBO0FBQ0EsS0FBSztBQUNMLDBDQUEwQyxTQUFTO0FBQ25EO0FBQ0E7QUFDQSwyREFBMkQsa0VBQVk7QUFDdkU7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxjQUFjLE9BQU87QUFDckIsZ0NBQWdDLDBFQUF5QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHlDQUFFLHVDQUF1Qyx5Q0FBRztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQzRDO0FBQ3lJOztBQUVyTDtBQUNxSTtBQUNySTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNkNBQU07QUFDL0I7QUFDQSxhQUFhLG1EQUFZLElBQUksU0FBUywwQkFBMEI7QUFDaEU7QUFDQSx1RUFBdUUsMkJBQTJCO0FBQ2xHLEtBQUs7QUFDTCxpQkFBaUIsbURBQVk7QUFDN0IsU0FBUyxTQUFTLG9CQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMEVBQXlCLCtCQUErQixTQUFTO0FBQ25GO0FBQ0E7QUFDQSxnQkFBZ0Isa0VBQWlCO0FBQ2pDLEdBQUc7QUFDSDtBQUNBLG1CQUFtQixnQkFBZ0IsMkJBQTJCLHNDQUFzQztBQUNwRyxpQkFBaUI7QUFDakIsZ0JBQWdCLDBDQUFNLElBQUksT0FBTztBQUNqQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsaUNBQWlDLDBDQUFjLElBQUksa0JBQWtCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxnQ0FBZ0MsUUFBUTtBQUNwRjtBQUNBO0FBQ0EsS0FBSztBQUNMLG1CQUFtQiwwQ0FBTTtBQUN6QixTQUFTLFNBQVM7QUFDbEIsU0FBUyxPQUFPO0FBQ2hCLFFBQVEsMEVBQXFCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixTQUFTO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0EsOEJBQThCLFNBQVM7QUFDdkM7QUFDQTtBQUNBLEtBQUs7QUFDTCxrQkFBa0IsU0FBUztBQUMzQixzQkFBc0IsU0FBUztBQUMvQixHQUFHO0FBQ0g7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxjQUFjLE9BQU87QUFDckIsZ0NBQWdDLDBFQUF5QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0EsaUJBQWlCLHlDQUFHO0FBQ3BCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHlDQUFJO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxpQkFBaUIseUNBQUk7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1osbUJBQW1CO0FBQ25CLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQyxVQUFVLG1EQUFXO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQzhDO0FBQ29KOztBQUVsTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxTQUFTLHlDQUFJO0FBQ2I7QUFDQSxnQ0FBZ0MsNkNBQU07QUFDdEM7QUFDQSxhQUFhLG1EQUFZLElBQUksU0FBUyxrQkFBa0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxhQUFhLG1EQUFZO0FBQ3pCLGVBQWUsU0FBUyxrQkFBa0I7QUFDMUM7QUFDQSxrQ0FBa0Msb0RBQVk7QUFDOUMsU0FBUyw0QkFBNEIsVUFBVTtBQUMvQyxnQkFBZ0IsWUFBWSxFQUFFLDZEQUFNO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx1Q0FBdUM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixvQkFBb0IsaUNBQWlDLGFBQWE7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixtRUFBa0I7QUFDL0M7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxnQkFBZ0IsMEVBQXlCO0FBQ3pDLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLG9CQUFvQiwwQ0FBTyxJQUFJLFNBQVM7QUFDeEM7QUFDQTtBQUNBLEtBQUs7QUFDTCxxQkFBcUIsMENBQU87QUFDNUI7QUFDQSx1QkFBdUIsNkVBQTRCO0FBQ25ELEtBQUs7QUFDTCxpQkFBaUI7QUFDakIsbUJBQW1CLDBDQUFPO0FBQzFCLFNBQVMsU0FBUztBQUNsQixTQUFTLE9BQU87QUFDaEIsUUFBUSwwRUFBcUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsbUJBQW1CLFNBQVM7QUFDNUIsMEJBQTBCLGdCQUFnQixJQUFJLE9BQU87QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxxQkFBcUIsU0FBUztBQUM5QiwwQkFBMEIsU0FBUyxJQUFJLHFCQUFxQjtBQUM1RDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQSxnQ0FBZ0MsMEVBQXlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDZFQUE0QjtBQUNqRDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwwQ0FBVSxJQUFJLE9BQU8sUUFBUSx3Q0FBd0M7QUFDdEYsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsaUJBQWlCLDBDQUFVLElBQUksT0FBTyxRQUFRLHdDQUF3QztBQUN0RjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsbUJBQW1CLDBDQUFVLElBQUksU0FBUyxRQUFRLDBDQUEwQztBQUM1RjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsT0FBTyxRQUFRLG9CQUFvQjtBQUM1RCxhQUFhO0FBQ2IsWUFBWSwwQ0FBTyxHQUFHLGFBQWEsT0FBTyxxQkFBcUI7QUFDL0Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLG1CQUFtQiwwQ0FBZSxJQUFJLGdCQUFnQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsMEJBQTBCO0FBQ3ZELDRCQUE0Qix3Q0FBd0M7QUFDcEUsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGlCQUFpQixFQUFFLDZFQUE0QixDQUFDO0FBQ2hGO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSx1QkFBdUIsMENBQU8sR0FBRyxhQUFhLE9BQU8sbUJBQW1CO0FBQ3hFLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQSxhQUFhO0FBQ2IsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDBDQUFPLElBQUksU0FBUztBQUMzQztBQUNBLDJCQUEyQixtRUFBa0I7QUFDN0MsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBDQUFHLElBQUksU0FBUyxxQkFBcUIsZUFBZSx3QkFBd0I7QUFDdkc7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGtCQUFrQiwwQ0FBTyxHQUFHLGFBQWEsT0FBTyxtQkFBbUI7QUFDbkUsa0JBQWtCLHlDQUFLLElBQUksT0FBTyxRQUFRLHNDQUFzQztBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMENBQUcsSUFBSSxTQUFTLHFCQUFxQixlQUFlLHdCQUF3QjtBQUN2RztBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsU0FBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esd0JBQXdCLHlDQUFLLElBQUksT0FBTyxRQUFRLHNDQUFzQztBQUN0RixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsU0FBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwwQ0FBTyxHQUFHLGFBQWEsT0FBTyxtQkFBbUI7QUFDMUUsZUFBZTtBQUNmO0FBQ0E7QUFDQSxrQkFBa0IsMENBQU8sR0FBRyxhQUFhLE9BQU8sbUJBQW1CO0FBQ25FLGtCQUFrQix5Q0FBSyxJQUFJLE9BQU8sUUFBUSxzQ0FBc0M7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBDQUFHLElBQUksU0FBUyxxQkFBcUIsZUFBZSx3QkFBd0I7QUFDdkc7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHdCQUF3Qix5Q0FBSyxJQUFJLE9BQU8sUUFBUSxzQ0FBc0M7QUFDdEYsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLGlDQUFpQyxTQUFTO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxnQkFBZ0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDZDQUFNO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrRUFBaUI7QUFDeEM7QUFDQSxHQUFHO0FBQ0g7QUFDQSxxQkFBcUIsMENBQU8sSUFBSSxTQUFTLHdCQUF3QixzQkFBc0I7QUFDdkY7QUFDQSx5QkFBeUIsU0FBUyxJQUFJLHFCQUFxQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNEVBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMERBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wseUJBQXlCLFNBQVMsSUFBSSxNQUFNO0FBQzVDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZUFBZSx5Q0FBTSxHQUFHLGNBQWM7QUFDdEMsa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTCxrQkFBa0IseUNBQU0sR0FBRyxlQUFlLElBQUksWUFBWTtBQUMxRDtBQUNBLGNBQWMsMENBQU87QUFDckIsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBFQUF5QjtBQUM1QztBQUNBLEtBQUs7QUFDTCwyQkFBMkIsU0FBUztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDREQUFXO0FBQ3hCLGFBQWEsNERBQVc7QUFDeEIsYUFBYSw0REFBVztBQUN4QixhQUFhLDREQUFXO0FBQ3hCLGFBQWEsNERBQVc7QUFDeEIsYUFBYSw0REFBVztBQUN4QixhQUFhLDREQUFXO0FBQ3hCLGFBQWEsNERBQVc7QUFDeEIsYUFBYSw0REFBVztBQUN4QixhQUFhLDREQUFXO0FBQ3hCLGFBQWEsNERBQVc7QUFDeEIsc0JBQXNCLG1FQUFrQjtBQUN4QztBQUNBO0FBQ0Esc0JBQXNCLG1FQUFrQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EseUJBQXlCLFNBQVM7QUFDbEM7QUFDQTtBQUNBLEtBQUs7QUFDTCw0QkFBNEIsU0FBUztBQUNyQztBQUNBO0FBQ0EsS0FBSztBQUNMLG1DQUFtQyxTQUFTO0FBQzVDLDBCQUEwQixTQUFTO0FBQ25DO0FBQ0Esb0ZBQW9GLDhEQUFhO0FBQ2pHLEtBQUs7QUFDTCx1QkFBdUIsU0FBUztBQUNoQztBQUNBLG1GQUFtRiw4REFBYTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx5QkFBeUIsU0FBUztBQUNsQztBQUNBLG9GQUFvRiw4REFBYTtBQUNqRyxLQUFLO0FBQ0wsb0JBQW9CLFNBQVM7QUFDN0Isa0JBQWtCLFNBQVM7QUFDM0IsZ0NBQWdDLHlDQUFJLHVDQUF1Qyx5Q0FBSTtBQUMvRTtBQUNBLHlCQUF5QixnQkFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxnQkFBZ0IseUNBQUcseUJBQXlCLFNBQVM7QUFDckQsNEJBQTRCLFNBQVM7QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTCxxQkFBcUIsU0FBUztBQUM5QjtBQUNBLDRJQUE0SSw4REFBYTtBQUN6SixLQUFLO0FBQ0wsK0JBQStCLHlDQUFJLGtCQUFrQix5Q0FBSTtBQUN6RCxzQkFBc0IsU0FBUztBQUMvQiw2QkFBNkIseUNBQUk7QUFDakMsdUNBQXVDLHlDQUFJO0FBQzNDLHFCQUFxQix5Q0FBRztBQUN4QixtQkFBbUIseUNBQUk7QUFDdkIsdUJBQXVCLHlDQUFJO0FBQzNCLGlDQUFpQyx3RUFBdUI7QUFDeEQsMkJBQTJCLHlDQUFHLEVBQUUseUNBQUk7QUFDcEMseUJBQXlCLHlDQUFHO0FBQzVCLDZCQUE2Qix5Q0FBRyx1Q0FBdUMseUNBQUk7QUFDM0UsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMENBQU8sQ0FBQyxvRUFBbUIsS0FBSyxnQkFBZ0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1REFBdUQsd0RBQU8sNkpBQTZKLEVBQUUsd0VBQXVCLENBQUM7QUFDalI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLGVBQWUsMENBQU8sQ0FBQyxvRUFBbUIsS0FBSyxTQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1REFBdUQsd0RBQU8sNkpBQTZKLEVBQUUsd0VBQXVCLENBQUM7QUFDalI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLGVBQWUsMENBQU8sQ0FBQyxvRUFBbUIsS0FBSyxTQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1REFBdUQsd0RBQU8sNkpBQTZKLEVBQUUsd0VBQXVCLENBQUM7QUFDalI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLGVBQWUsMENBQU8sYUFBYSxPQUFPO0FBQzFDLEtBQUs7QUFDTDtBQUNBO0FBQ0EsZUFBZSwwQ0FBZSxJQUFJLGdCQUFnQjtBQUNsRDtBQUNBO0FBQ0EsU0FBUztBQUNULHdCQUF3QixvQkFBb0I7QUFDNUMsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxlQUFlLDBDQUFPLElBQUksT0FBTztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBDQUFPLElBQUksT0FBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDBFQUF5QjtBQUN2RTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSx3RUFBd0UsOERBQWEsK0RBQStELDhEQUFhO0FBQ2pLO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWEsMENBQWUsSUFBSSx3QkFBd0I7QUFDeEQ7QUFDQSx5Q0FBeUMsb0VBQW1CO0FBQzVEO0FBQ0EsZ0JBQWdCLG9FQUFtQjtBQUNuQyxzQkFBc0Isb0VBQW1CO0FBQ3pDO0FBQ0EsbUdBQW1HLDBFQUF5QjtBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMENBQUk7QUFDaEI7QUFDQTtBQUNBLHlCQUF5QixTQUFTO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EscUJBQXFCLG9DQUFvQywwQkFBMEI7QUFDbkY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFCQUFxQixvQ0FBb0MsZ0NBQWdDO0FBQ3pGO0FBQ0EsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLHlDQUFHO0FBQ3BCLHFCQUFxQixvQ0FBb0Msa0NBQWtDO0FBQzNGO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHFCQUFxQixvQ0FBb0MsMEJBQTBCO0FBQ25GO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiwwQ0FBZSxJQUFJLGtCQUFrQjtBQUN4RDtBQUNBLHNDQUFzQyw0Q0FBNEM7QUFDbEYsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLG1CQUFtQix5Q0FBSTtBQUN2Qix1QkFBdUIsb0NBQW9DLGFBQWE7QUFDeEU7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0NBQW9DO0FBQzNELFdBQVc7QUFDWDtBQUNBO0FBQ0EsdUJBQXVCLG9DQUFvQyxxQkFBcUI7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9DQUFvQztBQUMzRDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwRUFBMEUsOERBQWE7QUFDakg7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLG1CQUFtQixrQ0FBa0Msc0JBQXNCO0FBQzNFLHFCQUFxQixvQ0FBb0M7QUFDekQsU0FBUztBQUNUO0FBQ0EsbUJBQW1CLGtDQUFrQyxxQkFBcUI7QUFDMUUscUJBQXFCLG9DQUFvQztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLHVCQUF1QixvQ0FBb0MscUJBQXFCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDBDQUFPLENBQUMsb0VBQW1CLElBQUksa0JBQWtCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDZCQUE2Qiw4QkFBOEI7QUFDbkYsV0FBVztBQUNYO0FBQ0E7QUFDQSx1QkFBdUIsb0NBQW9DLG1CQUFtQjtBQUM5RTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsdUJBQXVCLG9DQUFvQyxxQkFBcUI7QUFDaEY7QUFDQSxXQUFXO0FBQ1g7QUFDQSx1QkFBdUIsb0NBQW9DLGFBQWE7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQzhDO0FBQzlDLFlBQVkseUNBQVcsd0JBQXdCLE9BQU8sNERBQUU7QUFDeEQ7QUFDQSw4QkFBOEIsNkNBQTZDO0FBQzNFLGdCQUFnQiw2REFBUTtBQUN4QixpQkFBaUIsb0VBQWM7QUFDL0Isa0JBQWtCLGlFQUFZO0FBQzlCLGtCQUFrQiwyREFBVztBQUM3QixFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMEVBQXlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLG9CQUFvQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7QUFDSCx5QkFBeUIsd0RBQUksQ0FBQyxnRUFBZSxhQUFhO0FBQzFELHlEQUF5RCx1REFBRyxDQUFDLHFEQUFJLElBQUksb0JBQW9CO0FBQ3pGO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0RBQU87QUFDbkIsQ0FBQztBQUNEO0FBQ0EsZ0JBQWdCLDZEQUFRO0FBQ3hCLDhCQUE4Qix3REFBTyxXQUFXLGtFQUFnQixHQUFHLCtEQUFhO0FBQ2hGO0FBQ0E7QUFDQSwyQ0FBMkMsMEVBQXlCO0FBQ3BFO0FBQ0E7QUFDQSxJQUFJLDhFQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlCQUF5Qix1REFBRyxDQUFDLHdFQUFzQixhQUFhLHlDQUF5Qyx1REFBRyxDQUFDLHdEQUFNLElBQUksMENBQTBDLHVEQUFHLENBQUMsa0VBQWlCLElBQUksMEJBQTBCLHVEQUFHO0FBQ3ZOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxHQUFHLEdBQUc7QUFDWDs7QUFFQTtBQUNnQzs7QUFFaEM7QUFDNEM7QUFDYjtBQUNpQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDZDQUFnQjtBQUNyQyxLQUFLLHNCQUFzQjtBQUMzQixxQkFBcUIsZ0VBQWU7QUFDcEMsMkJBQTJCLHVEQUFJO0FBQy9CLHNDQUFzQyxJQUFJO0FBQzFDLHNCQUFzQiw4Q0FBaUI7QUFDdkM7QUFDQSx1Q0FBdUMsTUFBTTtBQUM3Qyx3QkFBd0IsTUFBTTtBQUM5QixRQUFRO0FBQ1I7QUFDQSw2Q0FBNkMsR0FBRywrREFBK0QsaURBQWlEO0FBQ2hLO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLHVEQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDcUQ7QUFDTztBQUM1QjtBQUNnQjtBQUNoRDtBQUNBLG1CQUFtQiw2Q0FBaUI7QUFDcEMsS0FBSyw0QkFBNEI7QUFDakMsZ0JBQWdCLHNFQUFxQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsMkRBQVk7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1REFBSztBQUNoQyxzQ0FBc0MsSUFBSTtBQUMxQywyQkFBMkIsdURBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxlQUFlO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNnRDtBQUNoRCxtQkFBbUIsNkNBQWlCO0FBQ3BDLFVBQVUsb0NBQW9DO0FBQzlDO0FBQ0E7QUFDQSxXQUFXLHVEQUFNO0FBQ2pCLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsZ0NBQWdDLHVEQUFJO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBO0FBQ3FEO0FBQ3JCO0FBQ2dCO0FBQ2hELG9CQUFvQiw2Q0FBaUI7QUFDckMsS0FBSyw0QkFBNEI7QUFDakMsZ0JBQWdCLCtEQUFjO0FBQzlCO0FBQ0EsZ0JBQWdCLDBFQUF5QjtBQUN6QztBQUNBLDJCQUEyQix1REFBSztBQUNoQywyQkFBMkIsdURBQUk7QUFDL0I7QUFDQTtBQUNBLFlBQVksbUVBQWtCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9lbGVtZW50cy9kaXN0L3JlYWN0L3NpZ24tdXAvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENsZXJrSG9zdFJvdXRlckNvbnRleHQsXG4gIFJvdXRlcixcbiAgdXNlQ2xlcmtSb3V0ZXIsXG4gIHVzZU5leHRSb3V0ZXIsXG4gIHVzZVZpcnR1YWxSb3V0ZXJcbn0gZnJvbSBcIi4uLy4uL2NodW5rLVFTWUhPVTdYLm1qc1wiO1xuaW1wb3J0IHtcbiAgQ0FQVENIQV9FTEVNRU5UX0lELFxuICBDbGVya0VsZW1lbnRzRXJyb3IsXG4gIENsZXJrRWxlbWVudHNSdW50aW1lRXJyb3IsXG4gIEVSUk9SX0NPREVTLFxuICBGb3JtLFxuICBGb3JtU3RvcmVQcm92aWRlcixcbiAgTUFHSUNfTElOS19WRVJJRllfUEFUSF9ST1VURSxcbiAgUkVTRU5EQUJMRV9DT1VOVERPV05fREVGQVVMVCxcbiAgUk9VVElORyxcbiAgU0VBUkNIX1BBUkFNUyxcbiAgU0lHTl9JTl9ERUZBVUxUX0JBU0VfUEFUSCxcbiAgU0lHTl9VUF9ERUZBVUxUX0JBU0VfUEFUSCxcbiAgU0lHTl9VUF9NT0RFUyxcbiAgU1NPX0NBTExCQUNLX1BBVEhfUk9VVEUsXG4gIFNpZ25VcFJvdXRlckN0eCxcbiAgU2lnblVwU3RhcnRDdHgsXG4gIFNpZ25VcFN0ZXAsXG4gIFNpZ25VcFN0cmF0ZWd5LFxuICBTaWduVXBWZXJpZmljYXRpb25DdHgsXG4gIFN1Ym1pdCxcbiAgVGhpcmRQYXJ0eU1hY2hpbmUsXG4gIFRoaXJkUGFydHlNYWNoaW5lSWQsXG4gIGFzc2VydEFjdG9yRXZlbnRFcnJvcixcbiAgaW5zcGVjdCxcbiAgc2VuZFRvTG9hZGluZyxcbiAgc2hvdWxkVXNlVmlydHVhbFJvdXRpbmcsXG4gIHVzZUZvcm1TdG9yZVxufSBmcm9tIFwiLi4vLi4vY2h1bmstVlkzN0cyM0cubWpzXCI7XG5cbi8vIHNyYy9yZWFjdC9zaWduLXVwL2luZGV4LnRzXG5pbXBvcnQgXCJjbGllbnQtb25seVwiO1xuXG4vLyBzcmMvcmVhY3Qvc2lnbi11cC9yb290LnRzeFxuaW1wb3J0IHsgdXNlQ2xlcmsgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9yZWFjdFwiO1xuaW1wb3J0IHsgZXZlbnRDb21wb25lbnRNb3VudGVkIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvdGVsZW1ldHJ5XCI7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gXCJAeHN0YXRlL3JlYWN0XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNyZWF0ZUFjdG9yIH0gZnJvbSBcInhzdGF0ZVwiO1xuXG4vLyBzcmMvaW50ZXJuYWxzL21hY2hpbmVzL3NpZ24tdXAvY29udGludWUubWFjaGluZS50c1xuaW1wb3J0IHsgc25ha2VUb0NhbWVsIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvdW5kZXJzY29yZVwiO1xuaW1wb3J0IHsgZnJvbVByb21pc2UsIG5vdCwgb3IsIHNldHVwIH0gZnJvbSBcInhzdGF0ZVwiO1xuXG4vLyBzcmMvaW50ZXJuYWxzL21hY2hpbmVzL3NpZ24tdXAvdXRpbHMvZmllbGRzLXRvLXBhcmFtcy50c1xudmFyIFNpZ25VcEFkZGl0aW9uYWxLZXlzID0gW1xuICBcImZpcnN0TmFtZVwiLFxuICBcImxhc3ROYW1lXCIsXG4gIFwiZW1haWxBZGRyZXNzXCIsXG4gIFwidXNlcm5hbWVcIixcbiAgXCJwYXNzd29yZFwiLFxuICBcInBob25lTnVtYmVyXCIsXG4gIFwibGVnYWxBY2NlcHRlZFwiXG5dO1xudmFyIHNpZ25VcEtleXMgPSBuZXcgU2V0KFNpZ25VcEFkZGl0aW9uYWxLZXlzKTtcbmZ1bmN0aW9uIGlzU2lnblVwUGFyYW0oa2V5KSB7XG4gIHJldHVybiBzaWduVXBLZXlzLmhhcyhrZXkpO1xufVxuZnVuY3Rpb24gZmllbGRzVG9TaWduVXBQYXJhbXMoZmllbGRzKSB7XG4gIGNvbnN0IHBhcmFtcyA9IHt9O1xuICBmaWVsZHMuZm9yRWFjaCgoeyB2YWx1ZSwgY2hlY2tlZCwgdHlwZSB9LCBrZXkpID0+IHtcbiAgICBpZiAoaXNTaWduVXBQYXJhbShrZXkpICYmIHZhbHVlICE9PSB2b2lkIDAgJiYgdHlwZSAhPT0gXCJjaGVja2JveFwiKSB7XG4gICAgICBwYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICBpZiAoaXNTaWduVXBQYXJhbShrZXkpICYmIGNoZWNrZWQgIT09IHZvaWQgMCAmJiB0eXBlID09PSBcImNoZWNrYm94XCIpIHtcbiAgICAgIHBhcmFtc1trZXldID0gY2hlY2tlZDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcGFyYW1zO1xufVxuXG4vLyBzcmMvaW50ZXJuYWxzL21hY2hpbmVzL3NpZ24tdXAvY29udGludWUubWFjaGluZS50c1xudmFyIFNpZ25VcENvbnRpbnVlTWFjaGluZUlkID0gXCJTaWduVXBDb250aW51ZVwiO1xudmFyIFNpZ25VcENvbnRpbnVlTWFjaGluZSA9IHNldHVwKHtcbiAgYWN0b3JzOiB7XG4gICAgYXR0ZW1wdDogZnJvbVByb21pc2UoXG4gICAgICAoeyBpbnB1dDogeyBmaWVsZHMsIHBhcmVudCB9IH0pID0+IHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gZmllbGRzVG9TaWduVXBQYXJhbXMoZmllbGRzKTtcbiAgICAgICAgcmV0dXJuIHBhcmVudC5nZXRTbmFwc2hvdCgpLmNvbnRleHQuY2xlcmsuY2xpZW50LnNpZ25VcC51cGRhdGUocGFyYW1zKTtcbiAgICAgIH1cbiAgICApXG4gIH0sXG4gIGFjdGlvbnM6IHtcbiAgICBzZXRGb3JtRXJyb3JzOiAoeyBjb250ZXh0LCBldmVudCB9KSA9PiB7XG4gICAgICBhc3NlcnRBY3RvckV2ZW50RXJyb3IoZXZlbnQpO1xuICAgICAgY29udGV4dC5mb3JtUmVmLnNlbmQoe1xuICAgICAgICB0eXBlOiBcIkVSUk9SUy5TRVRcIixcbiAgICAgICAgZXJyb3I6IGV2ZW50LmVycm9yXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG1hcmtGb3JtQXNQcm9ncmVzc2l2ZTogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICBjb25zdCBzaWduVXAgPSBjb250ZXh0LnBhcmVudC5nZXRTbmFwc2hvdCgpLmNvbnRleHQuY2xlcmsuY2xpZW50LnNpZ25VcDtcbiAgICAgIGNvbnN0IG1pc3NpbmcgPSBzaWduVXAubWlzc2luZ0ZpZWxkcy5tYXAoc25ha2VUb0NhbWVsKTtcbiAgICAgIGNvbnN0IG9wdGlvbmFsID0gc2lnblVwLm9wdGlvbmFsRmllbGRzLm1hcChzbmFrZVRvQ2FtZWwpO1xuICAgICAgY29uc3QgcmVxdWlyZWQgPSBzaWduVXAucmVxdWlyZWRGaWVsZHMubWFwKHNuYWtlVG9DYW1lbCk7XG4gICAgICBjb25zdCBwcm9ncmVzc2l2ZUZpZWxkVmFsdWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICAgIGZvciAoY29uc3Qga2V5IG9mIHJlcXVpcmVkLmNvbmNhdChvcHRpb25hbCkpIHtcbiAgICAgICAgaWYgKGtleSBpbiBzaWduVXApIHtcbiAgICAgICAgICBwcm9ncmVzc2l2ZUZpZWxkVmFsdWVzLnNldChrZXksIHNpZ25VcFtrZXldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29udGV4dC5mb3JtUmVmLnNlbmQoe1xuICAgICAgICB0eXBlOiBcIk1BUktfQVNfUFJPR1JFU1NJVkVcIixcbiAgICAgICAgbWlzc2luZyxcbiAgICAgICAgb3B0aW9uYWwsXG4gICAgICAgIHJlcXVpcmVkLFxuICAgICAgICBkZWZhdWx0VmFsdWVzOiBwcm9ncmVzc2l2ZUZpZWxkVmFsdWVzXG4gICAgICB9KTtcbiAgICB9LFxuICAgIHVubWFya0Zvcm1Bc1Byb2dyZXNzaXZlOiAoeyBjb250ZXh0IH0pID0+IGNvbnRleHQuZm9ybVJlZi5zZW5kKHsgdHlwZTogXCJVTk1BUktfQVNfUFJPR1JFU1NJVkVcIiB9KSxcbiAgICBzZW5kVG9OZXh0OiAoeyBjb250ZXh0LCBldmVudCB9KSA9PiBjb250ZXh0LnBhcmVudC5zZW5kKHsgdHlwZTogXCJORVhUXCIsIHJlc291cmNlOiBldmVudC5vdXRwdXQgfSksXG4gICAgc2VuZFRvTG9hZGluZ1xuICB9LFxuICBndWFyZHM6IHtcbiAgICBpc1N0YXR1c01pc3NpbmdSZXF1aXJlbWVudHM6ICh7IGNvbnRleHQgfSkgPT4ge1xuICAgICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgICByZXR1cm4gKChfYyA9IChfYiA9IChfYSA9IGNvbnRleHQucGFyZW50LmdldFNuYXBzaG90KCkuY29udGV4dC5jbGVyaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNsaWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnNpZ25VcCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLnN0YXR1cykgPT09IFwibWlzc2luZ19yZXF1aXJlbWVudHNcIjtcbiAgICB9LFxuICAgIGhhc01ldFByZXZpb3VzTWlzc2luZ1JlcXVpcmVtZW50czogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICBjb25zdCBzaWduVXAgPSBjb250ZXh0LnBhcmVudC5nZXRTbmFwc2hvdCgpLmNvbnRleHQuY2xlcmsuY2xpZW50LnNpZ25VcDtcbiAgICAgIGNvbnN0IGZpZWxkcyA9IGNvbnRleHQuZm9ybVJlZi5nZXRTbmFwc2hvdCgpLmNvbnRleHQuZmllbGRzO1xuICAgICAgY29uc3Qgc2lnblVwTWlzc2luZ0ZpZWxkcyA9IHNpZ25VcC5taXNzaW5nRmllbGRzLm1hcChzbmFrZVRvQ2FtZWwpO1xuICAgICAgY29uc3QgbWlzc2luZ0ZpZWxkcyA9IEFycmF5LmZyb20oY29udGV4dC5mb3JtUmVmLmdldFNuYXBzaG90KCkuY29udGV4dC5maWVsZHMua2V5cygpKS5maWx0ZXIoKGtleSkgPT4ge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICByZXR1cm4gIXNpZ25VcE1pc3NpbmdGaWVsZHMuaW5jbHVkZXMoa2V5KSAmJiAhKChfYSA9IGZpZWxkcy5nZXQoa2V5KSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnZhbHVlKSAmJiAhKChfYiA9IGZpZWxkcy5nZXQoa2V5KSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNoZWNrZWQpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWlzc2luZ0ZpZWxkcy5sZW5ndGggPT09IDA7XG4gICAgfVxuICB9LFxuICB0eXBlczoge31cbn0pLmNyZWF0ZU1hY2hpbmUoe1xuICBpZDogU2lnblVwQ29udGludWVNYWNoaW5lSWQsXG4gIGNvbnRleHQ6ICh7IGlucHV0IH0pID0+ICh7XG4gICAgYmFzZVBhdGg6IGlucHV0LmJhc2VQYXRoIHx8IFNJR05fVVBfREVGQVVMVF9CQVNFX1BBVEgsXG4gICAgZm9ybVJlZjogaW5wdXQuZm9ybVJlZixcbiAgICBwYXJlbnQ6IGlucHV0LnBhcmVudCxcbiAgICBsb2FkaW5nU3RlcDogXCJjb250aW51ZVwiXG4gIH0pLFxuICBlbnRyeTogXCJtYXJrRm9ybUFzUHJvZ3Jlc3NpdmVcIixcbiAgb25Eb25lOiB7XG4gICAgYWN0aW9uczogXCJ1bm1hcmtGb3JtQXNQcm9ncmVzc2l2ZVwiXG4gIH0sXG4gIGluaXRpYWw6IFwiUGVuZGluZ1wiLFxuICBzdGF0ZXM6IHtcbiAgICBQZW5kaW5nOiB7XG4gICAgICB0YWdzOiBbXCJzdGF0ZTpwZW5kaW5nXCJdLFxuICAgICAgZGVzY3JpcHRpb246IFwiV2FpdGluZyBmb3IgdXNlciBpbnB1dFwiLFxuICAgICAgb246IHtcbiAgICAgICAgU1VCTUlUOiB7XG4gICAgICAgICAgZ3VhcmQ6IG9yKFtcImhhc01ldFByZXZpb3VzTWlzc2luZ1JlcXVpcmVtZW50c1wiLCBub3QoXCJpc1N0YXR1c01pc3NpbmdSZXF1aXJlbWVudHNcIildKSxcbiAgICAgICAgICB0YXJnZXQ6IFwiQXR0ZW1wdGluZ1wiLFxuICAgICAgICAgIHJlZW50ZXI6IHRydWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgQXR0ZW1wdGluZzoge1xuICAgICAgdGFnczogW1wic3RhdGU6YXR0ZW1wdGluZ1wiLCBcInN0YXRlOmxvYWRpbmdcIl0sXG4gICAgICBlbnRyeTogXCJzZW5kVG9Mb2FkaW5nXCIsXG4gICAgICBpbnZva2U6IHtcbiAgICAgICAgaWQ6IFwiYXR0ZW1wdFwiLFxuICAgICAgICBzcmM6IFwiYXR0ZW1wdFwiLFxuICAgICAgICBpbnB1dDogKHsgY29udGV4dCB9KSA9PiAoe1xuICAgICAgICAgIHBhcmVudDogY29udGV4dC5wYXJlbnQsXG4gICAgICAgICAgZmllbGRzOiBjb250ZXh0LmZvcm1SZWYuZ2V0U25hcHNob3QoKS5jb250ZXh0LmZpZWxkc1xuICAgICAgICB9KSxcbiAgICAgICAgb25Eb25lOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2VuZFRvTmV4dFwiLCBcInNlbmRUb0xvYWRpbmdcIl1cbiAgICAgICAgfSxcbiAgICAgICAgb25FcnJvcjoge1xuICAgICAgICAgIGFjdGlvbnM6IFtcInNldEZvcm1FcnJvcnNcIiwgXCJzZW5kVG9Mb2FkaW5nXCJdLFxuICAgICAgICAgIHRhcmdldDogXCJQZW5kaW5nXCJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG5cbi8vIHNyYy9pbnRlcm5hbHMvbWFjaGluZXMvc2lnbi11cC9yb3V0ZXIubWFjaGluZS50c1xuaW1wb3J0IHsgam9pblVSTCB9IGZyb20gXCJAY2xlcmsvc2hhcmVkL3VybFwiO1xuaW1wb3J0IHsgYW5kIGFzIGFuZDMsIGFzc2lnbiBhcyBhc3NpZ24zLCBlbnF1ZXVlQWN0aW9ucyBhcyBlbnF1ZXVlQWN0aW9uczMsIGxvZyBhcyBsb2cyLCBub3QgYXMgbm90Mywgb3IgYXMgb3IyLCByYWlzZSBhcyByYWlzZTIsIHNlbmRUbyBhcyBzZW5kVG8zLCBzZXR1cCBhcyBzZXR1cDQgfSBmcm9tIFwieHN0YXRlXCI7XG5cbi8vIHNyYy9pbnRlcm5hbHMvbWFjaGluZXMvc2lnbi11cC9zdGFydC5tYWNoaW5lLnRzXG5pbXBvcnQgeyBhbmQsIGFzc2VydEV2ZW50LCBhc3NpZ24sIGVucXVldWVBY3Rpb25zLCBmcm9tUHJvbWlzZSBhcyBmcm9tUHJvbWlzZTIsIG5vdCBhcyBub3QyLCBzZW5kVG8sIHNldHVwIGFzIHNldHVwMiB9IGZyb20gXCJ4c3RhdGVcIjtcbnZhciBESVNBQkxFQUJMRV9GSUVMRFMgPSBbXCJlbWFpbEFkZHJlc3NcIiwgXCJwaG9uZU51bWJlclwiXTtcbnZhciBTaWduVXBTdGFydE1hY2hpbmVJZCA9IFwiU2lnblVwU3RhcnRcIjtcbnZhciBQUkVGSUxMX0ZJRUxEUyA9IFtcImZpcnN0TmFtZVwiLCBcImxhc3ROYW1lXCIsIFwiZW1haWxBZGRyZXNzXCIsIFwidXNlcm5hbWVcIiwgXCJwaG9uZU51bWJlclwiXTtcbnZhciBTaWduVXBTdGFydE1hY2hpbmUgPSBzZXR1cDIoe1xuICBhY3RvcnM6IHtcbiAgICBhdHRlbXB0OiBmcm9tUHJvbWlzZTIoKHsgaW5wdXQ6IHsgZmllbGRzLCBwYXJlbnQsIHBhcmFtcyB9IH0pID0+IHtcbiAgICAgIGNvbnN0IGZpZWxkUGFyYW1zID0gZmllbGRzVG9TaWduVXBQYXJhbXMoZmllbGRzKTtcbiAgICAgIHJldHVybiBwYXJlbnQuZ2V0U25hcHNob3QoKS5jb250ZXh0LmNsZXJrLmNsaWVudC5zaWduVXAuY3JlYXRlKHsgLi4uZmllbGRQYXJhbXMsIC4uLnBhcmFtcyB9KTtcbiAgICB9KSxcbiAgICBhdHRlbXB0V2ViMzogZnJvbVByb21pc2UyKFxuICAgICAgKHsgaW5wdXQ6IHsgcGFyZW50LCBzdHJhdGVneSB9IH0pID0+IHtcbiAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSBcIndlYjNfbWV0YW1hc2tfc2lnbmF0dXJlXCIpIHtcbiAgICAgICAgICByZXR1cm4gcGFyZW50LmdldFNuYXBzaG90KCkuY29udGV4dC5jbGVyay5jbGllbnQuc2lnblVwLmF1dGhlbnRpY2F0ZVdpdGhNZXRhbWFzaygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdHJhdGVneSA9PT0gXCJ3ZWIzX2NvaW5iYXNlX3dhbGxldF9zaWduYXR1cmVcIikge1xuICAgICAgICAgIHJldHVybiBwYXJlbnQuZ2V0U25hcHNob3QoKS5jb250ZXh0LmNsZXJrLmNsaWVudC5zaWduVXAuYXV0aGVudGljYXRlV2l0aENvaW5iYXNlV2FsbGV0KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0cmF0ZWd5ID09PSBcIndlYjNfb2t4X3dhbGxldF9zaWduYXR1cmVcIikge1xuICAgICAgICAgIHJldHVybiBwYXJlbnQuZ2V0U25hcHNob3QoKS5jb250ZXh0LmNsZXJrLmNsaWVudC5zaWduVXAuYXV0aGVudGljYXRlV2l0aE9LWFdhbGxldCgpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBDbGVya0VsZW1lbnRzUnVudGltZUVycm9yKGBVbnN1cHBvcnRlZCBXZWIzIHN0cmF0ZWd5OiAke3N0cmF0ZWd5fWApO1xuICAgICAgfVxuICAgICksXG4gICAgdGhpcmRQYXJ0eTogVGhpcmRQYXJ0eU1hY2hpbmVcbiAgfSxcbiAgYWN0aW9uczoge1xuICAgIHNlbmRUb05leHQ6ICh7IGNvbnRleHQsIGV2ZW50IH0pID0+IGNvbnRleHQucGFyZW50LnNlbmQoeyB0eXBlOiBcIk5FWFRcIiwgcmVzb3VyY2U6IGV2ZW50Lm91dHB1dCB9KSxcbiAgICBzZW5kVG9Mb2FkaW5nLFxuICAgIHNldEZvcm1SZWY6IGFzc2lnbigoeyBldmVudCB9KSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmb3JtUmVmOiBldmVudC5mb3JtUmVmXG4gICAgICB9O1xuICAgIH0pLFxuICAgIHNldEZvcm1EaXNhYmxlZFRpY2tldEZpZWxkczogZW5xdWV1ZUFjdGlvbnMoKHsgY29udGV4dCwgZW5xdWV1ZSB9KSA9PiB7XG4gICAgICBpZiAoIWNvbnRleHQudGlja2V0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGN1cnJlbnRGaWVsZHMgPSBjb250ZXh0LmZvcm1SZWYuZ2V0U25hcHNob3QoKS5jb250ZXh0LmZpZWxkcztcbiAgICAgIGZvciAoY29uc3QgbmFtZSBvZiBESVNBQkxFQUJMRV9GSUVMRFMpIHtcbiAgICAgICAgaWYgKGN1cnJlbnRGaWVsZHMuaGFzKG5hbWUpKSB7XG4gICAgICAgICAgZW5xdWV1ZS5zZW5kVG8oY29udGV4dC5mb3JtUmVmLCB7IHR5cGU6IFwiRklFTEQuRElTQUJMRVwiLCBmaWVsZDogeyBuYW1lIH0gfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KSxcbiAgICBzZXRGb3JtRXJyb3JzOiBzZW5kVG8oXG4gICAgICAoeyBjb250ZXh0IH0pID0+IGNvbnRleHQuZm9ybVJlZixcbiAgICAgICh7IGV2ZW50IH0pID0+IHtcbiAgICAgICAgYXNzZXJ0QWN0b3JFdmVudEVycm9yKGV2ZW50KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0eXBlOiBcIkVSUk9SUy5TRVRcIixcbiAgICAgICAgICBlcnJvcjogZXZlbnQuZXJyb3JcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICApLFxuICAgIHNldERlZmF1bHRGb3JtVmFsdWVzOiAoeyBjb250ZXh0IH0pID0+IHtcbiAgICAgIGNvbnN0IHNpZ25VcCA9IGNvbnRleHQucGFyZW50LmdldFNuYXBzaG90KCkuY29udGV4dC5jbGVyay5jbGllbnQuc2lnblVwO1xuICAgICAgY29uc3QgcHJlZmlsbGVkRGVmYXVsdFZhbHVlcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgICBmb3IgKGNvbnN0IGtleSBvZiBQUkVGSUxMX0ZJRUxEUykge1xuICAgICAgICBpZiAoa2V5IGluIHNpZ25VcCkge1xuICAgICAgICAgIHByZWZpbGxlZERlZmF1bHRWYWx1ZXMuc2V0KGtleSwgc2lnblVwW2tleV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb250ZXh0LmZvcm1SZWYuc2VuZCh7XG4gICAgICAgIHR5cGU6IFwiUFJFRklMTF9ERUZBVUxUX1ZBTFVFU1wiLFxuICAgICAgICBkZWZhdWx0VmFsdWVzOiBwcmVmaWxsZWREZWZhdWx0VmFsdWVzXG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIGd1YXJkczoge1xuICAgIGlzTWlzc2luZ1JlcXVpcmVtZW50czogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgIHJldHVybiAoKF9jID0gKF9iID0gKF9hID0gY29udGV4dC5wYXJlbnQuZ2V0U25hcHNob3QoKS5jb250ZXh0LmNsZXJrKSA9PSBudWxsID8gdm9pZCAwIDogX2EuY2xpZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2Iuc2lnblVwKSA9PSBudWxsID8gdm9pZCAwIDogX2Muc3RhdHVzKSA9PT0gXCJtaXNzaW5nX3JlcXVpcmVtZW50c1wiO1xuICAgIH0sXG4gICAgaGFzVGlja2V0OiAoeyBjb250ZXh0IH0pID0+IEJvb2xlYW4oY29udGV4dC50aWNrZXQpLFxuICAgIGlzRXhhbXBsZU1vZGU6ICh7IGNvbnRleHQgfSkgPT4gQm9vbGVhbihjb250ZXh0LnBhcmVudC5nZXRTbmFwc2hvdCgpLmNvbnRleHQuZXhhbXBsZU1vZGUpXG4gIH0sXG4gIHR5cGVzOiB7fVxufSkuY3JlYXRlTWFjaGluZSh7XG4gIGlkOiBTaWduVXBTdGFydE1hY2hpbmVJZCxcbiAgY29udGV4dDogKHsgaW5wdXQgfSkgPT4gKHtcbiAgICBiYXNlUGF0aDogaW5wdXQuYmFzZVBhdGggfHwgU0lHTl9VUF9ERUZBVUxUX0JBU0VfUEFUSCxcbiAgICBmb3JtUmVmOiBpbnB1dC5mb3JtUmVmLFxuICAgIHBhcmVudDogaW5wdXQucGFyZW50LFxuICAgIGxvYWRpbmdTdGVwOiBcInN0YXJ0XCIsXG4gICAgdGlja2V0OiBpbnB1dC50aWNrZXRcbiAgfSksXG4gIGVudHJ5OiBcInNldERlZmF1bHRGb3JtVmFsdWVzXCIsXG4gIGluaXRpYWw6IFwiSW5pdFwiLFxuICBvbjoge1xuICAgIFNFVF9GT1JNOiB7XG4gICAgICBhY3Rpb25zOiBcInNldEZvcm1SZWZcIlxuICAgIH1cbiAgfSxcbiAgc3RhdGVzOiB7XG4gICAgSW5pdDoge1xuICAgICAgZGVzY3JpcHRpb246IFwiSGFuZGxlIHRpY2tldCwgaWYgcHJlc2VudDsgRWxzZSwgZGVmYXVsdCB0byBQZW5kaW5nIHN0YXRlLiBQZXIgdGlja2V0cywgYEF0dGVtcHRpbmdgIG1ha2VzIGEgYHNpZ25VcC5jcmVhdGVgIHJlcXVlc3QgYWxsb3dpbmcgZm9yIGFuIGluY29tcGxldGUgc2lnbiB1cCB0byBjb250YWluIHByb2dyZXNzaXZlbHkgZmlsbGVkIGZpZWxkcyBvbiB0aGUgU3RhcnQgc3RlcC5cIixcbiAgICAgIGFsd2F5czogW1xuICAgICAgICB7XG4gICAgICAgICAgZ3VhcmQ6IGFuZChbXCJoYXNUaWNrZXRcIiwgXCJpc01pc3NpbmdSZXF1aXJlbWVudHNcIl0pLFxuICAgICAgICAgIHRhcmdldDogXCJQZW5kaW5nXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGd1YXJkOiBcImhhc1RpY2tldFwiLFxuICAgICAgICAgIHRhcmdldDogXCJBdHRlbXB0aW5nXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRhcmdldDogXCJQZW5kaW5nXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgUGVuZGluZzoge1xuICAgICAgdGFnczogW1wic3RhdGU6cGVuZGluZ1wiXSxcbiAgICAgIGRlc2NyaXB0aW9uOiBcIldhaXRpbmcgZm9yIHVzZXIgaW5wdXRcIixcbiAgICAgIG9uOiB7XG4gICAgICAgIFNVQk1JVDoge1xuICAgICAgICAgIGd1YXJkOiBub3QyKFwiaXNFeGFtcGxlTW9kZVwiKSxcbiAgICAgICAgICB0YXJnZXQ6IFwiQXR0ZW1wdGluZ1wiLFxuICAgICAgICAgIHJlZW50ZXI6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgXCJBVVRIRU5USUNBVEUuV0VCM1wiOiB7XG4gICAgICAgICAgZ3VhcmQ6IG5vdDIoXCJpc0V4YW1wbGVNb2RlXCIpLFxuICAgICAgICAgIHRhcmdldDogXCJBdHRlbXB0aW5nV2ViM1wiLFxuICAgICAgICAgIHJlZW50ZXI6IHRydWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgQXR0ZW1wdGluZzoge1xuICAgICAgdGFnczogW1wic3RhdGU6YXR0ZW1wdGluZ1wiLCBcInN0YXRlOmxvYWRpbmdcIl0sXG4gICAgICBlbnRyeTogXCJzZW5kVG9Mb2FkaW5nXCIsXG4gICAgICBpbnZva2U6IHtcbiAgICAgICAgaWQ6IFwiYXR0ZW1wdENyZWF0ZVwiLFxuICAgICAgICBzcmM6IFwiYXR0ZW1wdFwiLFxuICAgICAgICBpbnB1dDogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICAgICAgY29uc3QgZGVmYXVsdFBhcmFtcyA9IHtcbiAgICAgICAgICAgIGZpZWxkczogY29udGV4dC5mb3JtUmVmLmdldFNuYXBzaG90KCkuY29udGV4dC5maWVsZHMsXG4gICAgICAgICAgICBwYXJlbnQ6IGNvbnRleHQucGFyZW50XG4gICAgICAgICAgfTtcbiAgICAgICAgICBjb25zdCBwYXJhbXMgPSBjb250ZXh0LnRpY2tldCA/IHtcbiAgICAgICAgICAgIHN0cmF0ZWd5OiBcInRpY2tldFwiLFxuICAgICAgICAgICAgdGlja2V0OiBjb250ZXh0LnRpY2tldFxuICAgICAgICAgIH0gOiB7fTtcbiAgICAgICAgICByZXR1cm4geyAuLi5kZWZhdWx0UGFyYW1zLCBwYXJhbXMgfTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Eb25lOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2V0Rm9ybURpc2FibGVkVGlja2V0RmllbGRzXCIsIFwic2VuZFRvTmV4dFwiLCBcInNlbmRUb0xvYWRpbmdcIl1cbiAgICAgICAgfSxcbiAgICAgICAgb25FcnJvcjoge1xuICAgICAgICAgIGFjdGlvbnM6IFtcInNldEZvcm1EaXNhYmxlZFRpY2tldEZpZWxkc1wiLCBcInNldEZvcm1FcnJvcnNcIiwgXCJzZW5kVG9Mb2FkaW5nXCJdLFxuICAgICAgICAgIHRhcmdldDogXCJQZW5kaW5nXCJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgQXR0ZW1wdGluZ1dlYjM6IHtcbiAgICAgIHRhZ3M6IFtcInN0YXRlOmF0dGVtcHRpbmdcIiwgXCJzdGF0ZTpsb2FkaW5nXCJdLFxuICAgICAgZW50cnk6IFwic2VuZFRvTG9hZGluZ1wiLFxuICAgICAgaW52b2tlOiB7XG4gICAgICAgIGlkOiBcImF0dGVtcHRDcmVhdGVXZWIzXCIsXG4gICAgICAgIHNyYzogXCJhdHRlbXB0V2ViM1wiLFxuICAgICAgICBpbnB1dDogKHsgY29udGV4dCwgZXZlbnQgfSkgPT4ge1xuICAgICAgICAgIGFzc2VydEV2ZW50KGV2ZW50LCBcIkFVVEhFTlRJQ0FURS5XRUIzXCIpO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXJlbnQ6IGNvbnRleHQucGFyZW50LFxuICAgICAgICAgICAgc3RyYXRlZ3k6IGV2ZW50LnN0cmF0ZWd5XG4gICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Eb25lOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2VuZFRvTmV4dFwiLCBcInNlbmRUb0xvYWRpbmdcIl1cbiAgICAgICAgfSxcbiAgICAgICAgb25FcnJvcjoge1xuICAgICAgICAgIGFjdGlvbnM6IFtcInNldEZvcm1FcnJvcnNcIiwgXCJzZW5kVG9Mb2FkaW5nXCJdLFxuICAgICAgICAgIHRhcmdldDogXCJQZW5kaW5nXCJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG5cbi8vIHNyYy9pbnRlcm5hbHMvbWFjaGluZXMvc2lnbi11cC92ZXJpZmljYXRpb24ubWFjaGluZS50c1xuaW1wb3J0IHsgUG9sbGVyIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvcG9sbGVyXCI7XG5pbXBvcnQgeyBhbmQgYXMgYW5kMiwgYXNzaWduIGFzIGFzc2lnbjIsIGVucXVldWVBY3Rpb25zIGFzIGVucXVldWVBY3Rpb25zMiwgZnJvbUNhbGxiYWNrLCBmcm9tUHJvbWlzZSBhcyBmcm9tUHJvbWlzZTMsIGxvZywgcmFpc2UsIHNlbmRQYXJlbnQsIHNlbmRUbyBhcyBzZW5kVG8yLCBzZXR1cCBhcyBzZXR1cDMgfSBmcm9tIFwieHN0YXRlXCI7XG5cbi8vIHNyYy9pbnRlcm5hbHMvbWFjaGluZXMvc2lnbi11cC92ZXJpZmljYXRpb24udHlwZXMudHNcbnZhciBTaWduVXBWZXJpZmljYXRpb25EZWxheXMgPSB7XG4gIGVtYWlsTGlua1RpbWVvdXQ6IDNlNSxcbiAgLy8gNSBtaW51dGVzXG4gIHJlc2VuZGFibGVUaW1lb3V0OiAxZTNcbiAgLy8gMSBzZWNvbmRcbn07XG5cbi8vIHNyYy9pbnRlcm5hbHMvbWFjaGluZXMvc2lnbi11cC92ZXJpZmljYXRpb24ubWFjaGluZS50c1xudmFyIFNpZ25VcFZlcmlmaWNhdGlvbk1hY2hpbmVJZCA9IFwiU2lnblVwVmVyaWZpY2F0aW9uXCI7XG52YXIgc2hvdWxkVmVyaWZ5ID0gKGZpZWxkLCBzdHJhdGVneSkgPT4ge1xuICBjb25zdCBndWFyZHMgPSBbXG4gICAge1xuICAgICAgdHlwZTogXCJpc0ZpZWxkVW52ZXJpZmllZFwiLFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIGZpZWxkXG4gICAgICB9XG4gICAgfVxuICBdO1xuICBpZiAoc3RyYXRlZ3kpIHtcbiAgICBndWFyZHMucHVzaCh7XG4gICAgICB0eXBlOiBcImlzU3RyYXRlZ3lFbmFibGVkXCIsXG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAgYXR0cmlidXRlOiBmaWVsZCxcbiAgICAgICAgc3RyYXRlZ3lcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZXR1cm4gYW5kMihndWFyZHMpO1xufTtcbnZhciBTaWduVXBWZXJpZmljYXRpb25NYWNoaW5lID0gc2V0dXAzKHtcbiAgYWN0b3JzOiB7XG4gICAgcHJlcGFyZTogZnJvbVByb21pc2UzKCh7IGlucHV0OiB7IHBhcmFtcywgcGFyZW50IH0gfSkgPT4ge1xuICAgICAgY29uc3QgY2xlcmsgPSBwYXJlbnQuZ2V0U25hcHNob3QoKS5jb250ZXh0LmNsZXJrO1xuICAgICAgaWYgKHBhcmFtcy5zdHJhdGVneSA9PT0gXCJlbWFpbF9saW5rXCIgJiYgcGFyYW1zLnJlZGlyZWN0VXJsKSB7XG4gICAgICAgIHBhcmFtcy5yZWRpcmVjdFVybCA9IGNsZXJrLmJ1aWxkVXJsV2l0aEF1dGgocGFyYW1zLnJlZGlyZWN0VXJsKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjbGVyay5jbGllbnQuc2lnblVwLnByZXBhcmVWZXJpZmljYXRpb24ocGFyYW1zKTtcbiAgICB9KSxcbiAgICBhdHRlbXB0OiBmcm9tUHJvbWlzZTMoXG4gICAgICBhc3luYyAoeyBpbnB1dDogeyBwYXJhbXMsIHBhcmVudCB9IH0pID0+IHBhcmVudC5nZXRTbmFwc2hvdCgpLmNvbnRleHQuY2xlcmsuY2xpZW50LnNpZ25VcC5hdHRlbXB0VmVyaWZpY2F0aW9uKHBhcmFtcylcbiAgICApLFxuICAgIGF0dGVtcHRFbWFpbExpbmtWZXJpZmljYXRpb246IGZyb21DYWxsYmFjayhcbiAgICAgICh7IHJlY2VpdmUsIHNlbmRCYWNrLCBpbnB1dDogeyBwYXJlbnQgfSB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgcnVuLCBzdG9wIH0gPSBQb2xsZXIoKTtcbiAgICAgICAgY29uc3QgY2xlcmsgPSBwYXJlbnQuZ2V0U25hcHNob3QoKS5jb250ZXh0LmNsZXJrO1xuICAgICAgICB2b2lkIHJ1bihcbiAgICAgICAgICBhc3luYyAoKSA9PiBjbGVyay5jbGllbnQuc2lnblVwLnJlbG9hZCgpLnRoZW4oKHJlc291cmNlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzaWduSW5TdGF0dXMgPSByZXNvdXJjZS5zdGF0dXM7XG4gICAgICAgICAgICBjb25zdCB2ZXJpZmljYXRpb25TdGF0dXMgPSByZXNvdXJjZS52ZXJpZmljYXRpb25zLmVtYWlsQWRkcmVzcy5zdGF0dXM7XG4gICAgICAgICAgICBpZiAoc2lnbkluU3RhdHVzID09PSBcImNvbXBsZXRlXCIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHNlbmRCYWNrKHsgdHlwZTogXCJFTUFJTF9MSU5LLlZFUklGSUVEXCIsIHJlc291cmNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3dpdGNoICh2ZXJpZmljYXRpb25TdGF0dXMpIHtcbiAgICAgICAgICAgICAgY2FzZSBcInZlcmlmaWVkXCI6XG4gICAgICAgICAgICAgIGNhc2UgXCJ0cmFuc2ZlcmFibGVcIjpcbiAgICAgICAgICAgICAgY2FzZSBcImV4cGlyZWRcIjoge1xuICAgICAgICAgICAgICAgIHNlbmRCYWNrKHsgdHlwZTogYEVNQUlMX0xJTksuJHt2ZXJpZmljYXRpb25TdGF0dXMudG9VcHBlckNhc2UoKX1gLCByZXNvdXJjZSB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBjYXNlIFwiZmFpbGVkXCI6IHtcbiAgICAgICAgICAgICAgICBzZW5kQmFjayh7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcIkVNQUlMX0xJTksuRkFJTEVEXCIsXG4gICAgICAgICAgICAgICAgICBlcnJvcjogbmV3IENsZXJrRWxlbWVudHNFcnJvcihcImVtYWlsLWxpbmstdmVyaWZpY2F0aW9uLWZhaWxlZFwiLCBcIkVtYWlsIHZlcmlmaWNhdGlvbiBmYWlsZWRcIiksXG4gICAgICAgICAgICAgICAgICByZXNvdXJjZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8vIGNhc2UgJ3VudmVyaWZpZWQnOlxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHN0b3AoKTtcbiAgICAgICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIHN0b3AoKTtcbiAgICAgICAgICAgIG5ldyBDbGVya0VsZW1lbnRzUnVudGltZUVycm9yKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIHJlY2VpdmUoKGV2ZW50KSA9PiB7XG4gICAgICAgICAgaWYgKGV2ZW50LnR5cGUgPT09IFwiU1RPUFwiKSB7XG4gICAgICAgICAgICBzdG9wKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuICgpID0+IHN0b3AoKTtcbiAgICAgIH1cbiAgICApXG4gIH0sXG4gIGFjdGlvbnM6IHtcbiAgICByZXNlbmRhYmxlVGljazogYXNzaWduMigoeyBjb250ZXh0IH0pID0+ICh7XG4gICAgICByZXNlbmRhYmxlOiBjb250ZXh0LnJlc2VuZGFibGVBZnRlciA9PT0gMSxcbiAgICAgIHJlc2VuZGFibGVBZnRlcjogY29udGV4dC5yZXNlbmRhYmxlQWZ0ZXIgPiAxID8gY29udGV4dC5yZXNlbmRhYmxlQWZ0ZXIgLSAxIDogY29udGV4dC5yZXNlbmRhYmxlQWZ0ZXJcbiAgICB9KSksXG4gICAgcmVzZW5kYWJsZVJlc2V0OiBhc3NpZ24yKHtcbiAgICAgIHJlc2VuZGFibGU6IGZhbHNlLFxuICAgICAgcmVzZW5kYWJsZUFmdGVyOiBSRVNFTkRBQkxFX0NPVU5URE9XTl9ERUZBVUxUXG4gICAgfSksXG4gICAgc2VuZFRvTG9hZGluZyxcbiAgICBzZXRGb3JtRXJyb3JzOiBzZW5kVG8yKFxuICAgICAgKHsgY29udGV4dCB9KSA9PiBjb250ZXh0LmZvcm1SZWYsXG4gICAgICAoeyBldmVudCB9KSA9PiB7XG4gICAgICAgIGFzc2VydEFjdG9yRXZlbnRFcnJvcihldmVudCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogXCJFUlJPUlMuU0VUXCIsXG4gICAgICAgICAgZXJyb3I6IGV2ZW50LmVycm9yXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgKVxuICB9LFxuICBndWFyZHM6IHtcbiAgICBpc0NvbXBsZXRlOiAoeyBjb250ZXh0IH0pID0+IGNvbnRleHQucmVzb3VyY2Uuc3RhdHVzID09PSBcImNvbXBsZXRlXCIsXG4gICAgaXNGaWVsZFVudmVyaWZpZWQ6ICh7IGNvbnRleHQsIGV2ZW50IH0sIHsgZmllbGQgfSkgPT4ge1xuICAgICAgbGV0IHJlc291cmNlID0gY29udGV4dC5yZXNvdXJjZTtcbiAgICAgIGlmICgoZXZlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IGV2ZW50LnR5cGUpID09PSBcIk5FWFRcIiAmJiBldmVudC5yZXNvdXJjZSkge1xuICAgICAgICByZXNvdXJjZSA9IGV2ZW50LnJlc291cmNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc291cmNlLnVudmVyaWZpZWRGaWVsZHMuaW5jbHVkZXMoZmllbGQpO1xuICAgIH0sXG4gICAgaXNSZXNlbmRhYmxlOiAoeyBjb250ZXh0IH0pID0+IGNvbnRleHQucmVzZW5kYWJsZSB8fCBjb250ZXh0LnJlc2VuZGFibGVBZnRlciA9PT0gMCxcbiAgICBpc1N0cmF0ZWd5RW5hYmxlZDogKHsgY29udGV4dCB9LCB7IGF0dHJpYnV0ZSwgc3RyYXRlZ3kgfSkgPT4ge1xuICAgICAgdmFyIF9hO1xuICAgICAgcmV0dXJuIEJvb2xlYW4oKF9hID0gY29udGV4dC5hdHRyaWJ1dGVzKSA9PSBudWxsID8gdm9pZCAwIDogX2FbYXR0cmlidXRlXS52ZXJpZmljYXRpb25zLmluY2x1ZGVzKHN0cmF0ZWd5KSk7XG4gICAgfSxcbiAgICBzaG91bGRWZXJpZnlQaG9uZUNvZGU6IHNob3VsZFZlcmlmeShcInBob25lX251bWJlclwiKSxcbiAgICBzaG91bGRWZXJpZnlFbWFpbExpbms6IHNob3VsZFZlcmlmeShcImVtYWlsX2FkZHJlc3NcIiwgXCJlbWFpbF9saW5rXCIpLFxuICAgIHNob3VsZFZlcmlmeUVtYWlsQ29kZTogc2hvdWxkVmVyaWZ5KFwiZW1haWxfYWRkcmVzc1wiLCBcImVtYWlsX2NvZGVcIilcbiAgfSxcbiAgZGVsYXlzOiBTaWduVXBWZXJpZmljYXRpb25EZWxheXMsXG4gIHR5cGVzOiB7fVxufSkuY3JlYXRlTWFjaGluZSh7XG4gIGlkOiBTaWduVXBWZXJpZmljYXRpb25NYWNoaW5lSWQsXG4gIGluaXRpYWw6IFwiSW5pdFwiLFxuICBjb250ZXh0OiAoeyBpbnB1dCB9KSA9PiAoe1xuICAgIGF0dHJpYnV0ZXM6IGlucHV0LmF0dHJpYnV0ZXMsXG4gICAgYmFzZVBhdGg6IGlucHV0LmJhc2VQYXRoIHx8IFNJR05fVVBfREVGQVVMVF9CQVNFX1BBVEgsXG4gICAgbG9hZGluZ1N0ZXA6IFwidmVyaWZpY2F0aW9uc1wiLFxuICAgIGZvcm1SZWY6IGlucHV0LmZvcm1SZWYsXG4gICAgcGFyZW50OiBpbnB1dC5wYXJlbnQsXG4gICAgcmVzZW5kYWJsZTogZmFsc2UsXG4gICAgcmVzZW5kYWJsZUFmdGVyOiBSRVNFTkRBQkxFX0NPVU5URE9XTl9ERUZBVUxULFxuICAgIHJlc291cmNlOiBpbnB1dC5yZXNvdXJjZVxuICB9KSxcbiAgb246IHtcbiAgICBORVhUOiBbXG4gICAgICB7XG4gICAgICAgIGd1YXJkOiBcImlzQ29tcGxldGVcIixcbiAgICAgICAgYWN0aW9uczogc2VuZFBhcmVudCgoeyBldmVudCB9KSA9PiAoeyB0eXBlOiBcIk5FWFRcIiwgcmVzb3VyY2U6IGV2ZW50LnJlc291cmNlIH0pKVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgZGVzY3JpcHRpb246IFwiVmFsaWRhdGUgdmlhIHBob25lIG51bWJlclwiLFxuICAgICAgICBndWFyZDogXCJzaG91bGRWZXJpZnlQaG9uZUNvZGVcIixcbiAgICAgICAgdGFyZ2V0OiBcIi5QaG9uZUNvZGVcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgZGVzY3JpcHRpb246IFwiVmFsaWRhdGUgdmlhIGVtYWlsIGxpbmtcIixcbiAgICAgICAgZ3VhcmQ6IFwic2hvdWxkVmVyaWZ5RW1haWxMaW5rXCIsXG4gICAgICAgIHRhcmdldDogXCIuRW1haWxMaW5rXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIlZlcmlmeSB2aWEgZW1haWwgY29kZVwiLFxuICAgICAgICBndWFyZDogXCJzaG91bGRWZXJpZnlFbWFpbENvZGVcIixcbiAgICAgICAgdGFyZ2V0OiBcIi5FbWFpbENvZGVcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgYWN0aW9uczogc2VuZFBhcmVudCgoeyBldmVudCB9KSA9PiAoeyB0eXBlOiBcIk5FWFRcIiwgcmVzb3VyY2U6IGV2ZW50LnJlc291cmNlIH0pKVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAgc3RhdGVzOiB7XG4gICAgSW5pdDoge1xuICAgICAgYWx3YXlzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJWYWxpZGF0ZSB2aWEgcGhvbmUgbnVtYmVyXCIsXG4gICAgICAgICAgZ3VhcmQ6IFwic2hvdWxkVmVyaWZ5UGhvbmVDb2RlXCIsXG4gICAgICAgICAgdGFyZ2V0OiBcIlBob25lQ29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJWYWxpZGF0ZSB2aWEgZW1haWwgbGlua1wiLFxuICAgICAgICAgIGd1YXJkOiBcInNob3VsZFZlcmlmeUVtYWlsTGlua1wiLFxuICAgICAgICAgIHRhcmdldDogXCJFbWFpbExpbmtcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVmVyaWZ5IHZpYSBlbWFpbCBjb2RlXCIsXG4gICAgICAgICAgZ3VhcmQ6IFwic2hvdWxkVmVyaWZ5RW1haWxDb2RlXCIsXG4gICAgICAgICAgdGFyZ2V0OiBcIkVtYWlsQ29kZVwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBhY3Rpb25zOiBzZW5kUGFyZW50KCh7IGNvbnRleHQgfSkgPT4gKHsgdHlwZTogXCJORVhUXCIsIHJlc291cmNlOiBjb250ZXh0LnJlc291cmNlIH0pKVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBFbWFpbExpbms6IHtcbiAgICAgIHRhZ3M6IFtcInZlcmlmaWNhdGlvbjptZXRob2Q6ZW1haWxcIiwgXCJ2ZXJpZmljYXRpb246Y2F0ZWdvcnk6bGlua1wiLCBcInZlcmlmaWNhdGlvbjplbWFpbF9saW5rXCJdLFxuICAgICAgaW5pdGlhbDogXCJQcmVwYXJpbmdcIixcbiAgICAgIG9uOiB7XG4gICAgICAgIFJFVFJZOiBcIi5QcmVwYXJpbmdcIixcbiAgICAgICAgXCJFTUFJTF9MSU5LLlJFU1RBUlRcIjoge1xuICAgICAgICAgIHRhcmdldDogXCIuQXR0ZW1wdGluZ1wiLFxuICAgICAgICAgIHJlZW50ZXI6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgXCJFTUFJTF9MSU5LLkZBSUxFRFwiOiB7XG4gICAgICAgICAgYWN0aW9uczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0eXBlOiBcInNldEZvcm1FcnJvcnNcIixcbiAgICAgICAgICAgICAgcGFyYW1zOiAoeyBldmVudCB9KSA9PiAoeyBlcnJvcjogZXZlbnQuZXJyb3IgfSlcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhc3NpZ24yKHsgcmVzb3VyY2U6ICh7IGV2ZW50IH0pID0+IGV2ZW50LnJlc291cmNlIH0pXG4gICAgICAgICAgXSxcbiAgICAgICAgICB0YXJnZXQ6IFwiLlBlbmRpbmdcIlxuICAgICAgICB9LFxuICAgICAgICBcIkVNQUlMX0xJTksuKlwiOiB7XG4gICAgICAgICAgYWN0aW9uczogZW5xdWV1ZUFjdGlvbnMyKCh7IGVucXVldWUsIGV2ZW50IH0pID0+IHtcbiAgICAgICAgICAgIGlmIChldmVudC50eXBlID09PSBcIkVNQUlMX0xJTksuUkVTVEFSVFwiKSB7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVucXVldWUuYXNzaWduKHsgcmVzb3VyY2U6IGV2ZW50LnJlc291cmNlIH0pO1xuICAgICAgICAgICAgZW5xdWV1ZS5yYWlzZSh7IHR5cGU6IFwiTkVYVFwiLCByZXNvdXJjZTogZXZlbnQucmVzb3VyY2UgfSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHN0YXRlczoge1xuICAgICAgICBQcmVwYXJpbmc6IHtcbiAgICAgICAgICB0YWdzOiBbXCJzdGF0ZTpwcmVwYXJpbmdcIiwgXCJzdGF0ZTpsb2FkaW5nXCJdLFxuICAgICAgICAgIGV4aXQ6IFwicmVzZW5kYWJsZVJlc2V0XCIsXG4gICAgICAgICAgaW52b2tlOiB7XG4gICAgICAgICAgICBpZDogXCJwcmVwYXJlRW1haWxMaW5rVmVyaWZpY2F0aW9uXCIsXG4gICAgICAgICAgICBzcmM6IFwicHJlcGFyZVwiLFxuICAgICAgICAgICAgaW5wdXQ6ICh7IGNvbnRleHQgfSkgPT4gKHtcbiAgICAgICAgICAgICAgcGFyZW50OiBjb250ZXh0LnBhcmVudCxcbiAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc3RyYXRlZ3k6IFwiZW1haWxfbGlua1wiLFxuICAgICAgICAgICAgICAgIHJlZGlyZWN0VXJsOiBgJHtjb250ZXh0LmJhc2VQYXRofSR7TUFHSUNfTElOS19WRVJJRllfUEFUSF9ST1VURX1gXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgb25Eb25lOiB7XG4gICAgICAgICAgICAgIHRhcmdldDogXCJBdHRlbXB0aW5nXCIsXG4gICAgICAgICAgICAgIGFjdGlvbnM6IGFzc2lnbjIoeyByZXNvdXJjZTogKHsgZXZlbnQgfSkgPT4gZXZlbnQub3V0cHV0IH0pXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25FcnJvcjoge1xuICAgICAgICAgICAgICBhY3Rpb25zOiBcInNldEZvcm1FcnJvcnNcIixcbiAgICAgICAgICAgICAgdGFyZ2V0OiBcIlBlbmRpbmdcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgUGVuZGluZzoge1xuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlBsYWNlaG9sZGVyIGZvciBhbGxvd2luZyByZXNlbmRpbmcgb2YgZW1haWwgbGlua1wiLFxuICAgICAgICAgIHRhZ3M6IFtcInN0YXRlOnBlbmRpbmdcIl0sXG4gICAgICAgICAgb246IHtcbiAgICAgICAgICAgIE5FWFQ6IFwiUHJlcGFyaW5nXCJcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIEF0dGVtcHRpbmc6IHtcbiAgICAgICAgICB0YWdzOiBbXCJzdGF0ZTphdHRlbXB0aW5nXCJdLFxuICAgICAgICAgIGludm9rZToge1xuICAgICAgICAgICAgaWQ6IFwiYXR0ZW1wdEVtYWlsTGlua1ZlcmlmaWNhdGlvblwiLFxuICAgICAgICAgICAgc3JjOiBcImF0dGVtcHRFbWFpbExpbmtWZXJpZmljYXRpb25cIixcbiAgICAgICAgICAgIGlucHV0OiAoeyBjb250ZXh0IH0pID0+ICh7XG4gICAgICAgICAgICAgIHBhcmVudDogY29udGV4dC5wYXJlbnRcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhZnRlcjoge1xuICAgICAgICAgICAgZW1haWxMaW5rVGltZW91dDoge1xuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaW1lb3V0IGFmdGVyIDUgbWludXRlc1wiLFxuICAgICAgICAgICAgICB0YXJnZXQ6IFwiUGVuZGluZ1wiLFxuICAgICAgICAgICAgICBhY3Rpb25zOiBzZW5kVG8yKCh7IGNvbnRleHQgfSkgPT4gY29udGV4dC5mb3JtUmVmLCB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJFUlJPUlMuU0VUXCIsXG4gICAgICAgICAgICAgICAgZXJyb3I6IG5ldyBDbGVya0VsZW1lbnRzRXJyb3IoXCJ2ZXJpZnktZW1haWwtbGluay10aW1lb3V0XCIsIFwiRW1haWwgbGluayB2ZXJpZmljYXRpb24gdGltZWQgb3V0XCIpXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBpbml0aWFsOiBcIk5vdFJlc2VuZGFibGVcIixcbiAgICAgICAgICBzdGF0ZXM6IHtcbiAgICAgICAgICAgIFJlc2VuZGFibGU6IHtcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiV2FpdGluZyBmb3IgdXNlciB0byByZXRyeVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgTm90UmVzZW5kYWJsZToge1xuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJIYW5kbGUgY291bnRkb3duc1wiLFxuICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgIFJFVFJZOiB7XG4gICAgICAgICAgICAgICAgICBhY3Rpb25zOiBsb2coKHsgY29udGV4dCB9KSA9PiBgTm90IHJldHJpYWJsZTsgVHJ5IGFnYWluIGluICR7Y29udGV4dC5yZXNlbmRhYmxlQWZ0ZXJ9c2ApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBhZnRlcjoge1xuICAgICAgICAgICAgICAgIHJlc2VuZGFibGVUaW1lb3V0OiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlNldCBhcyByZXRyaWFibGUgaWYgY291bnRkb3duIGlzIDBcIixcbiAgICAgICAgICAgICAgICAgICAgZ3VhcmQ6IFwiaXNSZXNlbmRhYmxlXCIsXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbnM6IFwicmVzZW5kYWJsZVRpY2tcIixcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcIlJlc2VuZGFibGVcIlxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiQ29udGludWUgY291bnRkb3duIGlmIG5vdCByZXRyaWFibGVcIixcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uczogXCJyZXNlbmRhYmxlVGlja1wiLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiTm90UmVzZW5kYWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICByZWVudGVyOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBFbWFpbENvZGU6IHtcbiAgICAgIHRhZ3M6IFtcInZlcmlmaWNhdGlvbjptZXRob2Q6ZW1haWxcIiwgXCJ2ZXJpZmljYXRpb246Y2F0ZWdvcnk6Y29kZVwiLCBcInZlcmlmaWNhdGlvbjplbWFpbF9jb2RlXCJdLFxuICAgICAgaW5pdGlhbDogXCJQcmVwYXJpbmdcIixcbiAgICAgIHN0YXRlczoge1xuICAgICAgICBQcmVwYXJpbmc6IHtcbiAgICAgICAgICB0YWdzOiBbXCJzdGF0ZTpwcmVwYXJpbmdcIiwgXCJzdGF0ZTpsb2FkaW5nXCJdLFxuICAgICAgICAgIGV4aXQ6IFwicmVzZW5kYWJsZVJlc2V0XCIsXG4gICAgICAgICAgaW52b2tlOiB7XG4gICAgICAgICAgICBpZDogXCJwcmVwYXJlRW1haWxBZGRyZXNzQ29kZVZlcmlmaWNhdGlvblwiLFxuICAgICAgICAgICAgc3JjOiBcInByZXBhcmVcIixcbiAgICAgICAgICAgIGlucHV0OiAoeyBjb250ZXh0IH0pID0+ICh7XG4gICAgICAgICAgICAgIHBhcmVudDogY29udGV4dC5wYXJlbnQsXG4gICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIHN0cmF0ZWd5OiBcImVtYWlsX2NvZGVcIlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIG9uRG9uZTogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZ3VhcmQ6IFwic2hvdWxkVmVyaWZ5RW1haWxDb2RlXCIsXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBcIlBlbmRpbmdcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYWN0aW9uczogW1xuICAgICAgICAgICAgICAgICAgYXNzaWduMih7IHJlc291cmNlOiAoeyBldmVudCB9KSA9PiBldmVudC5vdXRwdXQgfSksXG4gICAgICAgICAgICAgICAgICByYWlzZSgoeyBldmVudCB9KSA9PiAoeyB0eXBlOiBcIk5FWFRcIiwgcmVzb3VyY2U6IGV2ZW50Lm91dHB1dCB9KSlcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBvbkVycm9yOiB7XG4gICAgICAgICAgICAgIGFjdGlvbnM6IFwic2V0Rm9ybUVycm9yc1wiLFxuICAgICAgICAgICAgICB0YXJnZXQ6IFwiUGVuZGluZ1wiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBQZW5kaW5nOiB7XG4gICAgICAgICAgdGFnczogW1wic3RhdGU6cGVuZGluZ1wiXSxcbiAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgUkVUUlk6IFwiUHJlcGFyaW5nXCIsXG4gICAgICAgICAgICBTVUJNSVQ6IHtcbiAgICAgICAgICAgICAgdGFyZ2V0OiBcIkF0dGVtcHRpbmdcIixcbiAgICAgICAgICAgICAgcmVlbnRlcjogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgaW5pdGlhbDogXCJOb3RSZXNlbmRhYmxlXCIsXG4gICAgICAgICAgc3RhdGVzOiB7XG4gICAgICAgICAgICBSZXNlbmRhYmxlOiB7XG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIldhaXRpbmcgZm9yIHVzZXIgdG8gcmV0cnlcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIE5vdFJlc2VuZGFibGU6IHtcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiSGFuZGxlIGNvdW50ZG93bnNcIixcbiAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICBSRVRSWToge1xuICAgICAgICAgICAgICAgICAgYWN0aW9uczogbG9nKCh7IGNvbnRleHQgfSkgPT4gYE5vdCByZXRyaWFibGU7IFRyeSBhZ2FpbiBpbiAke2NvbnRleHQucmVzZW5kYWJsZUFmdGVyfXNgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYWZ0ZXI6IHtcbiAgICAgICAgICAgICAgICByZXNlbmRhYmxlVGltZW91dDogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJTZXQgYXMgcmV0cmlhYmxlIGlmIGNvdW50ZG93biBpcyAwXCIsXG4gICAgICAgICAgICAgICAgICAgIGd1YXJkOiBcImlzUmVzZW5kYWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICBhY3Rpb25zOiBcInJlc2VuZGFibGVUaWNrXCIsXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJSZXNlbmRhYmxlXCJcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkNvbnRpbnVlIGNvdW50ZG93biBpZiBub3QgcmV0cmlhYmxlXCIsXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbnM6IFwicmVzZW5kYWJsZVRpY2tcIixcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcIk5vdFJlc2VuZGFibGVcIixcbiAgICAgICAgICAgICAgICAgICAgcmVlbnRlcjogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgQXR0ZW1wdGluZzoge1xuICAgICAgICAgIHRhZ3M6IFtcInN0YXRlOmF0dGVtcHRpbmdcIiwgXCJzdGF0ZTpsb2FkaW5nXCJdLFxuICAgICAgICAgIGVudHJ5OiBcInNlbmRUb0xvYWRpbmdcIixcbiAgICAgICAgICBpbnZva2U6IHtcbiAgICAgICAgICAgIGlkOiBcImF0dGVtcHRFbWFpbEFkZHJlc3NDb2RlVmVyaWZpY2F0aW9uXCIsXG4gICAgICAgICAgICBzcmM6IFwiYXR0ZW1wdFwiLFxuICAgICAgICAgICAgaW5wdXQ6ICh7IGNvbnRleHQgfSkgPT4ge1xuICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcGFyZW50OiBjb250ZXh0LnBhcmVudCxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgIHN0cmF0ZWd5OiBcImVtYWlsX2NvZGVcIixcbiAgICAgICAgICAgICAgICAgIGNvZGU6ICgoX2EgPSBjb250ZXh0LmZvcm1SZWYuZ2V0U25hcHNob3QoKS5jb250ZXh0LmZpZWxkcy5nZXQoXCJjb2RlXCIpKSA9PSBudWxsID8gdm9pZCAwIDogX2EudmFsdWUpIHx8IFwiXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25Eb25lOiB7XG4gICAgICAgICAgICAgIGFjdGlvbnM6IFtyYWlzZSgoeyBldmVudCB9KSA9PiAoeyB0eXBlOiBcIk5FWFRcIiwgcmVzb3VyY2U6IGV2ZW50Lm91dHB1dCB9KSksIFwic2VuZFRvTG9hZGluZ1wiXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uRXJyb3I6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogW1wic2V0Rm9ybUVycm9yc1wiLCBcInNlbmRUb0xvYWRpbmdcIl0sXG4gICAgICAgICAgICAgIHRhcmdldDogXCJQZW5kaW5nXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIFBob25lQ29kZToge1xuICAgICAgdGFnczogW1widmVyaWZpY2F0aW9uOm1ldGhvZDpwaG9uZVwiLCBcInZlcmlmaWNhdGlvbjpjYXRlZ29yeTpjb2RlXCIsIFwidmVyaWZpY2F0aW9uOnBob25lX2NvZGVcIl0sXG4gICAgICBpbml0aWFsOiBcIlByZXBhcmluZ1wiLFxuICAgICAgc3RhdGVzOiB7XG4gICAgICAgIFByZXBhcmluZzoge1xuICAgICAgICAgIHRhZ3M6IFtcInN0YXRlOnByZXBhcmluZ1wiLCBcInN0YXRlOmxvYWRpbmdcIl0sXG4gICAgICAgICAgZXhpdDogXCJyZXNlbmRhYmxlUmVzZXRcIixcbiAgICAgICAgICBpbnZva2U6IHtcbiAgICAgICAgICAgIGlkOiBcInByZXBhcmVQaG9uZUNvZGVWZXJpZmljYXRpb25cIixcbiAgICAgICAgICAgIHNyYzogXCJwcmVwYXJlXCIsXG4gICAgICAgICAgICBpbnB1dDogKHsgY29udGV4dCB9KSA9PiAoe1xuICAgICAgICAgICAgICBwYXJlbnQ6IGNvbnRleHQucGFyZW50LFxuICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICBzdHJhdGVneTogXCJwaG9uZV9jb2RlXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBvbkRvbmU6IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGd1YXJkOiBcInNob3VsZFZlcmlmeVBob25lQ29kZVwiLFxuICAgICAgICAgICAgICAgIHRhcmdldDogXCJQZW5kaW5nXCIsXG4gICAgICAgICAgICAgICAgYWN0aW9uczogYXNzaWduMih7IHJlc291cmNlOiAoeyBldmVudCB9KSA9PiBldmVudC5vdXRwdXQgfSlcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFjdGlvbnM6IFtcbiAgICAgICAgICAgICAgICAgIGFzc2lnbjIoeyByZXNvdXJjZTogKHsgZXZlbnQgfSkgPT4gZXZlbnQub3V0cHV0IH0pLFxuICAgICAgICAgICAgICAgICAgcmFpc2UoKHsgZXZlbnQgfSkgPT4gKHsgdHlwZTogXCJORVhUXCIsIHJlc291cmNlOiBldmVudC5vdXRwdXQgfSkpXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgb25FcnJvcjoge1xuICAgICAgICAgICAgICBhY3Rpb25zOiBcInNldEZvcm1FcnJvcnNcIixcbiAgICAgICAgICAgICAgdGFyZ2V0OiBcIlBlbmRpbmdcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgUGVuZGluZzoge1xuICAgICAgICAgIHRhZ3M6IFtcInN0YXRlOnBlbmRpbmdcIl0sXG4gICAgICAgICAgb246IHtcbiAgICAgICAgICAgIFJFVFJZOiBcIlByZXBhcmluZ1wiLFxuICAgICAgICAgICAgU1VCTUlUOiB7XG4gICAgICAgICAgICAgIHRhcmdldDogXCJBdHRlbXB0aW5nXCIsXG4gICAgICAgICAgICAgIHJlZW50ZXI6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGluaXRpYWw6IFwiTm90UmVzZW5kYWJsZVwiLFxuICAgICAgICAgIHN0YXRlczoge1xuICAgICAgICAgICAgUmVzZW5kYWJsZToge1xuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJXYWl0aW5nIGZvciB1c2VyIHRvIHJldHJ5XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBOb3RSZXNlbmRhYmxlOiB7XG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkhhbmRsZSBjb3VudGRvd25zXCIsXG4gICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgUkVUUlk6IHtcbiAgICAgICAgICAgICAgICAgIGFjdGlvbnM6IGxvZygoeyBjb250ZXh0IH0pID0+IGBOb3QgcmV0cmlhYmxlOyBUcnkgYWdhaW4gaW4gJHtjb250ZXh0LnJlc2VuZGFibGVBZnRlcn1zYClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGFmdGVyOiB7XG4gICAgICAgICAgICAgICAgcmVzZW5kYWJsZVRpbWVvdXQ6IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiU2V0IGFzIHJldHJpYWJsZSBpZiBjb3VudGRvd24gaXMgMFwiLFxuICAgICAgICAgICAgICAgICAgICBndWFyZDogXCJpc1Jlc2VuZGFibGVcIixcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uczogXCJyZXNlbmRhYmxlVGlja1wiLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IFwiUmVzZW5kYWJsZVwiXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJDb250aW51ZSBjb3VudGRvd24gaWYgbm90IHJldHJpYWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICBhY3Rpb25zOiBcInJlc2VuZGFibGVUaWNrXCIsXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJOb3RSZXNlbmRhYmxlXCIsXG4gICAgICAgICAgICAgICAgICAgIHJlZW50ZXI6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIEF0dGVtcHRpbmc6IHtcbiAgICAgICAgICB0YWdzOiBbXCJzdGF0ZTphdHRlbXB0aW5nXCIsIFwic3RhdGU6bG9hZGluZ1wiXSxcbiAgICAgICAgICBlbnRyeTogXCJzZW5kVG9Mb2FkaW5nXCIsXG4gICAgICAgICAgaW52b2tlOiB7XG4gICAgICAgICAgICBpZDogXCJhdHRlbXB0UGhvbmVOdW1iZXJWZXJpZmljYXRpb25cIixcbiAgICAgICAgICAgIHNyYzogXCJhdHRlbXB0XCIsXG4gICAgICAgICAgICBpbnB1dDogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwYXJlbnQ6IGNvbnRleHQucGFyZW50LFxuICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgc3RyYXRlZ3k6IFwicGhvbmVfY29kZVwiLFxuICAgICAgICAgICAgICAgICAgY29kZTogKChfYSA9IGNvbnRleHQuZm9ybVJlZi5nZXRTbmFwc2hvdCgpLmNvbnRleHQuZmllbGRzLmdldChcImNvZGVcIikpID09IG51bGwgPyB2b2lkIDAgOiBfYS52YWx1ZSkgfHwgXCJcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkRvbmU6IHtcbiAgICAgICAgICAgICAgYWN0aW9uczogW3JhaXNlKCh7IGV2ZW50IH0pID0+ICh7IHR5cGU6IFwiTkVYVFwiLCByZXNvdXJjZTogZXZlbnQub3V0cHV0IH0pKSwgXCJzZW5kVG9Mb2FkaW5nXCJdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25FcnJvcjoge1xuICAgICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRGb3JtRXJyb3JzXCIsIFwic2VuZFRvTG9hZGluZ1wiXSxcbiAgICAgICAgICAgICAgdGFyZ2V0OiBcIlBlbmRpbmdcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG5cbi8vIHNyYy9pbnRlcm5hbHMvbWFjaGluZXMvc2lnbi11cC9yb3V0ZXIubWFjaGluZS50c1xudmFyIFNpZ25VcFJvdXRlck1hY2hpbmVJZCA9IFwiU2lnblVwUm91dGVyXCI7XG52YXIgaXNDdXJyZW50UGF0aCA9IChwYXRoKSA9PiAoeyBjb250ZXh0IH0sIF9wYXJhbXMpID0+IHtcbiAgdmFyIF9hLCBfYjtcbiAgcmV0dXJuIChfYiA9IChfYSA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EubWF0Y2gocGF0aCkpICE9IG51bGwgPyBfYiA6IGZhbHNlO1xufTtcbnZhciBuZWVkc1N0YXR1cyA9IChzdGF0dXMpID0+ICh7IGNvbnRleHQsIGV2ZW50IH0sIF8pID0+IHtcbiAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICByZXR1cm4gKChfYSA9IGV2ZW50ID09IG51bGwgPyB2b2lkIDAgOiBldmVudC5yZXNvdXJjZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnN0YXR1cykgPT09IHN0YXR1cyB8fCAoKF9kID0gKF9jID0gKF9iID0gY29udGV4dC5jbGVyaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNsaWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLnNpZ25VcCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLnN0YXR1cykgPT09IHN0YXR1cztcbn07XG52YXIgU2lnblVwUm91dGVyTWFjaGluZSA9IHNldHVwNCh7XG4gIGFjdG9yczoge1xuICAgIGNvbnRpbnVlTWFjaGluZTogU2lnblVwQ29udGludWVNYWNoaW5lLFxuICAgIHN0YXJ0TWFjaGluZTogU2lnblVwU3RhcnRNYWNoaW5lLFxuICAgIHRoaXJkUGFydHlNYWNoaW5lOiBUaGlyZFBhcnR5TWFjaGluZSxcbiAgICB2ZXJpZmljYXRpb25NYWNoaW5lOiBTaWduVXBWZXJpZmljYXRpb25NYWNoaW5lXG4gIH0sXG4gIGFjdGlvbnM6IHtcbiAgICBjbGVhckZvcm1FcnJvcnM6IHNlbmRUbzMoKHsgY29udGV4dCB9KSA9PiBjb250ZXh0LmZvcm1SZWYsIHsgdHlwZTogXCJFUlJPUlMuQ0xFQVJcIiB9KSxcbiAgICBsb2dVbmtub3duRXJyb3I6IChzbmFwc2hvdCkgPT4gY29uc29sZS5lcnJvcihcIlVua25vd24gZXJyb3I6XCIsIHNuYXBzaG90KSxcbiAgICBuYXZpZ2F0ZUludGVybmFsOiAoeyBjb250ZXh0IH0sIHsgcGF0aCwgZm9yY2UgPSBmYWxzZSB9KSA9PiB7XG4gICAgICBpZiAoIWNvbnRleHQucm91dGVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICghZm9yY2UgJiYgc2hvdWxkVXNlVmlydHVhbFJvdXRpbmcoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoY29udGV4dC5leGFtcGxlTW9kZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCByZXNvbHZlZFBhdGggPSBqb2luVVJMKGNvbnRleHQucm91dGVyLmJhc2VQYXRoLCBwYXRoKTtcbiAgICAgIGlmIChyZXNvbHZlZFBhdGggPT09IGNvbnRleHQucm91dGVyLnBhdGhuYW1lKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29udGV4dC5yb3V0ZXIuc2hhbGxvd1B1c2gocmVzb2x2ZWRQYXRoKTtcbiAgICB9LFxuICAgIG5hdmlnYXRlRXh0ZXJuYWw6ICh7IGNvbnRleHQgfSwgeyBwYXRoIH0pID0+IHtcbiAgICAgIHZhciBfYTtcbiAgICAgIHJldHVybiAoX2EgPSBjb250ZXh0LnJvdXRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnB1c2gocGF0aCk7XG4gICAgfSxcbiAgICByYWlzZU5leHQ6IHJhaXNlMih7IHR5cGU6IFwiTkVYVFwiIH0pLFxuICAgIHNldEFjdGl2ZTogKHsgY29udGV4dCwgZXZlbnQgfSwgcGFyYW1zKSA9PiB7XG4gICAgICB2YXIgX2E7XG4gICAgICBpZiAoY29udGV4dC5leGFtcGxlTW9kZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBzZXNzaW9uID0gKHBhcmFtcyA9PSBudWxsID8gdm9pZCAwIDogcGFyYW1zLnNlc3Npb25JZCkgfHwgKHBhcmFtcyA9PSBudWxsID8gdm9pZCAwIDogcGFyYW1zLnVzZUxhc3RBY3RpdmVTZXNzaW9uKSAmJiBjb250ZXh0LmNsZXJrLmNsaWVudC5sYXN0QWN0aXZlU2Vzc2lvbklkIHx8ICgoZXZlbnQgPT0gbnVsbCA/IHZvaWQgMCA6IGV2ZW50LnJlc291cmNlKSB8fCBjb250ZXh0LmNsZXJrLmNsaWVudC5zaWduVXApLmNyZWF0ZWRTZXNzaW9uSWQ7XG4gICAgICB2b2lkIGNvbnRleHQuY2xlcmsuc2V0QWN0aXZlKHtcbiAgICAgICAgc2Vzc2lvbixcbiAgICAgICAgcmVkaXJlY3RVcmw6IGNvbnRleHQuY2xlcmsuYnVpbGRBZnRlclNpZ25VcFVybCh7XG4gICAgICAgICAgcGFyYW1zOiAoX2EgPSBjb250ZXh0LnJvdXRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnNlYXJjaFBhcmFtcygpXG4gICAgICAgIH0pXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRlbGF5ZWRSZXNldDogcmFpc2UyKHsgdHlwZTogXCJSRVNFVFwiIH0sIHsgZGVsYXk6IDNlMyB9KSxcbiAgICAvLyBSZXNldCBtYWNoaW5lIGFmdGVyIDNzIGRlbGF5LlxuICAgIHNldEVycm9yOiBhc3NpZ24zKHtcbiAgICAgIGVycm9yOiAoXywgeyBlcnJvciB9KSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IENsZXJrRWxlbWVudHNSdW50aW1lRXJyb3IoXCJVbmtub3duIGVycm9yXCIpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIHNldEZvcm1PQXV0aEVycm9yczogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICBjb25zdCBlcnJvck9yaWcgPSBjb250ZXh0LmNsZXJrLmNsaWVudC5zaWduSW4uZmlyc3RGYWN0b3JWZXJpZmljYXRpb24uZXJyb3I7XG4gICAgICBpZiAoIWVycm9yT3JpZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBsZXQgZXJyb3I7XG4gICAgICBzd2l0Y2ggKGVycm9yT3JpZy5jb2RlKSB7XG4gICAgICAgIGNhc2UgRVJST1JfQ09ERVMuTk9UX0FMTE9XRURfVE9fU0lHTl9VUDpcbiAgICAgICAgY2FzZSBFUlJPUl9DT0RFUy5PQVVUSF9BQ0NFU1NfREVOSUVEOlxuICAgICAgICBjYXNlIEVSUk9SX0NPREVTLk5PVF9BTExPV0VEX0FDQ0VTUzpcbiAgICAgICAgY2FzZSBFUlJPUl9DT0RFUy5TQU1MX1VTRVJfQVRUUklCVVRFX01JU1NJTkc6XG4gICAgICAgIGNhc2UgRVJST1JfQ09ERVMuT0FVVEhfRU1BSUxfRE9NQUlOX1JFU0VSVkVEX0JZX1NBTUw6XG4gICAgICAgIGNhc2UgRVJST1JfQ09ERVMuVVNFUl9MT0NLRUQ6XG4gICAgICAgIGNhc2UgRVJST1JfQ09ERVMuRU5URVJQUklTRV9TU09fVVNFUl9BVFRSSUJVVEVfTUlTU0lORzpcbiAgICAgICAgY2FzZSBFUlJPUl9DT0RFUy5FTlRFUlBSSVNFX1NTT19FTUFJTF9BRERSRVNTX0RPTUFJTl9NSVNNQVRDSDpcbiAgICAgICAgY2FzZSBFUlJPUl9DT0RFUy5FTlRFUlBSSVNFX1NTT19IT1NURURfRE9NQUlOX01JU01BVENIOlxuICAgICAgICBjYXNlIEVSUk9SX0NPREVTLlNBTUxfRU1BSUxfQUREUkVTU19ET01BSU5fTUlTTUFUQ0g6XG4gICAgICAgIGNhc2UgRVJST1JfQ09ERVMuT1JHQU5JWkFUSU9OX01FTUJFUlNISVBfUVVPVEFfRVhDRUVERURfRk9SX1NTTzpcbiAgICAgICAgICBlcnJvciA9IG5ldyBDbGVya0VsZW1lbnRzRXJyb3IoZXJyb3JPcmlnLmNvZGUsIGVycm9yT3JpZy5sb25nTWVzc2FnZSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgZXJyb3IgPSBuZXcgQ2xlcmtFbGVtZW50c0Vycm9yKFxuICAgICAgICAgICAgXCJ1bmFibGVfdG9fY29tcGxldGVcIixcbiAgICAgICAgICAgIFwiVW5hYmxlIHRvIGNvbXBsZXRlIGFjdGlvbiBhdCB0aGlzIHRpbWUuIElmIHRoZSBwcm9ibGVtIHBlcnNpc3RzIHBsZWFzZSBjb250YWN0IHN1cHBvcnQuXCJcbiAgICAgICAgICApO1xuICAgICAgfVxuICAgICAgY29udGV4dC5mb3JtUmVmLnNlbmQoe1xuICAgICAgICB0eXBlOiBcIkVSUk9SUy5TRVRcIixcbiAgICAgICAgZXJyb3JcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgdHJhbnNmZXI6ICh7IGNvbnRleHQgfSkgPT4ge1xuICAgICAgdmFyIF9hO1xuICAgICAgcmV0dXJuIChfYSA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EucHVzaChjb250ZXh0LmNsZXJrLmJ1aWxkU2lnbkluVXJsKCkpO1xuICAgIH1cbiAgfSxcbiAgZ3VhcmRzOiB7XG4gICAgYXJlRmllbGRzTWlzc2luZzogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICByZXR1cm4gKChfZCA9IChfYyA9IChfYiA9IChfYSA9IGNvbnRleHQuY2xlcmspID09IG51bGwgPyB2b2lkIDAgOiBfYS5jbGllbnQpID09IG51bGwgPyB2b2lkIDAgOiBfYi5zaWduVXApID09IG51bGwgPyB2b2lkIDAgOiBfYy5taXNzaW5nRmllbGRzKSA9PSBudWxsID8gdm9pZCAwIDogX2QubGVuZ3RoKSA+IDA7XG4gICAgfSxcbiAgICBhcmVGaWVsZHNVbnZlcmlmaWVkOiAoeyBjb250ZXh0IH0pID0+IHtcbiAgICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICAgIHJldHVybiAoKF9kID0gKF9jID0gKF9iID0gKF9hID0gY29udGV4dC5jbGVyaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNsaWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnNpZ25VcCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLnVudmVyaWZpZWRGaWVsZHMpID09IG51bGwgPyB2b2lkIDAgOiBfZC5sZW5ndGgpID4gMDtcbiAgICB9LFxuICAgIGhhc0F1dGhlbnRpY2F0ZWRWaWFDbGVya0pTOiAoeyBjb250ZXh0IH0pID0+IEJvb2xlYW4oY29udGV4dC5jbGVyay5jbGllbnQuc2lnblVwLnN0YXR1cyA9PT0gbnVsbCAmJiBjb250ZXh0LmNsZXJrLmNsaWVudC5sYXN0QWN0aXZlU2Vzc2lvbklkKSxcbiAgICBoYXNDcmVhdGVkU2Vzc2lvbjogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICB2YXIgX2E7XG4gICAgICByZXR1cm4gQm9vbGVhbigoX2EgPSBjb250ZXh0LnJvdXRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnNlYXJjaFBhcmFtcygpLmdldChTRUFSQ0hfUEFSQU1TLmNyZWF0ZWRTZXNzaW9uKSk7XG4gICAgfSxcbiAgICBoYXNDbGVya1N0YXR1czogKHsgY29udGV4dCB9LCBwYXJhbXMpID0+IHtcbiAgICAgIHZhciBfYTtcbiAgICAgIGNvbnN0IHZhbHVlID0gKF9hID0gY29udGV4dC5yb3V0ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYS5zZWFyY2hQYXJhbXMoKS5nZXQoU0VBUkNIX1BBUkFNUy5zdGF0dXMpO1xuICAgICAgaWYgKCFwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIEJvb2xlYW4odmFsdWUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlID09PSBwYXJhbXMuc3RhdHVzO1xuICAgIH0sXG4gICAgaGFzQ2xlcmtUcmFuc2ZlcjogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICB2YXIgX2E7XG4gICAgICByZXR1cm4gQm9vbGVhbigoX2EgPSBjb250ZXh0LnJvdXRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnNlYXJjaFBhcmFtcygpLmdldChTRUFSQ0hfUEFSQU1TLnRyYW5zZmVyKSk7XG4gICAgfSxcbiAgICBoYXNSZXNvdXJjZTogKHsgY29udGV4dCB9KSA9PiBCb29sZWFuKGNvbnRleHQuY2xlcmsuY2xpZW50LnNpZ25VcCksXG4gICAgaGFzVGlja2V0OiAoeyBjb250ZXh0IH0pID0+IEJvb2xlYW4oY29udGV4dC50aWNrZXQpLFxuICAgIGlzTG9nZ2VkSW5BbmRTaW5nbGVTZXNzaW9uOiBhbmQzKFtcImlzTG9nZ2VkSW5cIiwgXCJpc1NpbmdsZVNlc3Npb25Nb2RlXCIsIG5vdDMoXCJpc0V4YW1wbGVNb2RlXCIpXSksXG4gICAgaXNTdGF0dXNBYmFuZG9uZWQ6IG5lZWRzU3RhdHVzKFwiYWJhbmRvbmVkXCIpLFxuICAgIGlzU3RhdHVzQ29tcGxldGU6ICh7IGNvbnRleHQsIGV2ZW50IH0pID0+IHtcbiAgICAgIHZhciBfYSwgX2I7XG4gICAgICBjb25zdCByZXNvdXJjZSA9IGV2ZW50ID09IG51bGwgPyB2b2lkIDAgOiBldmVudC5yZXNvdXJjZTtcbiAgICAgIGNvbnN0IHNpZ25VcCA9IChfYiA9IChfYSA9IGNvbnRleHQuY2xlcmspID09IG51bGwgPyB2b2lkIDAgOiBfYS5jbGllbnQpID09IG51bGwgPyB2b2lkIDAgOiBfYi5zaWduVXA7XG4gICAgICByZXR1cm4gKHJlc291cmNlID09IG51bGwgPyB2b2lkIDAgOiByZXNvdXJjZS5zdGF0dXMpID09PSBcImNvbXBsZXRlXCIgJiYgQm9vbGVhbihyZXNvdXJjZSA9PSBudWxsID8gdm9pZCAwIDogcmVzb3VyY2UuY3JlYXRlZFNlc3Npb25JZCkgfHwgKHNpZ25VcCA9PSBudWxsID8gdm9pZCAwIDogc2lnblVwLnN0YXR1cykgPT09IFwiY29tcGxldGVcIiAmJiBCb29sZWFuKHNpZ25VcCA9PSBudWxsID8gdm9pZCAwIDogc2lnblVwLmNyZWF0ZWRTZXNzaW9uSWQpO1xuICAgIH0sXG4gICAgaXNTdGF0dXNNaXNzaW5nUmVxdWlyZW1lbnRzOiBuZWVkc1N0YXR1cyhcIm1pc3NpbmdfcmVxdWlyZW1lbnRzXCIpLFxuICAgIGlzTG9nZ2VkSW46IG9yMihbXCJpc1N0YXR1c0NvbXBsZXRlXCIsICh7IGNvbnRleHQgfSkgPT4gQm9vbGVhbihjb250ZXh0LmNsZXJrLnVzZXIpXSksXG4gICAgaXNTaW5nbGVTZXNzaW9uTW9kZTogKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICB2YXIgX2EsIF9iO1xuICAgICAgcmV0dXJuIEJvb2xlYW4oKF9iID0gKF9hID0gY29udGV4dC5jbGVyaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLl9fdW5zdGFibGVfX2Vudmlyb25tZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2IuYXV0aENvbmZpZy5zaW5nbGVTZXNzaW9uTW9kZSk7XG4gICAgfSxcbiAgICBpc1Jlc3RyaWN0ZWQ6ICh7IGNvbnRleHQgfSkgPT4ge1xuICAgICAgdmFyIF9hLCBfYjtcbiAgICAgIHJldHVybiAoKF9iID0gKF9hID0gY29udGV4dC5jbGVyaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLl9fdW5zdGFibGVfX2Vudmlyb25tZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2IudXNlclNldHRpbmdzLnNpZ25VcC5tb2RlKSA9PT0gU0lHTl9VUF9NT0RFUy5SRVNUUklDVEVEO1xuICAgIH0sXG4gICAgaXNSZXN0cmljdGVkV2l0aG91dFRpY2tldDogYW5kMyhbXCJpc1Jlc3RyaWN0ZWRcIiwgbm90MyhcImhhc1RpY2tldFwiKV0pLFxuICAgIGlzRXhhbXBsZU1vZGU6ICh7IGNvbnRleHQgfSkgPT4gQm9vbGVhbihjb250ZXh0LmV4YW1wbGVNb2RlKSxcbiAgICBpc01pc3NpbmdSZXF1aXJlZEZpZWxkczogYW5kMyhbXCJpc1N0YXR1c01pc3NpbmdSZXF1aXJlbWVudHNcIiwgXCJhcmVGaWVsZHNNaXNzaW5nXCJdKSxcbiAgICBpc01pc3NpbmdSZXF1aXJlZFVudmVyaWZpZWRGaWVsZHM6IGFuZDMoW1wiaXNTdGF0dXNNaXNzaW5nUmVxdWlyZW1lbnRzXCIsIFwiYXJlRmllbGRzVW52ZXJpZmllZFwiXSksXG4gICAgbmVlZHNJZGVudGlmaWVyOiBvcjIoW1wic3RhdHVzTmVlZHNJZGVudGlmaWVyXCIsIGlzQ3VycmVudFBhdGgoXCIvXCIpXSksXG4gICAgbmVlZHNDb250aW51ZTogYW5kMyhbXCJzdGF0dXNOZWVkc0NvbnRpbnVlXCIsIGlzQ3VycmVudFBhdGgoXCIvY29udGludWVcIildKSxcbiAgICBuZWVkc1ZlcmlmaWNhdGlvbjogYW5kMyhbXCJzdGF0dXNOZWVkc1ZlcmlmaWNhdGlvblwiLCBpc0N1cnJlbnRQYXRoKFwiL3ZlcmlmeVwiKV0pLFxuICAgIG5lZWRzQ2FsbGJhY2s6IGlzQ3VycmVudFBhdGgoU1NPX0NBTExCQUNLX1BBVEhfUk9VVEUpLFxuICAgIHN0YXR1c05lZWRzSWRlbnRpZmllcjogb3IyKFtub3QzKFwiaGFzUmVzb3VyY2VcIiksIFwiaXNTdGF0dXNBYmFuZG9uZWRcIl0pLFxuICAgIHN0YXR1c05lZWRzQ29udGludWU6IG9yMihbXCJpc01pc3NpbmdSZXF1aXJlZEZpZWxkc1wiXSksXG4gICAgc3RhdHVzTmVlZHNWZXJpZmljYXRpb246IG9yMihbXCJpc01pc3NpbmdSZXF1aXJlZFVudmVyaWZpZWRGaWVsZHNcIiwgYW5kMyhbXCJhcmVGaWVsZHNNaXNzaW5nXCIsIFwiaGFzQ2xlcmtTdGF0dXNcIl0pXSlcbiAgfSxcbiAgZGVsYXlzOiB7XG4gICAgXCJUSU1FT1VULlBPTExJTkdcIjogM2U1XG4gICAgLy8gNSBtaW51dGVzXG4gIH0sXG4gIHR5cGVzOiB7fVxufSkuY3JlYXRlTWFjaGluZSh7XG4gIGlkOiBTaWduVXBSb3V0ZXJNYWNoaW5lSWQsXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBTZXQgaW4gSU5JVCBldmVudFxuICBjb250ZXh0OiB7fSxcbiAgaW5pdGlhbDogXCJJZGxlXCIsXG4gIG9uOiB7XG4gICAgXCJBVVRIRU5USUNBVEUuT0FVVEhcIjoge1xuICAgICAgYWN0aW9uczogc2VuZFRvMyhUaGlyZFBhcnR5TWFjaGluZUlkLCAoeyBjb250ZXh0LCBldmVudCB9KSA9PiB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0eXBlOiBcIlJFRElSRUNUXCIsXG4gICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBzdHJhdGVneTogZXZlbnQuc3RyYXRlZ3ksXG4gICAgICAgICAgICByZWRpcmVjdFVybDogYCR7KChfYSA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EubW9kZSkgPT09IFJPVVRJTkcudmlydHVhbCA/IChfYiA9IGNvbnRleHQuY2xlcmsuX191bnN0YWJsZV9fZW52aXJvbm1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfYi5kaXNwbGF5Q29uZmlnLnNpZ25VcFVybCA6IChfYyA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2MuYmFzZVBhdGh9JHtTU09fQ0FMTEJBQ0tfUEFUSF9ST1VURX1gLFxuICAgICAgICAgICAgcmVkaXJlY3RVcmxDb21wbGV0ZTogY29udGV4dC5jbGVyay5idWlsZEFmdGVyU2lnblVwVXJsKHtcbiAgICAgICAgICAgICAgcGFyYW1zOiAoX2QgPSBjb250ZXh0LnJvdXRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9kLnNlYXJjaFBhcmFtcygpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH0pXG4gICAgfSxcbiAgICBcIkFVVEhFTlRJQ0FURS5TQU1MXCI6IHtcbiAgICAgIGFjdGlvbnM6IHNlbmRUbzMoVGhpcmRQYXJ0eU1hY2hpbmVJZCwgKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogXCJSRURJUkVDVFwiLFxuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgc3RyYXRlZ3k6IFwic2FtbFwiLFxuICAgICAgICAgICAgZW1haWxBZGRyZXNzOiAoX2EgPSBjb250ZXh0LmZvcm1SZWYuZ2V0U25hcHNob3QoKS5jb250ZXh0LmZpZWxkcy5nZXQoXCJlbWFpbEFkZHJlc3NcIikpID09IG51bGwgPyB2b2lkIDAgOiBfYS52YWx1ZSxcbiAgICAgICAgICAgIHJlZGlyZWN0VXJsOiBgJHsoKF9iID0gY29udGV4dC5yb3V0ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYi5tb2RlKSA9PT0gUk9VVElORy52aXJ0dWFsID8gKF9jID0gY29udGV4dC5jbGVyay5fX3Vuc3RhYmxlX19lbnZpcm9ubWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jLmRpc3BsYXlDb25maWcuc2lnblVwVXJsIDogKF9kID0gY29udGV4dC5yb3V0ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfZC5iYXNlUGF0aH0ke1NTT19DQUxMQkFDS19QQVRIX1JPVVRFfWAsXG4gICAgICAgICAgICByZWRpcmVjdFVybENvbXBsZXRlOiBjb250ZXh0LmNsZXJrLmJ1aWxkQWZ0ZXJTaWduVXBVcmwoe1xuICAgICAgICAgICAgICBwYXJhbXM6IChfZSA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2Uuc2VhcmNoUGFyYW1zKClcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfSlcbiAgICB9LFxuICAgIFwiQVVUSEVOVElDQVRFLkVOVEVSUFJJU0VfU1NPXCI6IHtcbiAgICAgIGFjdGlvbnM6IHNlbmRUbzMoVGhpcmRQYXJ0eU1hY2hpbmVJZCwgKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdHlwZTogXCJSRURJUkVDVFwiLFxuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgc3RyYXRlZ3k6IFwiZW50ZXJwcmlzZV9zc29cIixcbiAgICAgICAgICAgIGVtYWlsQWRkcmVzczogKF9hID0gY29udGV4dC5mb3JtUmVmLmdldFNuYXBzaG90KCkuY29udGV4dC5maWVsZHMuZ2V0KFwiZW1haWxBZGRyZXNzXCIpKSA9PSBudWxsID8gdm9pZCAwIDogX2EudmFsdWUsXG4gICAgICAgICAgICByZWRpcmVjdFVybDogYCR7KChfYiA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2IubW9kZSkgPT09IFJPVVRJTkcudmlydHVhbCA/IChfYyA9IGNvbnRleHQuY2xlcmsuX191bnN0YWJsZV9fZW52aXJvbm1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfYy5kaXNwbGF5Q29uZmlnLnNpZ25VcFVybCA6IChfZCA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2QuYmFzZVBhdGh9JHtTU09fQ0FMTEJBQ0tfUEFUSF9ST1VURX1gLFxuICAgICAgICAgICAgcmVkaXJlY3RVcmxDb21wbGV0ZTogY29udGV4dC5jbGVyay5idWlsZEFmdGVyU2lnblVwVXJsKHtcbiAgICAgICAgICAgICAgcGFyYW1zOiAoX2UgPSBjb250ZXh0LnJvdXRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9lLnNlYXJjaFBhcmFtcygpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH0pXG4gICAgfSxcbiAgICBcIkFVVEhFTlRJQ0FURS5XRUIzXCI6IHtcbiAgICAgIGFjdGlvbnM6IHNlbmRUbzMoXCJzdGFydFwiLCAoeyBldmVudCB9KSA9PiBldmVudClcbiAgICB9LFxuICAgIFwiRk9STS5BVFRBQ0hcIjoge1xuICAgICAgZGVzY3JpcHRpb246IFwiQXR0YWNoL3JlLWF0dGFjaCB0aGUgZm9ybSB0byB0aGUgcm91dGVyLlwiLFxuICAgICAgYWN0aW9uczogZW5xdWV1ZUFjdGlvbnMzKCh7IGVucXVldWUsIGV2ZW50IH0pID0+IHtcbiAgICAgICAgZW5xdWV1ZS5hc3NpZ24oe1xuICAgICAgICAgIGZvcm1SZWY6IGV2ZW50LmZvcm1SZWZcbiAgICAgICAgfSk7XG4gICAgICAgIGVucXVldWUucmFpc2UoeyB0eXBlOiBcIlJFU0VULlNURVBcIiB9KTtcbiAgICAgIH0pXG4gICAgfSxcbiAgICBcIk5BVklHQVRFLlBSRVZJT1VTXCI6IFwiLkhpc3RcIixcbiAgICBcIk5BVklHQVRFLlNUQVJUXCI6IFwiLlN0YXJ0XCIsXG4gICAgTE9BRElORzoge1xuICAgICAgYWN0aW9uczogYXNzaWduMygoeyBldmVudCB9KSA9PiAoe1xuICAgICAgICBsb2FkaW5nOiB7XG4gICAgICAgICAgaXNMb2FkaW5nOiBldmVudC5pc0xvYWRpbmcsXG4gICAgICAgICAgc3RlcDogZXZlbnQuc3RlcCxcbiAgICAgICAgICBzdHJhdGVneTogZXZlbnQuc3RyYXRlZ3ksXG4gICAgICAgICAgYWN0aW9uOiBldmVudC5hY3Rpb25cbiAgICAgICAgfVxuICAgICAgfSkpXG4gICAgfSxcbiAgICBSRVNFVDogXCIuSWRsZVwiXG4gIH0sXG4gIHN0YXRlczoge1xuICAgIElkbGU6IHtcbiAgICAgIG9uOiB7XG4gICAgICAgIElOSVQ6IHtcbiAgICAgICAgICBhY3Rpb25zOiBhc3NpZ24zKCh7IGV2ZW50IH0pID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IChfYSA9IGV2ZW50LnJvdXRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnNlYXJjaFBhcmFtcygpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgY2xlcms6IGV2ZW50LmNsZXJrLFxuICAgICAgICAgICAgICByb3V0ZXI6IGV2ZW50LnJvdXRlcixcbiAgICAgICAgICAgICAgc2lnbkluUGF0aDogZXZlbnQuc2lnbkluUGF0aCB8fCBTSUdOX0lOX0RFRkFVTFRfQkFTRV9QQVRILFxuICAgICAgICAgICAgICBsb2FkaW5nOiB7XG4gICAgICAgICAgICAgICAgaXNMb2FkaW5nOiBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBleGFtcGxlTW9kZTogZXZlbnQuZXhhbXBsZU1vZGUgfHwgZmFsc2UsXG4gICAgICAgICAgICAgIGZvcm1SZWY6IGV2ZW50LmZvcm1SZWYsXG4gICAgICAgICAgICAgIHRpY2tldDogKHNlYXJjaFBhcmFtcyA9PSBudWxsID8gdm9pZCAwIDogc2VhcmNoUGFyYW1zLmdldChTRUFSQ0hfUEFSQU1TLnRpY2tldCkpIHx8IChzZWFyY2hQYXJhbXMgPT0gbnVsbCA/IHZvaWQgMCA6IHNlYXJjaFBhcmFtcy5nZXQoU0VBUkNIX1BBUkFNUy5pbnZpdGF0aW9uVG9rZW4pKSB8fCB2b2lkIDBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSksXG4gICAgICAgICAgdGFyZ2V0OiBcIkluaXRcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBJbml0OiB7XG4gICAgICBlbnRyeTogZW5xdWV1ZUFjdGlvbnMzKCh7IGNvbnRleHQsIGVucXVldWUsIHNlbGYgfSkgPT4ge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICBpZiAoIXNlbGYuZ2V0U25hcHNob3QoKS5jaGlsZHJlbltUaGlyZFBhcnR5TWFjaGluZUlkXSkge1xuICAgICAgICAgIGVucXVldWUuc3Bhd25DaGlsZChcInRoaXJkUGFydHlNYWNoaW5lXCIsIHtcbiAgICAgICAgICAgIGlkOiBUaGlyZFBhcnR5TWFjaGluZUlkLFxuICAgICAgICAgICAgc3lzdGVtSWQ6IFRoaXJkUGFydHlNYWNoaW5lSWQsXG4gICAgICAgICAgICBpbnB1dDoge1xuICAgICAgICAgICAgICBiYXNlUGF0aDogKF9iID0gKF9hID0gY29udGV4dC5yb3V0ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYS5iYXNlUGF0aCkgIT0gbnVsbCA/IF9iIDogU0lHTl9VUF9ERUZBVUxUX0JBU0VfUEFUSCxcbiAgICAgICAgICAgICAgZmxvdzogXCJzaWduVXBcIixcbiAgICAgICAgICAgICAgZm9ybVJlZjogY29udGV4dC5mb3JtUmVmLFxuICAgICAgICAgICAgICBwYXJlbnQ6IHNlbGZcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICBhbHdheXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGd1YXJkOiBcImlzTG9nZ2VkSW5BbmRTaW5nbGVTZXNzaW9uXCIsXG4gICAgICAgICAgYWN0aW9uczogW1xuICAgICAgICAgICAgbG9nMihcIkFscmVhZHkgbG9nZ2VkIGluXCIpLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0eXBlOiBcIm5hdmlnYXRlRXh0ZXJuYWxcIixcbiAgICAgICAgICAgICAgcGFyYW1zOiAoeyBjb250ZXh0IH0pID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgIHBhdGg6IGNvbnRleHQuY2xlcmsuYnVpbGRBZnRlclNpZ25VcFVybCh7XG4gICAgICAgICAgICAgICAgICAgIHBhcmFtczogKF9hID0gY29udGV4dC5yb3V0ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYS5zZWFyY2hQYXJhbXMoKVxuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgZ3VhcmQ6IFwibmVlZHNDYWxsYmFja1wiLFxuICAgICAgICAgIHRhcmdldDogXCJDYWxsYmFja1wiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBndWFyZDogXCJoYXNUaWNrZXRcIixcbiAgICAgICAgICBhY3Rpb25zOiB7IHR5cGU6IFwibmF2aWdhdGVJbnRlcm5hbFwiLCBwYXJhbXM6IHsgZm9yY2U6IHRydWUsIHBhdGg6IFwiL1wiIH0gfSxcbiAgICAgICAgICB0YXJnZXQ6IFwiU3RhcnRcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgZ3VhcmQ6IFwibmVlZHNWZXJpZmljYXRpb25cIixcbiAgICAgICAgICBhY3Rpb25zOiB7IHR5cGU6IFwibmF2aWdhdGVJbnRlcm5hbFwiLCBwYXJhbXM6IHsgZm9yY2U6IHRydWUsIHBhdGg6IFwiL3ZlcmlmeVwiIH0gfSxcbiAgICAgICAgICB0YXJnZXQ6IFwiVmVyaWZpY2F0aW9uXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGd1YXJkOiBvcjIoW1wibmVlZHNDb250aW51ZVwiLCBcImhhc0NsZXJrVHJhbnNmZXJcIl0pLFxuICAgICAgICAgIGFjdGlvbnM6IHsgdHlwZTogXCJuYXZpZ2F0ZUludGVybmFsXCIsIHBhcmFtczogeyBmb3JjZTogdHJ1ZSwgcGF0aDogXCIvY29udGludWVcIiB9IH0sXG4gICAgICAgICAgdGFyZ2V0OiBcIkNvbnRpbnVlXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGd1YXJkOiBcImlzUmVzdHJpY3RlZFdpdGhvdXRUaWNrZXRcIixcbiAgICAgICAgICB0YXJnZXQ6IFwiUmVzdHJpY3RlZFwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBhY3Rpb25zOiB7IHR5cGU6IFwibmF2aWdhdGVJbnRlcm5hbFwiLCBwYXJhbXM6IHsgZm9yY2U6IHRydWUsIHBhdGg6IFwiL1wiIH0gfSxcbiAgICAgICAgICB0YXJnZXQ6IFwiU3RhcnRcIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBTdGFydDoge1xuICAgICAgdGFnczogW1wic3RlcDpzdGFydFwiXSxcbiAgICAgIGV4aXQ6IFwiY2xlYXJGb3JtRXJyb3JzXCIsXG4gICAgICBpbnZva2U6IHtcbiAgICAgICAgaWQ6IFwic3RhcnRcIixcbiAgICAgICAgc3JjOiBcInN0YXJ0TWFjaGluZVwiLFxuICAgICAgICBpbnB1dDogKHsgY29udGV4dCwgc2VsZiB9KSA9PiB7XG4gICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBiYXNlUGF0aDogKF9hID0gY29udGV4dC5yb3V0ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYS5iYXNlUGF0aCxcbiAgICAgICAgICAgIGZvcm1SZWY6IGNvbnRleHQuZm9ybVJlZixcbiAgICAgICAgICAgIHBhcmVudDogc2VsZixcbiAgICAgICAgICAgIHRpY2tldDogY29udGV4dC50aWNrZXRcbiAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBvbkRvbmU6IHtcbiAgICAgICAgICBhY3Rpb25zOiBcInJhaXNlTmV4dFwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvbjoge1xuICAgICAgICBcIlJFU0VULlNURVBcIjoge1xuICAgICAgICAgIGFjdGlvbnM6IGVucXVldWVBY3Rpb25zMygoeyBlbnF1ZXVlLCBjb250ZXh0IH0pID0+IHtcbiAgICAgICAgICAgIGVucXVldWUoXCJjbGVhckZvcm1FcnJvcnNcIik7XG4gICAgICAgICAgICBlbnF1ZXVlLnNlbmRUbyhcInN0YXJ0XCIsIHsgdHlwZTogXCJTRVRfRk9STVwiLCBmb3JtUmVmOiBjb250ZXh0LmZvcm1SZWYgfSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgfSxcbiAgICAgICAgTkVYVDogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBcImlzU3RhdHVzQ29tcGxldGVcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldEFjdGl2ZVwiLCBcImRlbGF5ZWRSZXNldFwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IGFuZDMoW1wiaGFzVGlja2V0XCIsIFwic3RhdHVzTmVlZHNDb250aW51ZVwiXSksXG4gICAgICAgICAgICBhY3Rpb25zOiB7IHR5cGU6IFwibmF2aWdhdGVJbnRlcm5hbFwiLCBwYXJhbXM6IHsgcGF0aDogXCIvXCIgfSB9LFxuICAgICAgICAgICAgdGFyZ2V0OiBcIlN0YXJ0XCIsXG4gICAgICAgICAgICByZWVudGVyOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogXCJzdGF0dXNOZWVkc1ZlcmlmaWNhdGlvblwiLFxuICAgICAgICAgICAgdGFyZ2V0OiBcIlZlcmlmaWNhdGlvblwiLFxuICAgICAgICAgICAgYWN0aW9uczogeyB0eXBlOiBcIm5hdmlnYXRlSW50ZXJuYWxcIiwgcGFyYW1zOiB7IHBhdGg6IFwiL3ZlcmlmeVwiIH0gfVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IFwic3RhdHVzTmVlZHNDb250aW51ZVwiLFxuICAgICAgICAgICAgYWN0aW9uczogeyB0eXBlOiBcIm5hdmlnYXRlSW50ZXJuYWxcIiwgcGFyYW1zOiB7IHBhdGg6IFwiL2NvbnRpbnVlXCIgfSB9LFxuICAgICAgICAgICAgdGFyZ2V0OiBcIkNvbnRpbnVlXCJcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH1cbiAgICB9LFxuICAgIENvbnRpbnVlOiB7XG4gICAgICB0YWdzOiBbXCJzdGVwOmNvbnRpbnVlXCJdLFxuICAgICAgaW52b2tlOiB7XG4gICAgICAgIGlkOiBcImNvbnRpbnVlXCIsXG4gICAgICAgIHNyYzogXCJjb250aW51ZU1hY2hpbmVcIixcbiAgICAgICAgaW5wdXQ6ICh7IGNvbnRleHQsIHNlbGYgfSkgPT4ge1xuICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYmFzZVBhdGg6IChfYSA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EuYmFzZVBhdGgsXG4gICAgICAgICAgICBmb3JtUmVmOiBjb250ZXh0LmZvcm1SZWYsXG4gICAgICAgICAgICBwYXJlbnQ6IHNlbGZcbiAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBvbkRvbmU6IHtcbiAgICAgICAgICBhY3Rpb25zOiBcInJhaXNlTmV4dFwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvbjoge1xuICAgICAgICBcIlJFU0VULlNURVBcIjoge1xuICAgICAgICAgIHRhcmdldDogXCJDb250aW51ZVwiLFxuICAgICAgICAgIHJlZW50ZXI6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgTkVYVDogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBcImlzU3RhdHVzQ29tcGxldGVcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldEFjdGl2ZVwiLCBcImRlbGF5ZWRSZXNldFwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IFwic3RhdHVzTmVlZHNWZXJpZmljYXRpb25cIixcbiAgICAgICAgICAgIHRhcmdldDogXCJWZXJpZmljYXRpb25cIixcbiAgICAgICAgICAgIGFjdGlvbnM6IHsgdHlwZTogXCJuYXZpZ2F0ZUludGVybmFsXCIsIHBhcmFtczogeyBwYXRoOiBcIi92ZXJpZnlcIiB9IH1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH1cbiAgICB9LFxuICAgIFZlcmlmaWNhdGlvbjoge1xuICAgICAgdGFnczogW1wic3RlcDp2ZXJpZmljYXRpb25cIl0sXG4gICAgICBpbnZva2U6IHtcbiAgICAgICAgaWQ6IFwidmVyaWZpY2F0aW9uXCIsXG4gICAgICAgIHNyYzogXCJ2ZXJpZmljYXRpb25NYWNoaW5lXCIsXG4gICAgICAgIGlucHV0OiAoeyBjb250ZXh0LCBzZWxmIH0pID0+IHtcbiAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiAoX2EgPSBjb250ZXh0LmNsZXJrLl9fdW5zdGFibGVfX2Vudmlyb25tZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2EudXNlclNldHRpbmdzLmF0dHJpYnV0ZXMsXG4gICAgICAgICAgICBiYXNlUGF0aDogKF9iID0gY29udGV4dC5yb3V0ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYi5iYXNlUGF0aCxcbiAgICAgICAgICAgIGZvcm1SZWY6IGNvbnRleHQuZm9ybVJlZixcbiAgICAgICAgICAgIHBhcmVudDogc2VsZixcbiAgICAgICAgICAgIHJlc291cmNlOiBjb250ZXh0LmNsZXJrLmNsaWVudC5zaWduVXBcbiAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBvbkRvbmU6IHtcbiAgICAgICAgICBhY3Rpb25zOiBcInJhaXNlTmV4dFwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBhbHdheXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGd1YXJkOiBcImhhc0NyZWF0ZWRTZXNzaW9uXCIsXG4gICAgICAgICAgYWN0aW9uczogW1xuICAgICAgICAgICAgKHsgY29udGV4dCB9KSA9PiB7XG4gICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcInNldEFjdGl2ZVwiLFxuICAgICAgICAgICAgICAgIHBhcmFtczogeyBzZXNzaW9uSWQ6IChfYSA9IGNvbnRleHQucm91dGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2Euc2VhcmNoUGFyYW1zKCkuZ2V0KFNFQVJDSF9QQVJBTVMuY3JlYXRlZFNlc3Npb24pIH1cbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImRlbGF5ZWRSZXNldFwiXG4gICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgZ3VhcmQ6IHsgdHlwZTogXCJoYXNDbGVya1N0YXR1c1wiLCBwYXJhbXM6IHsgc3RhdHVzOiBcInZlcmlmaWVkXCIgfSB9LFxuICAgICAgICAgIGFjdGlvbnM6IHsgdHlwZTogXCJuYXZpZ2F0ZUludGVybmFsXCIsIHBhcmFtczogeyBmb3JjZTogdHJ1ZSwgcGF0aDogXCIvY29udGludWVcIiB9IH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGd1YXJkOiB7IHR5cGU6IFwiaGFzQ2xlcmtTdGF0dXNcIiwgcGFyYW1zOiB7IHN0YXR1czogXCJleHBpcmVkXCIgfSB9LFxuICAgICAgICAgIGFjdGlvbnM6IHsgdHlwZTogXCJuYXZpZ2F0ZUludGVybmFsXCIsIHBhcmFtczogeyBmb3JjZTogdHJ1ZSwgcGF0aDogXCIvXCIgfSB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBvbjoge1xuICAgICAgICBcIlJFU0VULlNURVBcIjoge1xuICAgICAgICAgIHRhcmdldDogXCJWZXJpZmljYXRpb25cIixcbiAgICAgICAgICByZWVudGVyOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIE5FWFQ6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogXCJpc1N0YXR1c0NvbXBsZXRlXCIsXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRBY3RpdmVcIiwgXCJkZWxheWVkUmVzZXRcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBcInN0YXR1c05lZWRzQ29udGludWVcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IHsgdHlwZTogXCJuYXZpZ2F0ZUludGVybmFsXCIsIHBhcmFtczogeyBwYXRoOiBcIi9jb250aW51ZVwiIH0gfSxcbiAgICAgICAgICAgIHRhcmdldDogXCJDb250aW51ZVwiXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9XG4gICAgfSxcbiAgICBDYWxsYmFjazoge1xuICAgICAgdGFnczogW1wic3RlcDpjYWxsYmFja1wiXSxcbiAgICAgIGVudHJ5OiBzZW5kVG8zKFRoaXJkUGFydHlNYWNoaW5lSWQsIHsgdHlwZTogXCJDQUxMQkFDS1wiIH0pLFxuICAgICAgb246IHtcbiAgICAgICAgTkVYVDogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBcImlzU3RhdHVzQ29tcGxldGVcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcInNldEFjdGl2ZVwiLCBcImRlbGF5ZWRSZXNldFwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiSGFuZGxlIGEgY2FzZSB3aGVyZSB0aGUgdXNlciBoYXMgYWxyZWFkeSBiZWVuIGF1dGhlbnRpY2F0ZWQgdmlhIENsZXJrSlNcIixcbiAgICAgICAgICAgIGd1YXJkOiBcImhhc0F1dGhlbnRpY2F0ZWRWaWFDbGVya0pTXCIsXG4gICAgICAgICAgICBhY3Rpb25zOiBbeyB0eXBlOiBcInNldEFjdGl2ZVwiLCBwYXJhbXM6IHsgdXNlTGFzdEFjdGl2ZVNlc3Npb246IHRydWUgfSB9LCBcImRlbGF5ZWRSZXNldFwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3VhcmQ6IFwic3RhdHVzTmVlZHNWZXJpZmljYXRpb25cIixcbiAgICAgICAgICAgIGFjdGlvbnM6IHsgdHlwZTogXCJuYXZpZ2F0ZUludGVybmFsXCIsIHBhcmFtczogeyBwYXRoOiBcIi92ZXJpZnlcIiB9IH0sXG4gICAgICAgICAgICB0YXJnZXQ6IFwiVmVyaWZpY2F0aW9uXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBcInN0YXR1c05lZWRzQ29udGludWVcIixcbiAgICAgICAgICAgIGFjdGlvbnM6IHsgdHlwZTogXCJuYXZpZ2F0ZUludGVybmFsXCIsIHBhcmFtczogeyBwYXRoOiBcIi9jb250aW51ZVwiIH0gfSxcbiAgICAgICAgICAgIHRhcmdldDogXCJDb250aW51ZVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBhY3Rpb25zOiB7IHR5cGU6IFwibmF2aWdhdGVJbnRlcm5hbFwiLCBwYXJhbXM6IHsgcGF0aDogXCIvXCIgfSB9LFxuICAgICAgICAgICAgdGFyZ2V0OiBcIlN0YXJ0XCJcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH1cbiAgICB9LFxuICAgIFJlc3RyaWN0ZWQ6IHtcbiAgICAgIHRhZ3M6IFtcInN0ZXA6cmVzdHJpY3RlZFwiXSxcbiAgICAgIG9uOiB7XG4gICAgICAgIE5FWFQ6IFwiU3RhcnRcIlxuICAgICAgfVxuICAgIH0sXG4gICAgRXJyb3I6IHtcbiAgICAgIHRhZ3M6IFtcInN0ZXA6ZXJyb3JcIl0sXG4gICAgICBvbjoge1xuICAgICAgICBORVhUOiB7XG4gICAgICAgICAgdGFyZ2V0OiBcIlN0YXJ0XCIsXG4gICAgICAgICAgYWN0aW9uczogXCJjbGVhckZvcm1FcnJvcnNcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBIaXN0OiB7XG4gICAgICB0eXBlOiBcImhpc3RvcnlcIixcbiAgICAgIGV4aXQ6IFwiY2xlYXJGb3JtRXJyb3JzXCJcbiAgICB9XG4gIH1cbn0pO1xuXG4vLyBzcmMvcmVhY3Qvc2lnbi11cC9yb290LnRzeFxuaW1wb3J0IHsganN4LCBqc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgYWN0b3IgPSBjcmVhdGVBY3RvcihTaWduVXBSb3V0ZXJNYWNoaW5lLCB7IGluc3BlY3QgfSk7XG5hY3Rvci5zdGFydCgpO1xuZnVuY3Rpb24gU2lnblVwRmxvd1Byb3ZpZGVyKHsgY2hpbGRyZW4sIGV4YW1wbGVNb2RlLCBmYWxsYmFjaywgaXNSb290UGF0aCB9KSB7XG4gIGNvbnN0IGNsZXJrID0gdXNlQ2xlcmsoKTtcbiAgY29uc3Qgcm91dGVyID0gdXNlQ2xlcmtSb3V0ZXIoKTtcbiAgY29uc3QgZm9ybVJlZiA9IHVzZUZvcm1TdG9yZSgpO1xuICBjb25zdCBpc1JlYWR5ID0gdXNlU2VsZWN0b3IoYWN0b3IsIChzdGF0ZSkgPT4gc3RhdGUudmFsdWUgIT09IFwiSWRsZVwiKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWNsZXJrIHx8ICFyb3V0ZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgY2IgPSAoKSA9PiB7XG4gICAgICBjb25zdCBldnQgPSB7XG4gICAgICAgIHR5cGU6IFwiSU5JVFwiLFxuICAgICAgICBjbGVyayxcbiAgICAgICAgZXhhbXBsZU1vZGUsXG4gICAgICAgIGZvcm1SZWYsXG4gICAgICAgIHJvdXRlcixcbiAgICAgICAgc2lnbkluUGF0aDogU0lHTl9JTl9ERUZBVUxUX0JBU0VfUEFUSFxuICAgICAgfTtcbiAgICAgIGlmIChhY3Rvci5nZXRTbmFwc2hvdCgpLmNhbihldnQpKSB7XG4gICAgICAgIGFjdG9yLnNlbmQoZXZ0KTtcbiAgICAgIH1cbiAgICAgIGlmIChmb3JtUmVmICYmIGFjdG9yLmdldFNuYXBzaG90KCkuY2FuKHsgdHlwZTogXCJSRVNFVC5TVEVQXCIgfSkpIHtcbiAgICAgICAgYWN0b3Iuc2VuZCh7XG4gICAgICAgICAgdHlwZTogXCJGT1JNLkFUVEFDSFwiLFxuICAgICAgICAgIGZvcm1SZWZcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBpZiAoXCJhZGRPbkxvYWRlZFwiIGluIGNsZXJrKSB7XG4gICAgICBjbGVyay5hZGRPbkxvYWRlZChjYik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNiKCk7XG4gICAgfVxuICB9LCBbY2xlcmssIGV4YW1wbGVNb2RlLCBmb3JtUmVmID09IG51bGwgPyB2b2lkIDAgOiBmb3JtUmVmLmlkLCAhIXJvdXRlciwgY2xlcmsubG9hZGVkXSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4cyhTaWduVXBSb3V0ZXJDdHguUHJvdmlkZXIsIHsgYWN0b3JSZWY6IGFjdG9yLCBjaGlsZHJlbjogW1xuICAgIGlzUm9vdFBhdGggJiYgIWlzUmVhZHkgJiYgZmFsbGJhY2sgPyAvKiBAX19QVVJFX18gKi8ganN4KEZvcm0sIHsgY2hpbGRyZW46IGZhbGxiYWNrIH0pIDogbnVsbCxcbiAgICBjbGVyay5sb2FkZWQgJiYgaXNSZWFkeSA/IGNoaWxkcmVuIDogbnVsbFxuICBdIH0pO1xufVxuZnVuY3Rpb24gU2lnblVwUm9vdCh7XG4gIGNoaWxkcmVuLFxuICBleGFtcGxlTW9kZSA9IGZhbHNlLFxuICBmYWxsYmFjayA9IG51bGwsXG4gIHBhdGg6IHBhdGhQcm9wLFxuICByb3V0aW5nID0gUk9VVElORy5wYXRoXG59KSB7XG4gIHZhciBfYSwgX2I7XG4gIGNvbnN0IGNsZXJrID0gdXNlQ2xlcmsoKTtcbiAgY29uc3Qgcm91dGVyID0gKHJvdXRpbmcgPT09IFJPVVRJTkcudmlydHVhbCA/IHVzZVZpcnR1YWxSb3V0ZXIgOiB1c2VOZXh0Um91dGVyKSgpO1xuICBjb25zdCBwYXRobmFtZSA9IHJvdXRlci5wYXRobmFtZSgpO1xuICBjb25zdCBpbmZlcnJlZFBhdGggPSAoX2EgPSByb3V0ZXIuaW5mZXJyZWRCYXNlUGF0aCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNhbGwocm91dGVyKTtcbiAgY29uc3QgcGF0aCA9IHBhdGhQcm9wIHx8IGluZmVycmVkUGF0aCB8fCBTSUdOX1VQX0RFRkFVTFRfQkFTRV9QQVRIO1xuICBjb25zdCBpc1Jvb3RQYXRoID0gcGF0aCA9PT0gcGF0aG5hbWU7XG4gIChfYiA9IGNsZXJrLnRlbGVtZXRyeSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnJlY29yZChcbiAgICBldmVudENvbXBvbmVudE1vdW50ZWQoXCJFbGVtZW50c19TaWduVXBSb290XCIsIHtcbiAgICAgIGV4YW1wbGVNb2RlLFxuICAgICAgZmFsbGJhY2s6IEJvb2xlYW4oZmFsbGJhY2spLFxuICAgICAgcGF0aCxcbiAgICAgIHJvdXRpbmdcbiAgICB9KVxuICApO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChDbGVya0hvc3RSb3V0ZXJDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiByb3V0ZXIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KFJvdXRlciwgeyBiYXNlUGF0aDogcGF0aCwgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goRm9ybVN0b3JlUHJvdmlkZXIsIHsgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqLyBqc3goXG4gICAgU2lnblVwRmxvd1Byb3ZpZGVyLFxuICAgIHtcbiAgICAgIGV4YW1wbGVNb2RlLFxuICAgICAgZmFsbGJhY2ssXG4gICAgICBpc1Jvb3RQYXRoLFxuICAgICAgY2hpbGRyZW5cbiAgICB9XG4gICkgfSkgfSkgfSk7XG59XG5cbi8vIHNyYy9yZWFjdC9zaWduLXVwL2FjdGlvbi9hY3Rpb24udHN4XG5pbXBvcnQgKiBhcyBSZWFjdDMgZnJvbSBcInJlYWN0XCI7XG5cbi8vIHNyYy9yZWFjdC9zaWduLXVwL2FjdGlvbi9uYXZpZ2F0ZS50c3hcbmltcG9ydCB7IFNsb3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXNsb3RcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsganN4IGFzIGpzeDIgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBTSUdOX1VQX05BVklHQVRFX05BTUUgPSBcIlNpZ25Jbk5hdmlnYXRlXCI7XG52YXIgU2lnblVwTmF2aWdhdGlvbkV2ZW50TWFwID0ge1xuICBzdGFydDogYE5BVklHQVRFLlNUQVJUYCxcbiAgcHJldmlvdXM6IGBOQVZJR0FURS5QUkVWSU9VU2Bcbn07XG52YXIgU2lnblVwTmF2aWdhdGUgPSBSZWFjdC5mb3J3YXJkUmVmKFxuICAoeyBhc0NoaWxkLCB0bywgLi4ucmVzdCB9LCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCBhY3RvclJlZiA9IFNpZ25VcFJvdXRlckN0eC51c2VBY3RvclJlZigpO1xuICAgIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6IFwiYnV0dG9uXCI7XG4gICAgY29uc3QgZGVmYXVsdFByb3BzID0gYXNDaGlsZCA/IHt9IDogeyB0eXBlOiBcImJ1dHRvblwiIH07XG4gICAgY29uc3Qgc2VuZEV2ZW50ID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgY29uc3QgdHlwZSA9IFNpZ25VcE5hdmlnYXRpb25FdmVudE1hcFt0b107XG4gICAgICBpZiAoYWN0b3JSZWYuZ2V0U25hcHNob3QoKS5jYW4oeyB0eXBlIH0pKSB7XG4gICAgICAgIGFjdG9yUmVmLnNlbmQoeyB0eXBlIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgIGBDbGVyazogPFNpZ25VcC5BY3Rpb24gbmF2aWdhdGU9XCIke3RvfVwiPiBpcyBhbiBpbnZhbGlkIG5hdmlnYXRpb24gZXZlbnQuIFlvdSBjYW4gb25seSBuYXZpZ2F0ZSB0bzogJHtPYmplY3Qua2V5cyhTaWduVXBOYXZpZ2F0aW9uRXZlbnRNYXApLmpvaW4oXCIsIFwiKX0uYFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0sIFthY3RvclJlZiwgdG9dKTtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDIoXG4gICAgICBDb21wLFxuICAgICAge1xuICAgICAgICAuLi5kZWZhdWx0UHJvcHMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgICAgIG9uQ2xpY2s6IHNlbmRFdmVudCxcbiAgICAgICAgcmVmOiBmb3J3YXJkZWRSZWZcbiAgICAgIH1cbiAgICApO1xuICB9XG4pO1xuU2lnblVwTmF2aWdhdGUuZGlzcGxheU5hbWUgPSBTSUdOX1VQX05BVklHQVRFX05BTUU7XG5cbi8vIHNyYy9yZWFjdC9zaWduLXVwL2FjdGlvbi9yZXNlbmQudHN4XG5pbXBvcnQgeyBTbG90IGFzIFNsb3QyIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1zbG90XCI7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciBhcyB1c2VTZWxlY3RvcjIgfSBmcm9tIFwiQHhzdGF0ZS9yZWFjdFwiO1xuaW1wb3J0ICogYXMgUmVhY3QyIGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsganN4IGFzIGpzeDMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBTSUdOX1VQX1JFU0VORF9OQU1FID0gXCJTaWduVXBSZXNlbmRcIjtcbnZhciBTaWduVXBSZXNlbmQgPSBSZWFjdDIuZm9yd2FyZFJlZihcbiAgKHsgYXNDaGlsZCwgZmFsbGJhY2ssIC4uLnJlc3QgfSwgZm9yd2FyZGVkUmVmKSA9PiB7XG4gICAgY29uc3QgcmVmID0gU2lnblVwVmVyaWZpY2F0aW9uQ3R4LnVzZUFjdG9yUmVmKHRydWUpO1xuICAgIGlmICghcmVmKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSByZXNlbmQgYWN0aW9uIG11c3QgYmUgdXNlZCB3aXRoaW4gPFNpZ25VcC5TdGVwIG5hbWU9XCJ2ZXJpZmljYXRpb25zXCI+LicpO1xuICAgIH1cbiAgICBjb25zdCBmYWxsYmFja1Byb3BzID0gdXNlU2VsZWN0b3IyKFxuICAgICAgcmVmLFxuICAgICAgKHN0YXRlKSA9PiAoe1xuICAgICAgICByZXNlbmRhYmxlOiBzdGF0ZS5jb250ZXh0LnJlc2VuZGFibGUsXG4gICAgICAgIHJlc2VuZGFibGVBZnRlcjogc3RhdGUuY29udGV4dC5yZXNlbmRhYmxlQWZ0ZXJcbiAgICAgIH0pLFxuICAgICAgKGEsIGIpID0+IGEucmVzZW5kYWJsZUFmdGVyID09PSBiLnJlc2VuZGFibGVBZnRlciAmJiBhLnJlc2VuZGFibGUgPT09IGIucmVzZW5kYWJsZVxuICAgICk7XG4gICAgaWYgKGZhbGxiYWNrICYmICFmYWxsYmFja1Byb3BzLnJlc2VuZGFibGUpIHtcbiAgICAgIHJldHVybiB0eXBlb2YgZmFsbGJhY2sgPT09IFwiZnVuY3Rpb25cIiA/IGZhbGxiYWNrKGZhbGxiYWNrUHJvcHMpIDogZmFsbGJhY2s7XG4gICAgfVxuICAgIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdDIgOiBcImJ1dHRvblwiO1xuICAgIGNvbnN0IGRlZmF1bHRQcm9wcyA9IGFzQ2hpbGQgPyB7fSA6IHsgdHlwZTogXCJidXR0b25cIiB9O1xuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4MyhcbiAgICAgIENvbXAsXG4gICAgICB7XG4gICAgICAgIC4uLmRlZmF1bHRQcm9wcyxcbiAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgZGlzYWJsZWQ6ICFmYWxsYmFja1Byb3BzLnJlc2VuZGFibGUsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHJlZi5zZW5kKHsgdHlwZTogXCJSRVRSWVwiIH0pLFxuICAgICAgICByZWY6IGZvcndhcmRlZFJlZlxuICAgICAgfVxuICAgICk7XG4gIH1cbik7XG5TaWduVXBSZXNlbmQuZGlzcGxheU5hbWUgPSBTSUdOX1VQX1JFU0VORF9OQU1FO1xuXG4vLyBzcmMvcmVhY3Qvc2lnbi11cC9hY3Rpb24vYWN0aW9uLnRzeFxuaW1wb3J0IHsganN4IGFzIGpzeDQgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBTaWduVXBBY3Rpb24gPSBSZWFjdDMuZm9yd2FyZFJlZigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICBjb25zdCB7IHN1Ym1pdCwgbmF2aWdhdGUsIHJlc2VuZCwgLi4ucmVzdCB9ID0gcHJvcHM7XG4gIGxldCBDb21wO1xuICBpZiAoc3VibWl0KSB7XG4gICAgQ29tcCA9IFN1Ym1pdDtcbiAgfSBlbHNlIGlmIChuYXZpZ2F0ZSkge1xuICAgIENvbXAgPSBTaWduVXBOYXZpZ2F0ZTtcbiAgfSBlbHNlIGlmIChyZXNlbmQpIHtcbiAgICBDb21wID0gU2lnblVwUmVzZW5kO1xuICB9XG4gIHJldHVybiBDb21wID8gLyogQF9fUFVSRV9fICovIGpzeDQoXG4gICAgQ29tcCxcbiAgICB7XG4gICAgICB0bzogbmF2aWdhdGUsXG4gICAgICAuLi5yZXN0LFxuICAgICAgcmVmOiBmb3J3YXJkZWRSZWZcbiAgICB9XG4gICkgOiBudWxsO1xufSk7XG5TaWduVXBBY3Rpb24uZGlzcGxheU5hbWUgPSBcIlNpZ25VcEFjdGlvblwiO1xuXG4vLyBzcmMvcmVhY3Qvc2lnbi11cC9jYXB0Y2hhLnRzeFxuaW1wb3J0IHsgU2xvdCBhcyBTbG90MyB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2xvdFwiO1xuaW1wb3J0ICogYXMgUmVhY3Q0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsganN4IGFzIGpzeDUgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBTaWduVXBDYXB0Y2hhID0gUmVhY3Q0LmZvcndhcmRSZWYoXG4gICh7IGFzQ2hpbGQsIGNoaWxkcmVuLCAuLi5yZXN0IH0sIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHJlZiA9IFNpZ25VcFN0YXJ0Q3R4LnVzZUFjdG9yUmVmKHRydWUpO1xuICAgIGlmICghcmVmKSB7XG4gICAgICB0aHJvdyBuZXcgQ2xlcmtFbGVtZW50c1J1bnRpbWVFcnJvcignPENhcHRjaGE+IG11c3QgYmUgdXNlZCB3aXRoaW4gdGhlIDxTaWduVXAuU3RlcCBuYW1lPVwic3RhcnRcIj4gY29tcG9uZW50LicpO1xuICAgIH1cbiAgICBjb25zdCBDb21wID0gYXNDaGlsZCA/IFNsb3QzIDogXCJkaXZcIjtcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeDUoXG4gICAgICBDb21wLFxuICAgICAge1xuICAgICAgICBpZDogQ0FQVENIQV9FTEVNRU5UX0lELFxuICAgICAgICAuLi5yZXN0LFxuICAgICAgICByZWY6IGZvcndhcmRlZFJlZlxuICAgICAgfVxuICAgICk7XG4gIH1cbik7XG5leHBvcnQge1xuICBTaWduVXBBY3Rpb24gYXMgQWN0aW9uLFxuICBTaWduVXBDYXB0Y2hhIGFzIENhcHRjaGEsXG4gIFNpZ25VcFJvb3QgYXMgUm9vdCxcbiAgU2lnblVwUm9vdCBhcyBTaWduVXAsXG4gIFNpZ25VcFN0ZXAgYXMgU3RlcCxcbiAgU2lnblVwU3RyYXRlZ3kgYXMgU3RyYXRlZ3lcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/elements/dist/react/sign-up/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3CN5LOSN.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-3CN5LOSN.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCheckAuthorization: () => (/* binding */ createCheckAuthorization),\n/* harmony export */   resolveAuthState: () => (/* binding */ resolveAuthState),\n/* harmony export */   splitByScope: () => (/* binding */ splitByScope),\n/* harmony export */   validateReverificationConfig: () => (/* binding */ validateReverificationConfig)\n/* harmony export */ });\n// src/authorization.ts\nvar TYPES_TO_OBJECTS = {\n  strict_mfa: {\n    afterMinutes: 10,\n    level: \"multi_factor\"\n  },\n  strict: {\n    afterMinutes: 10,\n    level: \"second_factor\"\n  },\n  moderate: {\n    afterMinutes: 60,\n    level: \"second_factor\"\n  },\n  lax: {\n    afterMinutes: 1440,\n    level: \"second_factor\"\n  }\n};\nvar ALLOWED_LEVELS = /* @__PURE__ */ new Set([\"first_factor\", \"second_factor\", \"multi_factor\"]);\nvar ALLOWED_TYPES = /* @__PURE__ */ new Set([\"strict_mfa\", \"strict\", \"moderate\", \"lax\"]);\nvar isValidMaxAge = (maxAge) => typeof maxAge === \"number\" && maxAge > 0;\nvar isValidLevel = (level) => ALLOWED_LEVELS.has(level);\nvar isValidVerificationType = (type) => ALLOWED_TYPES.has(type);\nvar prefixWithOrg = (value) => value.replace(/^(org:)*/, \"org:\");\nvar checkOrgAuthorization = (params, options) => {\n  const { orgId, orgRole, orgPermissions } = options;\n  if (!params.role && !params.permission) {\n    return null;\n  }\n  if (!orgId || !orgRole || !orgPermissions) {\n    return null;\n  }\n  if (params.permission) {\n    return orgPermissions.includes(prefixWithOrg(params.permission));\n  }\n  if (params.role) {\n    return prefixWithOrg(orgRole) === prefixWithOrg(params.role);\n  }\n  return null;\n};\nvar checkForFeatureOrPlan = (claim, featureOrPlan) => {\n  const { org: orgFeatures, user: userFeatures } = splitByScope(claim);\n  const [scope, _id] = featureOrPlan.split(\":\");\n  const id = _id || scope;\n  if (scope === \"org\") {\n    return orgFeatures.includes(id);\n  } else if (scope === \"user\") {\n    return userFeatures.includes(id);\n  } else {\n    return [...orgFeatures, ...userFeatures].includes(id);\n  }\n};\nvar checkBillingAuthorization = (params, options) => {\n  const { features, plans } = options;\n  if (params.feature && features) {\n    return checkForFeatureOrPlan(features, params.feature);\n  }\n  if (params.plan && plans) {\n    return checkForFeatureOrPlan(plans, params.plan);\n  }\n  return null;\n};\nvar splitByScope = (fea) => {\n  const features = fea ? fea.split(\",\").map((f) => f.trim()) : [];\n  return {\n    org: features.filter((f) => f.split(\":\")[0].includes(\"o\")).map((f) => f.split(\":\")[1]),\n    user: features.filter((f) => f.split(\":\")[0].includes(\"u\")).map((f) => f.split(\":\")[1])\n  };\n};\nvar validateReverificationConfig = (config) => {\n  if (!config) {\n    return false;\n  }\n  const convertConfigToObject = (config2) => {\n    if (typeof config2 === \"string\") {\n      return TYPES_TO_OBJECTS[config2];\n    }\n    return config2;\n  };\n  const isValidStringValue = typeof config === \"string\" && isValidVerificationType(config);\n  const isValidObjectValue = typeof config === \"object\" && isValidLevel(config.level) && isValidMaxAge(config.afterMinutes);\n  if (isValidStringValue || isValidObjectValue) {\n    return convertConfigToObject.bind(null, config);\n  }\n  return false;\n};\nvar checkReverificationAuthorization = (params, { factorVerificationAge }) => {\n  if (!params.reverification || !factorVerificationAge) {\n    return null;\n  }\n  const isValidReverification = validateReverificationConfig(params.reverification);\n  if (!isValidReverification) {\n    return null;\n  }\n  const { level, afterMinutes } = isValidReverification();\n  const [factor1Age, factor2Age] = factorVerificationAge;\n  const isValidFactor1 = factor1Age !== -1 ? afterMinutes > factor1Age : null;\n  const isValidFactor2 = factor2Age !== -1 ? afterMinutes > factor2Age : null;\n  switch (level) {\n    case \"first_factor\":\n      return isValidFactor1;\n    case \"second_factor\":\n      return factor2Age !== -1 ? isValidFactor2 : isValidFactor1;\n    case \"multi_factor\":\n      return factor2Age === -1 ? isValidFactor1 : isValidFactor1 && isValidFactor2;\n  }\n};\nvar createCheckAuthorization = (options) => {\n  return (params) => {\n    if (!options.userId) {\n      return false;\n    }\n    const billingAuthorization = checkBillingAuthorization(params, options);\n    const orgAuthorization = checkOrgAuthorization(params, options);\n    const reverificationAuthorization = checkReverificationAuthorization(params, options);\n    if ([billingAuthorization || orgAuthorization, reverificationAuthorization].some((a) => a === null)) {\n      return [billingAuthorization || orgAuthorization, reverificationAuthorization].some((a) => a === true);\n    }\n    return [billingAuthorization || orgAuthorization, reverificationAuthorization].every((a) => a === true);\n  };\n};\nvar resolveAuthState = ({\n  authObject: {\n    sessionId,\n    sessionStatus,\n    userId,\n    actor,\n    orgId,\n    orgRole,\n    orgSlug,\n    signOut,\n    getToken,\n    has,\n    sessionClaims\n  },\n  options: { treatPendingAsSignedOut = true }\n}) => {\n  if (sessionId === void 0 && userId === void 0) {\n    return {\n      isLoaded: false,\n      isSignedIn: void 0,\n      sessionId,\n      sessionClaims: void 0,\n      userId,\n      actor: void 0,\n      orgId: void 0,\n      orgRole: void 0,\n      orgSlug: void 0,\n      has: void 0,\n      signOut,\n      getToken\n    };\n  }\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      sessionClaims: null,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  if (treatPendingAsSignedOut && sessionStatus === \"pending\") {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId: null,\n      userId: null,\n      sessionClaims: null,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!sessionClaims && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      sessionClaims,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!sessionClaims && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      sessionClaims,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has,\n      signOut,\n      getToken\n    };\n  }\n};\n\n\n//# sourceMappingURL=chunk-3CN5LOSN.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3CN5LOSN.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isStaging: () => (/* binding */ isStaging)\n/* harmony export */ });\n// src/utils/instance.ts\nfunction isStaging(frontendApi) {\n  return frontendApi.endsWith(\".lclstage.dev\") || frontendApi.endsWith(\".stgstage.dev\") || frontendApi.endsWith(\".clerkstage.dev\") || frontendApi.endsWith(\".accountsstage.dev\");\n}\n\n\n//# sourceMappingURL=chunk-3TMSNP4L.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstM1RNU05QNEwubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstM1RNU05QNEwubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9pbnN0YW5jZS50c1xuZnVuY3Rpb24gaXNTdGFnaW5nKGZyb250ZW5kQXBpKSB7XG4gIHJldHVybiBmcm9udGVuZEFwaS5lbmRzV2l0aChcIi5sY2xzdGFnZS5kZXZcIikgfHwgZnJvbnRlbmRBcGkuZW5kc1dpdGgoXCIuc3Rnc3RhZ2UuZGV2XCIpIHx8IGZyb250ZW5kQXBpLmVuZHNXaXRoKFwiLmNsZXJrc3RhZ2UuZGV2XCIpIHx8IGZyb250ZW5kQXBpLmVuZHNXaXRoKFwiLmFjY291bnRzc3RhZ2UuZGV2XCIpO1xufVxuXG5leHBvcnQge1xuICBpc1N0YWdpbmdcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay0zVE1TTlA0TC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-43A5F2IE.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-43A5F2IE.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isReverificationHint: () => (/* binding */ isReverificationHint),\n/* harmony export */   reverificationError: () => (/* binding */ reverificationError),\n/* harmony export */   reverificationErrorResponse: () => (/* binding */ reverificationErrorResponse)\n/* harmony export */ });\n// src/authorization-errors.ts\nvar REVERIFICATION_REASON = \"reverification-error\";\nvar reverificationError = (missingConfig) => ({\n  clerk_error: {\n    type: \"forbidden\",\n    reason: REVERIFICATION_REASON,\n    metadata: {\n      reverification: missingConfig\n    }\n  }\n});\nvar reverificationErrorResponse = (...args) => new Response(JSON.stringify(reverificationError(...args)), {\n  status: 403\n});\nvar isReverificationHint = (result) => {\n  return result && typeof result === \"object\" && \"clerk_error\" in result && result.clerk_error?.type === \"forbidden\" && result.clerk_error?.reason === REVERIFICATION_REASON;\n};\n\n\n//# sourceMappingURL=chunk-43A5F2IE.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNDNBNUYySUUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay00M0E1RjJJRS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2F1dGhvcml6YXRpb24tZXJyb3JzLnRzXG52YXIgUkVWRVJJRklDQVRJT05fUkVBU09OID0gXCJyZXZlcmlmaWNhdGlvbi1lcnJvclwiO1xudmFyIHJldmVyaWZpY2F0aW9uRXJyb3IgPSAobWlzc2luZ0NvbmZpZykgPT4gKHtcbiAgY2xlcmtfZXJyb3I6IHtcbiAgICB0eXBlOiBcImZvcmJpZGRlblwiLFxuICAgIHJlYXNvbjogUkVWRVJJRklDQVRJT05fUkVBU09OLFxuICAgIG1ldGFkYXRhOiB7XG4gICAgICByZXZlcmlmaWNhdGlvbjogbWlzc2luZ0NvbmZpZ1xuICAgIH1cbiAgfVxufSk7XG52YXIgcmV2ZXJpZmljYXRpb25FcnJvclJlc3BvbnNlID0gKC4uLmFyZ3MpID0+IG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeShyZXZlcmlmaWNhdGlvbkVycm9yKC4uLmFyZ3MpKSwge1xuICBzdGF0dXM6IDQwM1xufSk7XG52YXIgaXNSZXZlcmlmaWNhdGlvbkhpbnQgPSAocmVzdWx0KSA9PiB7XG4gIHJldHVybiByZXN1bHQgJiYgdHlwZW9mIHJlc3VsdCA9PT0gXCJvYmplY3RcIiAmJiBcImNsZXJrX2Vycm9yXCIgaW4gcmVzdWx0ICYmIHJlc3VsdC5jbGVya19lcnJvcj8udHlwZSA9PT0gXCJmb3JiaWRkZW5cIiAmJiByZXN1bHQuY2xlcmtfZXJyb3I/LnJlYXNvbiA9PT0gUkVWRVJJRklDQVRJT05fUkVBU09OO1xufTtcblxuZXhwb3J0IHtcbiAgcmV2ZXJpZmljYXRpb25FcnJvcixcbiAgcmV2ZXJpZmljYXRpb25FcnJvclJlc3BvbnNlLFxuICBpc1JldmVyaWZpY2F0aW9uSGludFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTQzQTVGMklFLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-43A5F2IE.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __export: () => (/* binding */ __export),\n/* harmony export */   __privateAdd: () => (/* binding */ __privateAdd),\n/* harmony export */   __privateGet: () => (/* binding */ __privateGet),\n/* harmony export */   __privateMethod: () => (/* binding */ __privateMethod),\n/* harmony export */   __privateSet: () => (/* binding */ __privateSet),\n/* harmony export */   __reExport: () => (/* binding */ __reExport)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\n\n\n//# sourceMappingURL=chunk-7ELT755Q.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstN0VMVDc1NVEubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrQ0FBa0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw0RkFBNEY7QUFDekg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay03RUxUNzU1US5tanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX190eXBlRXJyb3IgPSAobXNnKSA9PiB7XG4gIHRocm93IFR5cGVFcnJvcihtc2cpO1xufTtcbnZhciBfX2V4cG9ydCA9ICh0YXJnZXQsIGFsbCkgPT4ge1xuICBmb3IgKHZhciBuYW1lIGluIGFsbClcbiAgICBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCB7IGdldDogYWxsW25hbWVdLCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xufTtcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XG4gIGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBmb3IgKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpXG4gICAgICBpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KVxuICAgICAgICBfX2RlZlByb3AodG8sIGtleSwgeyBnZXQ6ICgpID0+IGZyb21ba2V5XSwgZW51bWVyYWJsZTogIShkZXNjID0gX19nZXRPd25Qcm9wRGVzYyhmcm9tLCBrZXkpKSB8fCBkZXNjLmVudW1lcmFibGUgfSk7XG4gIH1cbiAgcmV0dXJuIHRvO1xufTtcbnZhciBfX3JlRXhwb3J0ID0gKHRhcmdldCwgbW9kLCBzZWNvbmRUYXJnZXQpID0+IChfX2NvcHlQcm9wcyh0YXJnZXQsIG1vZCwgXCJkZWZhdWx0XCIpLCBzZWNvbmRUYXJnZXQgJiYgX19jb3B5UHJvcHMoc2Vjb25kVGFyZ2V0LCBtb2QsIFwiZGVmYXVsdFwiKSk7XG52YXIgX19hY2Nlc3NDaGVjayA9IChvYmosIG1lbWJlciwgbXNnKSA9PiBtZW1iZXIuaGFzKG9iaikgfHwgX190eXBlRXJyb3IoXCJDYW5ub3QgXCIgKyBtc2cpO1xudmFyIF9fcHJpdmF0ZUdldCA9IChvYmosIG1lbWJlciwgZ2V0dGVyKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJyZWFkIGZyb20gcHJpdmF0ZSBmaWVsZFwiKSwgZ2V0dGVyID8gZ2V0dGVyLmNhbGwob2JqKSA6IG1lbWJlci5nZXQob2JqKSk7XG52YXIgX19wcml2YXRlQWRkID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSkgPT4gbWVtYmVyLmhhcyhvYmopID8gX190eXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpIDogbWVtYmVyIGluc3RhbmNlb2YgV2Vha1NldCA/IG1lbWJlci5hZGQob2JqKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSk7XG52YXIgX19wcml2YXRlU2V0ID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSwgc2V0dGVyKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJ3cml0ZSB0byBwcml2YXRlIGZpZWxkXCIpLCBzZXR0ZXIgPyBzZXR0ZXIuY2FsbChvYmosIHZhbHVlKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSksIHZhbHVlKTtcbnZhciBfX3ByaXZhdGVNZXRob2QgPSAob2JqLCBtZW1iZXIsIG1ldGhvZCkgPT4gKF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwiYWNjZXNzIHByaXZhdGUgbWV0aG9kXCIpLCBtZXRob2QpO1xuXG5leHBvcnQge1xuICBfX2V4cG9ydCxcbiAgX19yZUV4cG9ydCxcbiAgX19wcml2YXRlR2V0LFxuICBfX3ByaXZhdGVBZGQsXG4gIF9fcHJpdmF0ZVNldCxcbiAgX19wcml2YXRlTWV0aG9kXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstN0VMVDc1NVEubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noop: () => (/* binding */ noop)\n/* harmony export */ });\n// src/utils/noop.ts\nvar noop = (..._args) => {\n};\n\n\n//# sourceMappingURL=chunk-7FNX7RWY.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstN0ZOWDdSV1kubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTdGTlg3UldZLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvbm9vcC50c1xudmFyIG5vb3AgPSAoLi4uX2FyZ3MpID0+IHtcbn07XG5cbmV4cG9ydCB7XG4gIG5vb3Bcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay03Rk5YN1JXWS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDevelopmentEnvironment: () => (/* binding */ isDevelopmentEnvironment),\n/* harmony export */   isProductionEnvironment: () => (/* binding */ isProductionEnvironment),\n/* harmony export */   isTestEnvironment: () => (/* binding */ isTestEnvironment)\n/* harmony export */ });\n// src/utils/runtimeEnvironment.ts\nvar isDevelopmentEnvironment = () => {\n  try {\n    return \"development\" === \"development\";\n  } catch {\n  }\n  return false;\n};\nvar isTestEnvironment = () => {\n  try {\n    return \"development\" === \"test\";\n  } catch {\n  }\n  return false;\n};\nvar isProductionEnvironment = () => {\n  try {\n    return \"development\" === \"production\";\n  } catch {\n  }\n  return false;\n};\n\n\n//# sourceMappingURL=chunk-7HPDNZ3R.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstN0hQRE5aM1IubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBb0I7QUFDL0IsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQW9CO0FBQy9CLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFvQjtBQUMvQixJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay03SFBETlozUi5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL3J1bnRpbWVFbnZpcm9ubWVudC50c1xudmFyIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIjtcbiAgfSBjYXRjaCB7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcbnZhciBpc1Rlc3RFbnZpcm9ubWVudCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwidGVzdFwiO1xuICB9IGNhdGNoIHtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xudmFyIGlzUHJvZHVjdGlvbkVudmlyb25tZW50ID0gKCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCI7XG4gIH0gY2F0Y2gge1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCxcbiAgaXNUZXN0RW52aXJvbm1lbnQsXG4gIGlzUHJvZHVjdGlvbkVudmlyb25tZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstN0hQRE5aM1IubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7QJ2QTJL.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-7QJ2QTJL.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeferredPromise: () => (/* binding */ createDeferredPromise)\n/* harmony export */ });\n/* harmony import */ var _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7FNX7RWY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\");\n\n\n// src/utils/createDeferredPromise.ts\nvar createDeferredPromise = () => {\n  let resolve = _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_0__.noop;\n  let reject = _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_0__.noop;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve, reject };\n};\n\n\n//# sourceMappingURL=chunk-7QJ2QTJL.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstN1FKMlFUSkwubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRThCOztBQUU5QjtBQUNBO0FBQ0EsZ0JBQWdCLHFEQUFJO0FBQ3BCLGVBQWUscURBQUk7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILFdBQVc7QUFDWDs7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstN1FKMlFUSkwubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIG5vb3Bcbn0gZnJvbSBcIi4vY2h1bmstN0ZOWDdSV1kubWpzXCI7XG5cbi8vIHNyYy91dGlscy9jcmVhdGVEZWZlcnJlZFByb21pc2UudHNcbnZhciBjcmVhdGVEZWZlcnJlZFByb21pc2UgPSAoKSA9PiB7XG4gIGxldCByZXNvbHZlID0gbm9vcDtcbiAgbGV0IHJlamVjdCA9IG5vb3A7XG4gIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICByZXNvbHZlID0gcmVzO1xuICAgIHJlamVjdCA9IHJlajtcbiAgfSk7XG4gIHJldHVybiB7IHByb21pc2UsIHJlc29sdmUsIHJlamVjdCB9O1xufTtcblxuZXhwb3J0IHtcbiAgY3JlYXRlRGVmZXJyZWRQcm9taXNlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstN1FKMlFUSkwubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7QJ2QTJL.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-ARQUL5DC.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-ARQUL5DC.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allSettled: () => (/* binding */ allSettled),\n/* harmony export */   fastDeepMergeAndKeep: () => (/* binding */ fastDeepMergeAndKeep),\n/* harmony export */   fastDeepMergeAndReplace: () => (/* binding */ fastDeepMergeAndReplace),\n/* harmony export */   logErrorInDevMode: () => (/* binding */ logErrorInDevMode)\n/* harmony export */ });\n/* harmony import */ var _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7HPDNZ3R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs\");\n\n\n// src/utils/allSettled.ts\nfunction allSettled(iterable) {\n  const promises = Array.from(iterable).map(\n    (p) => p.then(\n      (value) => ({ status: \"fulfilled\", value }),\n      (reason) => ({ status: \"rejected\", reason })\n    )\n  );\n  return Promise.all(promises);\n}\n\n// src/utils/logErrorInDevMode.ts\nvar logErrorInDevMode = (message) => {\n  if ((0,_chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentEnvironment)()) {\n    console.error(`Clerk: ${message}`);\n  }\n};\n\n// src/utils/fastDeepMerge.ts\nvar fastDeepMergeAndReplace = (source, target) => {\n  if (!source || !target) {\n    return;\n  }\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key) && source[key] !== null && typeof source[key] === `object`) {\n      if (target[key] === void 0) {\n        target[key] = new (Object.getPrototypeOf(source[key])).constructor();\n      }\n      fastDeepMergeAndReplace(source[key], target[key]);\n    } else if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\nvar fastDeepMergeAndKeep = (source, target) => {\n  if (!source || !target) {\n    return;\n  }\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key) && source[key] !== null && typeof source[key] === `object`) {\n      if (target[key] === void 0) {\n        target[key] = new (Object.getPrototypeOf(source[key])).constructor();\n      }\n      fastDeepMergeAndKeep(source[key], target[key]);\n    } else if (Object.prototype.hasOwnProperty.call(source, key) && target[key] === void 0) {\n      target[key] = source[key];\n    }\n  }\n};\n\n\n//# sourceMappingURL=chunk-ARQUL5DC.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstQVJRVUw1REMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRThCOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQscUJBQXFCLDRCQUE0QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSw2RUFBd0I7QUFDOUIsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBT0U7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUFSUVVMNURDLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc0RldmVsb3BtZW50RW52aXJvbm1lbnRcbn0gZnJvbSBcIi4vY2h1bmstN0hQRE5aM1IubWpzXCI7XG5cbi8vIHNyYy91dGlscy9hbGxTZXR0bGVkLnRzXG5mdW5jdGlvbiBhbGxTZXR0bGVkKGl0ZXJhYmxlKSB7XG4gIGNvbnN0IHByb21pc2VzID0gQXJyYXkuZnJvbShpdGVyYWJsZSkubWFwKFxuICAgIChwKSA9PiBwLnRoZW4oXG4gICAgICAodmFsdWUpID0+ICh7IHN0YXR1czogXCJmdWxmaWxsZWRcIiwgdmFsdWUgfSksXG4gICAgICAocmVhc29uKSA9PiAoeyBzdGF0dXM6IFwicmVqZWN0ZWRcIiwgcmVhc29uIH0pXG4gICAgKVxuICApO1xuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufVxuXG4vLyBzcmMvdXRpbHMvbG9nRXJyb3JJbkRldk1vZGUudHNcbnZhciBsb2dFcnJvckluRGV2TW9kZSA9IChtZXNzYWdlKSA9PiB7XG4gIGlmIChpc0RldmVsb3BtZW50RW52aXJvbm1lbnQoKSkge1xuICAgIGNvbnNvbGUuZXJyb3IoYENsZXJrOiAke21lc3NhZ2V9YCk7XG4gIH1cbn07XG5cbi8vIHNyYy91dGlscy9mYXN0RGVlcE1lcmdlLnRzXG52YXIgZmFzdERlZXBNZXJnZUFuZFJlcGxhY2UgPSAoc291cmNlLCB0YXJnZXQpID0+IHtcbiAgaWYgKCFzb3VyY2UgfHwgIXRhcmdldCkge1xuICAgIHJldHVybjtcbiAgfVxuICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSAmJiBzb3VyY2Vba2V5XSAhPT0gbnVsbCAmJiB0eXBlb2Ygc291cmNlW2tleV0gPT09IGBvYmplY3RgKSB7XG4gICAgICBpZiAodGFyZ2V0W2tleV0gPT09IHZvaWQgMCkge1xuICAgICAgICB0YXJnZXRba2V5XSA9IG5ldyAoT2JqZWN0LmdldFByb3RvdHlwZU9mKHNvdXJjZVtrZXldKSkuY29uc3RydWN0b3IoKTtcbiAgICAgIH1cbiAgICAgIGZhc3REZWVwTWVyZ2VBbmRSZXBsYWNlKHNvdXJjZVtrZXldLCB0YXJnZXRba2V5XSk7XG4gICAgfSBlbHNlIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgfVxufTtcbnZhciBmYXN0RGVlcE1lcmdlQW5kS2VlcCA9IChzb3VyY2UsIHRhcmdldCkgPT4ge1xuICBpZiAoIXNvdXJjZSB8fCAhdGFyZ2V0KSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGZvciAoY29uc3Qga2V5IGluIHNvdXJjZSkge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpICYmIHNvdXJjZVtrZXldICE9PSBudWxsICYmIHR5cGVvZiBzb3VyY2Vba2V5XSA9PT0gYG9iamVjdGApIHtcbiAgICAgIGlmICh0YXJnZXRba2V5XSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHRhcmdldFtrZXldID0gbmV3IChPYmplY3QuZ2V0UHJvdG90eXBlT2Yoc291cmNlW2tleV0pKS5jb25zdHJ1Y3RvcigpO1xuICAgICAgfVxuICAgICAgZmFzdERlZXBNZXJnZUFuZEtlZXAoc291cmNlW2tleV0sIHRhcmdldFtrZXldKTtcbiAgICB9IGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkgJiYgdGFyZ2V0W2tleV0gPT09IHZvaWQgMCkge1xuICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCB7XG4gIGFsbFNldHRsZWQsXG4gIGxvZ0Vycm9ySW5EZXZNb2RlLFxuICBmYXN0RGVlcE1lcmdlQW5kUmVwbGFjZSxcbiAgZmFzdERlZXBNZXJnZUFuZEtlZXBcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1BUlFVTDVEQy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-ARQUL5DC.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n// src/logger.ts\nvar loggedMessages = /* @__PURE__ */ new Set();\nvar logger = {\n  /**\n   * A custom logger that ensures messages are logged only once.\n   * Reduces noise and duplicated messages when logs are in a hot codepath.\n   */\n  warnOnce: (msg) => {\n    if (loggedMessages.has(msg)) {\n      return;\n    }\n    loggedMessages.add(msg);\n    console.warn(msg);\n  },\n  logOnce: (msg) => {\n    if (loggedMessages.has(msg)) {\n      return;\n    }\n    console.log(msg);\n    loggedMessages.add(msg);\n  }\n};\n\n\n//# sourceMappingURL=chunk-CYDR2ZSA.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstQ1lEUjJaU0EubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1DWURSMlpTQS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xvZ2dlci50c1xudmFyIGxvZ2dlZE1lc3NhZ2VzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbnZhciBsb2dnZXIgPSB7XG4gIC8qKlxuICAgKiBBIGN1c3RvbSBsb2dnZXIgdGhhdCBlbnN1cmVzIG1lc3NhZ2VzIGFyZSBsb2dnZWQgb25seSBvbmNlLlxuICAgKiBSZWR1Y2VzIG5vaXNlIGFuZCBkdXBsaWNhdGVkIG1lc3NhZ2VzIHdoZW4gbG9ncyBhcmUgaW4gYSBob3QgY29kZXBhdGguXG4gICAqL1xuICB3YXJuT25jZTogKG1zZykgPT4ge1xuICAgIGlmIChsb2dnZWRNZXNzYWdlcy5oYXMobXNnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsb2dnZWRNZXNzYWdlcy5hZGQobXNnKTtcbiAgICBjb25zb2xlLndhcm4obXNnKTtcbiAgfSxcbiAgbG9nT25jZTogKG1zZykgPT4ge1xuICAgIGlmIChsb2dnZWRNZXNzYWdlcy5oYXMobXNnKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhtc2cpO1xuICAgIGxvZ2dlZE1lc3NhZ2VzLmFkZChtc2cpO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBsb2dnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1DWURSMlpTQS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-GGFRMWFO.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-GGFRMWFO.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: () => (/* binding */ camelToSnake),\n/* harmony export */   deepCamelToSnake: () => (/* binding */ deepCamelToSnake),\n/* harmony export */   deepSnakeToCamel: () => (/* binding */ deepSnakeToCamel),\n/* harmony export */   getNonUndefinedValues: () => (/* binding */ getNonUndefinedValues),\n/* harmony export */   isIPV4Address: () => (/* binding */ isIPV4Address),\n/* harmony export */   isTruthy: () => (/* binding */ isTruthy),\n/* harmony export */   snakeToCamel: () => (/* binding */ snakeToCamel),\n/* harmony export */   titleize: () => (/* binding */ titleize),\n/* harmony export */   toSentence: () => (/* binding */ toSentence)\n/* harmony export */ });\n// src/underscore.ts\nvar toSentence = (items) => {\n  if (items.length == 0) {\n    return \"\";\n  }\n  if (items.length == 1) {\n    return items[0];\n  }\n  let sentence = items.slice(0, -1).join(\", \");\n  sentence += `, or ${items.slice(-1)}`;\n  return sentence;\n};\nvar IP_V4_ADDRESS_REGEX = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\nfunction isIPV4Address(str) {\n  return IP_V4_ADDRESS_REGEX.test(str || \"\");\n}\nfunction titleize(str) {\n  const s = str || \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\nfunction snakeToCamel(str) {\n  return str ? str.replace(/([-_][a-z])/g, (match) => match.toUpperCase().replace(/-|_/, \"\")) : \"\";\n}\nfunction camelToSnake(str) {\n  return str ? str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`) : \"\";\n}\nvar createDeepObjectTransformer = (transform) => {\n  const deepTransform = (obj) => {\n    if (!obj) {\n      return obj;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map((el) => {\n        if (typeof el === \"object\" || Array.isArray(el)) {\n          return deepTransform(el);\n        }\n        return el;\n      });\n    }\n    const copy = { ...obj };\n    const keys = Object.keys(copy);\n    for (const oldName of keys) {\n      const newName = transform(oldName.toString());\n      if (newName !== oldName) {\n        copy[newName] = copy[oldName];\n        delete copy[oldName];\n      }\n      if (typeof copy[newName] === \"object\") {\n        copy[newName] = deepTransform(copy[newName]);\n      }\n    }\n    return copy;\n  };\n  return deepTransform;\n};\nvar deepCamelToSnake = createDeepObjectTransformer(camelToSnake);\nvar deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);\nfunction isTruthy(value) {\n  if (typeof value === `boolean`) {\n    return value;\n  }\n  if (value === void 0 || value === null) {\n    return false;\n  }\n  if (typeof value === `string`) {\n    if (value.toLowerCase() === `true`) {\n      return true;\n    }\n    if (value.toLowerCase() === `false`) {\n      return false;\n    }\n  }\n  const number = parseInt(value, 10);\n  if (isNaN(number)) {\n    return false;\n  }\n  if (number > 0) {\n    return true;\n  }\n  return false;\n}\nfunction getNonUndefinedValues(obj) {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== void 0) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n\n\n//# sourceMappingURL=chunk-GGFRMWFO.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstR0dGUk1XRk8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnQkFBZ0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxxQkFBcUI7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7QUFDUDs7QUFZRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstR0dGUk1XRk8ubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91bmRlcnNjb3JlLnRzXG52YXIgdG9TZW50ZW5jZSA9IChpdGVtcykgPT4ge1xuICBpZiAoaXRlbXMubGVuZ3RoID09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICBpZiAoaXRlbXMubGVuZ3RoID09IDEpIHtcbiAgICByZXR1cm4gaXRlbXNbMF07XG4gIH1cbiAgbGV0IHNlbnRlbmNlID0gaXRlbXMuc2xpY2UoMCwgLTEpLmpvaW4oXCIsIFwiKTtcbiAgc2VudGVuY2UgKz0gYCwgb3IgJHtpdGVtcy5zbGljZSgtMSl9YDtcbiAgcmV0dXJuIHNlbnRlbmNlO1xufTtcbnZhciBJUF9WNF9BRERSRVNTX1JFR0VYID0gL14oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KVxcLigyNVswLTVdfDJbMC00XVswLTldfFswMV0/WzAtOV1bMC05XT8pXFwuKDI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPylcXC4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSQvO1xuZnVuY3Rpb24gaXNJUFY0QWRkcmVzcyhzdHIpIHtcbiAgcmV0dXJuIElQX1Y0X0FERFJFU1NfUkVHRVgudGVzdChzdHIgfHwgXCJcIik7XG59XG5mdW5jdGlvbiB0aXRsZWl6ZShzdHIpIHtcbiAgY29uc3QgcyA9IHN0ciB8fCBcIlwiO1xuICByZXR1cm4gcy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHMuc2xpY2UoMSk7XG59XG5mdW5jdGlvbiBzbmFrZVRvQ2FtZWwoc3RyKSB7XG4gIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZSgvKFstX11bYS16XSkvZywgKG1hdGNoKSA9PiBtYXRjaC50b1VwcGVyQ2FzZSgpLnJlcGxhY2UoLy18Xy8sIFwiXCIpKSA6IFwiXCI7XG59XG5mdW5jdGlvbiBjYW1lbFRvU25ha2Uoc3RyKSB7XG4gIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZSgvW0EtWl0vZywgKGxldHRlcikgPT4gYF8ke2xldHRlci50b0xvd2VyQ2FzZSgpfWApIDogXCJcIjtcbn1cbnZhciBjcmVhdGVEZWVwT2JqZWN0VHJhbnNmb3JtZXIgPSAodHJhbnNmb3JtKSA9PiB7XG4gIGNvbnN0IGRlZXBUcmFuc2Zvcm0gPSAob2JqKSA9PiB7XG4gICAgaWYgKCFvYmopIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgIHJldHVybiBvYmoubWFwKChlbCkgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIGVsID09PSBcIm9iamVjdFwiIHx8IEFycmF5LmlzQXJyYXkoZWwpKSB7XG4gICAgICAgICAgcmV0dXJuIGRlZXBUcmFuc2Zvcm0oZWwpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbDtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBjb3B5ID0geyAuLi5vYmogfTtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoY29weSk7XG4gICAgZm9yIChjb25zdCBvbGROYW1lIG9mIGtleXMpIHtcbiAgICAgIGNvbnN0IG5ld05hbWUgPSB0cmFuc2Zvcm0ob2xkTmFtZS50b1N0cmluZygpKTtcbiAgICAgIGlmIChuZXdOYW1lICE9PSBvbGROYW1lKSB7XG4gICAgICAgIGNvcHlbbmV3TmFtZV0gPSBjb3B5W29sZE5hbWVdO1xuICAgICAgICBkZWxldGUgY29weVtvbGROYW1lXTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgY29weVtuZXdOYW1lXSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBjb3B5W25ld05hbWVdID0gZGVlcFRyYW5zZm9ybShjb3B5W25ld05hbWVdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvcHk7XG4gIH07XG4gIHJldHVybiBkZWVwVHJhbnNmb3JtO1xufTtcbnZhciBkZWVwQ2FtZWxUb1NuYWtlID0gY3JlYXRlRGVlcE9iamVjdFRyYW5zZm9ybWVyKGNhbWVsVG9TbmFrZSk7XG52YXIgZGVlcFNuYWtlVG9DYW1lbCA9IGNyZWF0ZURlZXBPYmplY3RUcmFuc2Zvcm1lcihzbmFrZVRvQ2FtZWwpO1xuZnVuY3Rpb24gaXNUcnV0aHkodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gYGJvb2xlYW5gKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmICh2YWx1ZSA9PT0gdm9pZCAwIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09IGBzdHJpbmdgKSB7XG4gICAgaWYgKHZhbHVlLnRvTG93ZXJDYXNlKCkgPT09IGB0cnVlYCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmICh2YWx1ZS50b0xvd2VyQ2FzZSgpID09PSBgZmFsc2VgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGNvbnN0IG51bWJlciA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gIGlmIChpc05hTihudW1iZXIpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChudW1iZXIgPiAwKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gZ2V0Tm9uVW5kZWZpbmVkVmFsdWVzKG9iaikge1xuICByZXR1cm4gT2JqZWN0LmVudHJpZXMob2JqKS5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgaWYgKHZhbHVlICE9PSB2b2lkIDApIHtcbiAgICAgIGFjY1trZXldID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbn1cblxuZXhwb3J0IHtcbiAgdG9TZW50ZW5jZSxcbiAgaXNJUFY0QWRkcmVzcyxcbiAgdGl0bGVpemUsXG4gIHNuYWtlVG9DYW1lbCxcbiAgY2FtZWxUb1NuYWtlLFxuICBkZWVwQ2FtZWxUb1NuYWtlLFxuICBkZWVwU25ha2VUb0NhbWVsLFxuICBpc1RydXRoeSxcbiAgZ2V0Tm9uVW5kZWZpbmVkVmFsdWVzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstR0dGUk1XRk8ubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-GGFRMWFO.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: () => (/* binding */ CURRENT_DEV_INSTANCE_SUFFIXES),\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: () => (/* binding */ DEV_OR_STAGING_SUFFIXES),\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: () => (/* binding */ LEGACY_DEV_INSTANCE_SUFFIXES),\n/* harmony export */   LOCAL_API_URL: () => (/* binding */ LOCAL_API_URL),\n/* harmony export */   LOCAL_ENV_SUFFIXES: () => (/* binding */ LOCAL_ENV_SUFFIXES),\n/* harmony export */   PROD_API_URL: () => (/* binding */ PROD_API_URL),\n/* harmony export */   STAGING_API_URL: () => (/* binding */ STAGING_API_URL),\n/* harmony export */   STAGING_ENV_SUFFIXES: () => (/* binding */ STAGING_ENV_SUFFIXES),\n/* harmony export */   iconImageUrl: () => (/* binding */ iconImageUrl)\n/* harmony export */ });\n// src/constants.ts\nvar LEGACY_DEV_INSTANCE_SUFFIXES = [\".lcl.dev\", \".lclstage.dev\", \".lclclerk.com\"];\nvar CURRENT_DEV_INSTANCE_SUFFIXES = [\".accounts.dev\", \".accountsstage.dev\", \".accounts.lclclerk.com\"];\nvar DEV_OR_STAGING_SUFFIXES = [\n  \".lcl.dev\",\n  \".stg.dev\",\n  \".lclstage.dev\",\n  \".stgstage.dev\",\n  \".dev.lclclerk.com\",\n  \".stg.lclclerk.com\",\n  \".accounts.lclclerk.com\",\n  \"accountsstage.dev\",\n  \"accounts.dev\"\n];\nvar LOCAL_ENV_SUFFIXES = [\".lcl.dev\", \"lclstage.dev\", \".lclclerk.com\", \".accounts.lclclerk.com\"];\nvar STAGING_ENV_SUFFIXES = [\".accountsstage.dev\"];\nvar LOCAL_API_URL = \"https://api.lclclerk.com\";\nvar STAGING_API_URL = \"https://api.clerkstage.dev\";\nvar PROD_API_URL = \"https://api.clerk.com\";\nfunction iconImageUrl(id, format = \"svg\") {\n  return `https://img.clerk.com/static/${id}.${format}`;\n}\n\n\n//# sourceMappingURL=chunk-I6MTSTOF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSTZNVFNUT0YubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsR0FBRyxHQUFHLE9BQU87QUFDdEQ7O0FBWUU7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUk2TVRTVE9GLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29uc3RhbnRzLnRzXG52YXIgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyA9IFtcIi5sY2wuZGV2XCIsIFwiLmxjbHN0YWdlLmRldlwiLCBcIi5sY2xjbGVyay5jb21cIl07XG52YXIgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMgPSBbXCIuYWNjb3VudHMuZGV2XCIsIFwiLmFjY291bnRzc3RhZ2UuZGV2XCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBERVZfT1JfU1RBR0lOR19TVUZGSVhFUyA9IFtcbiAgXCIubGNsLmRldlwiLFxuICBcIi5zdGcuZGV2XCIsXG4gIFwiLmxjbHN0YWdlLmRldlwiLFxuICBcIi5zdGdzdGFnZS5kZXZcIixcbiAgXCIuZGV2LmxjbGNsZXJrLmNvbVwiLFxuICBcIi5zdGcubGNsY2xlcmsuY29tXCIsXG4gIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiLFxuICBcImFjY291bnRzc3RhZ2UuZGV2XCIsXG4gIFwiYWNjb3VudHMuZGV2XCJcbl07XG52YXIgTE9DQUxfRU5WX1NVRkZJWEVTID0gW1wiLmxjbC5kZXZcIiwgXCJsY2xzdGFnZS5kZXZcIiwgXCIubGNsY2xlcmsuY29tXCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbnZhciBTVEFHSU5HX0VOVl9TVUZGSVhFUyA9IFtcIi5hY2NvdW50c3N0YWdlLmRldlwiXTtcbnZhciBMT0NBTF9BUElfVVJMID0gXCJodHRwczovL2FwaS5sY2xjbGVyay5jb21cIjtcbnZhciBTVEFHSU5HX0FQSV9VUkwgPSBcImh0dHBzOi8vYXBpLmNsZXJrc3RhZ2UuZGV2XCI7XG52YXIgUFJPRF9BUElfVVJMID0gXCJodHRwczovL2FwaS5jbGVyay5jb21cIjtcbmZ1bmN0aW9uIGljb25JbWFnZVVybChpZCwgZm9ybWF0ID0gXCJzdmdcIikge1xuICByZXR1cm4gYGh0dHBzOi8vaW1nLmNsZXJrLmNvbS9zdGF0aWMvJHtpZH0uJHtmb3JtYXR9YDtcbn1cblxuZXhwb3J0IHtcbiAgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyxcbiAgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLFxuICBMT0NBTF9FTlZfU1VGRklYRVMsXG4gIFNUQUdJTkdfRU5WX1NVRkZJWEVTLFxuICBMT0NBTF9BUElfVVJMLFxuICBTVEFHSU5HX0FQSV9VUkwsXG4gIFBST0RfQVBJX1VSTCxcbiAgaWNvbkltYWdlVXJsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstSTZNVFNUT0YubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IBXKDGSZ.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-IBXKDGSZ.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentOrganizationMembership: () => (/* binding */ getCurrentOrganizationMembership)\n/* harmony export */ });\n// src/organization.ts\nfunction getCurrentOrganizationMembership(organizationMemberships, organizationId) {\n  return organizationMemberships.find(\n    (organizationMembership) => organizationMembership.organization.id === organizationId\n  );\n}\n\n\n//# sourceMappingURL=chunk-IBXKDGSZ.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSUJYS0RHU1oubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUlCWEtER1NaLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvb3JnYW5pemF0aW9uLnRzXG5mdW5jdGlvbiBnZXRDdXJyZW50T3JnYW5pemF0aW9uTWVtYmVyc2hpcChvcmdhbml6YXRpb25NZW1iZXJzaGlwcywgb3JnYW5pemF0aW9uSWQpIHtcbiAgcmV0dXJuIG9yZ2FuaXphdGlvbk1lbWJlcnNoaXBzLmZpbmQoXG4gICAgKG9yZ2FuaXphdGlvbk1lbWJlcnNoaXApID0+IG9yZ2FuaXphdGlvbk1lbWJlcnNoaXAub3JnYW5pemF0aW9uLmlkID09PSBvcmdhbml6YXRpb25JZFxuICApO1xufVxuXG5leHBvcnQge1xuICBnZXRDdXJyZW50T3JnYW5pemF0aW9uTWVtYmVyc2hpcFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUlCWEtER1NaLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IBXKDGSZ.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* binding */ addClerkPrefix),\n/* harmony export */   cleanDoubleSlashes: () => (/* binding */ cleanDoubleSlashes),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* binding */ getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* binding */ getScriptUrl),\n/* harmony export */   hasLeadingSlash: () => (/* binding */ hasLeadingSlash),\n/* harmony export */   hasTrailingSlash: () => (/* binding */ hasTrailingSlash),\n/* harmony export */   isAbsoluteUrl: () => (/* binding */ isAbsoluteUrl),\n/* harmony export */   isCurrentDevAccountPortalOrigin: () => (/* binding */ isCurrentDevAccountPortalOrigin),\n/* harmony export */   isLegacyDevAccountPortalOrigin: () => (/* binding */ isLegacyDevAccountPortalOrigin),\n/* harmony export */   isNonEmptyURL: () => (/* binding */ isNonEmptyURL),\n/* harmony export */   joinURL: () => (/* binding */ joinURL),\n/* harmony export */   parseSearchParams: () => (/* binding */ parseSearchParams),\n/* harmony export */   stripScheme: () => (/* binding */ stripScheme),\n/* harmony export */   withLeadingSlash: () => (/* binding */ withLeadingSlash),\n/* harmony export */   withTrailingSlash: () => (/* binding */ withTrailingSlash),\n/* harmony export */   withoutLeadingSlash: () => (/* binding */ withoutLeadingSlash),\n/* harmony export */   withoutTrailingSlash: () => (/* binding */ withoutTrailingSlash)\n/* harmony export */ });\n/* harmony import */ var _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-3TMSNP4L.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n\n\n\n// src/url.ts\nfunction parseSearchParams(queryString = \"\") {\n  if (queryString.startsWith(\"?\")) {\n    queryString = queryString.slice(1);\n  }\n  return new URLSearchParams(queryString);\n}\nfunction stripScheme(url = \"\") {\n  return (url || \"\").replace(/^.+:\\/\\//, \"\");\n}\nfunction addClerkPrefix(str) {\n  if (!str) {\n    return \"\";\n  }\n  let regex;\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n  const stripped = str.replace(regex, \"\");\n  return `clerk.${stripped}`;\n}\nvar getClerkJsMajorVersionOrTag = (frontendApi, version) => {\n  if (!version && (0,_chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_0__.isStaging)(frontendApi)) {\n    return \"canary\";\n  }\n  if (!version) {\n    return \"latest\";\n  }\n  return version.split(\".\")[0] || \"latest\";\n};\nvar getScriptUrl = (frontendApi, { clerkJSVersion }) => {\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, \"\");\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\nfunction isLegacyDevAccountPortalOrigin(host) {\n  return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.LEGACY_DEV_INSTANCE_SUFFIXES.some((legacyDevSuffix) => {\n    return host.startsWith(\"accounts.\") && host.endsWith(legacyDevSuffix);\n  });\n}\nfunction isCurrentDevAccountPortalOrigin(host) {\n  return _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_1__.CURRENT_DEV_INSTANCE_SUFFIXES.some((currentDevSuffix) => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith(\".clerk\" + currentDevSuffix);\n  });\n}\nvar TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return (s0.slice(0, -1) || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map((string_) => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nvar JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const segment of input.filter((url2) => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n  return url;\n}\nvar ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nvar isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);\n\n\n//# sourceMappingURL=chunk-IFTVZ2LQ.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSUZUVloyTFEubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFOEI7QUFJQTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0Esa0JBQWtCLDhEQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRDtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQix1QkFBdUIsd0JBQXdCO0FBQ3ZGO0FBQ0E7QUFDQSxTQUFTLDZFQUE0QjtBQUNyQztBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsU0FBUyw4RUFBNkI7QUFDdEM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxZQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFlBQVk7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxHQUFHO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBb0JFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1JRlRWWjJMUS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaXNTdGFnaW5nXG59IGZyb20gXCIuL2NodW5rLTNUTVNOUDRMLm1qc1wiO1xuaW1wb3J0IHtcbiAgQ1VSUkVOVF9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVNcbn0gZnJvbSBcIi4vY2h1bmstSTZNVFNUT0YubWpzXCI7XG5cbi8vIHNyYy91cmwudHNcbmZ1bmN0aW9uIHBhcnNlU2VhcmNoUGFyYW1zKHF1ZXJ5U3RyaW5nID0gXCJcIikge1xuICBpZiAocXVlcnlTdHJpbmcuc3RhcnRzV2l0aChcIj9cIikpIHtcbiAgICBxdWVyeVN0cmluZyA9IHF1ZXJ5U3RyaW5nLnNsaWNlKDEpO1xuICB9XG4gIHJldHVybiBuZXcgVVJMU2VhcmNoUGFyYW1zKHF1ZXJ5U3RyaW5nKTtcbn1cbmZ1bmN0aW9uIHN0cmlwU2NoZW1lKHVybCA9IFwiXCIpIHtcbiAgcmV0dXJuICh1cmwgfHwgXCJcIikucmVwbGFjZSgvXi4rOlxcL1xcLy8sIFwiXCIpO1xufVxuZnVuY3Rpb24gYWRkQ2xlcmtQcmVmaXgoc3RyKSB7XG4gIGlmICghc3RyKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbiAgbGV0IHJlZ2V4O1xuICBpZiAoc3RyLm1hdGNoKC9eKGNsZXJrXFwuKStcXHcqJC8pKSB7XG4gICAgcmVnZXggPSAvKGNsZXJrXFwuKSooPz1jbGVya1xcLikvO1xuICB9IGVsc2UgaWYgKHN0ci5tYXRjaCgvXFwuY2xlcmsuYWNjb3VudHMvKSkge1xuICAgIHJldHVybiBzdHI7XG4gIH0gZWxzZSB7XG4gICAgcmVnZXggPSAvXihjbGVya1xcLikqL2dpO1xuICB9XG4gIGNvbnN0IHN0cmlwcGVkID0gc3RyLnJlcGxhY2UocmVnZXgsIFwiXCIpO1xuICByZXR1cm4gYGNsZXJrLiR7c3RyaXBwZWR9YDtcbn1cbnZhciBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcgPSAoZnJvbnRlbmRBcGksIHZlcnNpb24pID0+IHtcbiAgaWYgKCF2ZXJzaW9uICYmIGlzU3RhZ2luZyhmcm9udGVuZEFwaSkpIHtcbiAgICByZXR1cm4gXCJjYW5hcnlcIjtcbiAgfVxuICBpZiAoIXZlcnNpb24pIHtcbiAgICByZXR1cm4gXCJsYXRlc3RcIjtcbiAgfVxuICByZXR1cm4gdmVyc2lvbi5zcGxpdChcIi5cIilbMF0gfHwgXCJsYXRlc3RcIjtcbn07XG52YXIgZ2V0U2NyaXB0VXJsID0gKGZyb250ZW5kQXBpLCB7IGNsZXJrSlNWZXJzaW9uIH0pID0+IHtcbiAgY29uc3Qgbm9TY2hlbWVGcm9udGVuZEFwaSA9IGZyb250ZW5kQXBpLnJlcGxhY2UoL2h0dHAocyk/OlxcL1xcLy8sIFwiXCIpO1xuICBjb25zdCBtYWpvciA9IGdldENsZXJrSnNNYWpvclZlcnNpb25PclRhZyhmcm9udGVuZEFwaSwgY2xlcmtKU1ZlcnNpb24pO1xuICByZXR1cm4gYGh0dHBzOi8vJHtub1NjaGVtZUZyb250ZW5kQXBpfS9ucG0vQGNsZXJrL2NsZXJrLWpzQCR7Y2xlcmtKU1ZlcnNpb24gfHwgbWFqb3J9L2Rpc3QvY2xlcmsuYnJvd3Nlci5qc2A7XG59O1xuZnVuY3Rpb24gaXNMZWdhY3lEZXZBY2NvdW50UG9ydGFsT3JpZ2luKGhvc3QpIHtcbiAgcmV0dXJuIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVMuc29tZSgobGVnYWN5RGV2U3VmZml4KSA9PiB7XG4gICAgcmV0dXJuIGhvc3Quc3RhcnRzV2l0aChcImFjY291bnRzLlwiKSAmJiBob3N0LmVuZHNXaXRoKGxlZ2FjeURldlN1ZmZpeCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gaXNDdXJyZW50RGV2QWNjb3VudFBvcnRhbE9yaWdpbihob3N0KSB7XG4gIHJldHVybiBDVVJSRU5UX0RFVl9JTlNUQU5DRV9TVUZGSVhFUy5zb21lKChjdXJyZW50RGV2U3VmZml4KSA9PiB7XG4gICAgcmV0dXJuIGhvc3QuZW5kc1dpdGgoY3VycmVudERldlN1ZmZpeCkgJiYgIWhvc3QuZW5kc1dpdGgoXCIuY2xlcmtcIiArIGN1cnJlbnREZXZTdWZmaXgpO1xuICB9KTtcbn1cbnZhciBUUkFJTElOR19TTEFTSF9SRSA9IC9cXC8kfFxcL1xcP3xcXC8jLztcbmZ1bmN0aW9uIGhhc1RyYWlsaW5nU2xhc2goaW5wdXQgPSBcIlwiLCByZXNwZWN0UXVlcnlBbmRGcmFnbWVudCkge1xuICBpZiAoIXJlc3BlY3RRdWVyeUFuZEZyYWdtZW50KSB7XG4gICAgcmV0dXJuIGlucHV0LmVuZHNXaXRoKFwiL1wiKTtcbiAgfVxuICByZXR1cm4gVFJBSUxJTkdfU0xBU0hfUkUudGVzdChpbnB1dCk7XG59XG5mdW5jdGlvbiB3aXRoVHJhaWxpbmdTbGFzaChpbnB1dCA9IFwiXCIsIHJlc3BlY3RRdWVyeUFuZEZyYWdtZW50KSB7XG4gIGlmICghcmVzcGVjdFF1ZXJ5QW5kRnJhZ21lbnQpIHtcbiAgICByZXR1cm4gaW5wdXQuZW5kc1dpdGgoXCIvXCIpID8gaW5wdXQgOiBpbnB1dCArIFwiL1wiO1xuICB9XG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoKGlucHV0LCB0cnVlKSkge1xuICAgIHJldHVybiBpbnB1dCB8fCBcIi9cIjtcbiAgfVxuICBsZXQgcGF0aCA9IGlucHV0O1xuICBsZXQgZnJhZ21lbnQgPSBcIlwiO1xuICBjb25zdCBmcmFnbWVudEluZGV4ID0gaW5wdXQuaW5kZXhPZihcIiNcIik7XG4gIGlmIChmcmFnbWVudEluZGV4ID49IDApIHtcbiAgICBwYXRoID0gaW5wdXQuc2xpY2UoMCwgZnJhZ21lbnRJbmRleCk7XG4gICAgZnJhZ21lbnQgPSBpbnB1dC5zbGljZShmcmFnbWVudEluZGV4KTtcbiAgICBpZiAoIXBhdGgpIHtcbiAgICAgIHJldHVybiBmcmFnbWVudDtcbiAgICB9XG4gIH1cbiAgY29uc3QgW3MwLCAuLi5zXSA9IHBhdGguc3BsaXQoXCI/XCIpO1xuICByZXR1cm4gczAgKyBcIi9cIiArIChzLmxlbmd0aCA+IDAgPyBgPyR7cy5qb2luKFwiP1wiKX1gIDogXCJcIikgKyBmcmFnbWVudDtcbn1cbmZ1bmN0aW9uIHdpdGhvdXRUcmFpbGluZ1NsYXNoKGlucHV0ID0gXCJcIiwgcmVzcGVjdFF1ZXJ5QW5kRnJhZ21lbnQpIHtcbiAgaWYgKCFyZXNwZWN0UXVlcnlBbmRGcmFnbWVudCkge1xuICAgIHJldHVybiAoaGFzVHJhaWxpbmdTbGFzaChpbnB1dCkgPyBpbnB1dC5zbGljZSgwLCAtMSkgOiBpbnB1dCkgfHwgXCIvXCI7XG4gIH1cbiAgaWYgKCFoYXNUcmFpbGluZ1NsYXNoKGlucHV0LCB0cnVlKSkge1xuICAgIHJldHVybiBpbnB1dCB8fCBcIi9cIjtcbiAgfVxuICBsZXQgcGF0aCA9IGlucHV0O1xuICBsZXQgZnJhZ21lbnQgPSBcIlwiO1xuICBjb25zdCBmcmFnbWVudEluZGV4ID0gaW5wdXQuaW5kZXhPZihcIiNcIik7XG4gIGlmIChmcmFnbWVudEluZGV4ID49IDApIHtcbiAgICBwYXRoID0gaW5wdXQuc2xpY2UoMCwgZnJhZ21lbnRJbmRleCk7XG4gICAgZnJhZ21lbnQgPSBpbnB1dC5zbGljZShmcmFnbWVudEluZGV4KTtcbiAgfVxuICBjb25zdCBbczAsIC4uLnNdID0gcGF0aC5zcGxpdChcIj9cIik7XG4gIHJldHVybiAoczAuc2xpY2UoMCwgLTEpIHx8IFwiL1wiKSArIChzLmxlbmd0aCA+IDAgPyBgPyR7cy5qb2luKFwiP1wiKX1gIDogXCJcIikgKyBmcmFnbWVudDtcbn1cbmZ1bmN0aW9uIGhhc0xlYWRpbmdTbGFzaChpbnB1dCA9IFwiXCIpIHtcbiAgcmV0dXJuIGlucHV0LnN0YXJ0c1dpdGgoXCIvXCIpO1xufVxuZnVuY3Rpb24gd2l0aG91dExlYWRpbmdTbGFzaChpbnB1dCA9IFwiXCIpIHtcbiAgcmV0dXJuIChoYXNMZWFkaW5nU2xhc2goaW5wdXQpID8gaW5wdXQuc2xpY2UoMSkgOiBpbnB1dCkgfHwgXCIvXCI7XG59XG5mdW5jdGlvbiB3aXRoTGVhZGluZ1NsYXNoKGlucHV0ID0gXCJcIikge1xuICByZXR1cm4gaGFzTGVhZGluZ1NsYXNoKGlucHV0KSA/IGlucHV0IDogXCIvXCIgKyBpbnB1dDtcbn1cbmZ1bmN0aW9uIGNsZWFuRG91YmxlU2xhc2hlcyhpbnB1dCA9IFwiXCIpIHtcbiAgcmV0dXJuIGlucHV0LnNwbGl0KFwiOi8vXCIpLm1hcCgoc3RyaW5nXykgPT4gc3RyaW5nXy5yZXBsYWNlKC9cXC97Mix9L2csIFwiL1wiKSkuam9pbihcIjovL1wiKTtcbn1cbmZ1bmN0aW9uIGlzTm9uRW1wdHlVUkwodXJsKSB7XG4gIHJldHVybiB1cmwgJiYgdXJsICE9PSBcIi9cIjtcbn1cbnZhciBKT0lOX0xFQURJTkdfU0xBU0hfUkUgPSAvXlxcLj9cXC8vO1xuZnVuY3Rpb24gam9pblVSTChiYXNlLCAuLi5pbnB1dCkge1xuICBsZXQgdXJsID0gYmFzZSB8fCBcIlwiO1xuICBmb3IgKGNvbnN0IHNlZ21lbnQgb2YgaW5wdXQuZmlsdGVyKCh1cmwyKSA9PiBpc05vbkVtcHR5VVJMKHVybDIpKSkge1xuICAgIGlmICh1cmwpIHtcbiAgICAgIGNvbnN0IF9zZWdtZW50ID0gc2VnbWVudC5yZXBsYWNlKEpPSU5fTEVBRElOR19TTEFTSF9SRSwgXCJcIik7XG4gICAgICB1cmwgPSB3aXRoVHJhaWxpbmdTbGFzaCh1cmwpICsgX3NlZ21lbnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVybCA9IHNlZ21lbnQ7XG4gICAgfVxuICB9XG4gIHJldHVybiB1cmw7XG59XG52YXIgQUJTT0xVVEVfVVJMX1JFR0VYID0gL15bYS16QS1aXVthLXpBLVpcXGQrXFwtLl0qPzovO1xudmFyIGlzQWJzb2x1dGVVcmwgPSAodXJsKSA9PiBBQlNPTFVURV9VUkxfUkVHRVgudGVzdCh1cmwpO1xuXG5leHBvcnQge1xuICBwYXJzZVNlYXJjaFBhcmFtcyxcbiAgc3RyaXBTY2hlbWUsXG4gIGFkZENsZXJrUHJlZml4LFxuICBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcsXG4gIGdldFNjcmlwdFVybCxcbiAgaXNMZWdhY3lEZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBpc0N1cnJlbnREZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBoYXNUcmFpbGluZ1NsYXNoLFxuICB3aXRoVHJhaWxpbmdTbGFzaCxcbiAgd2l0aG91dFRyYWlsaW5nU2xhc2gsXG4gIGhhc0xlYWRpbmdTbGFzaCxcbiAgd2l0aG91dExlYWRpbmdTbGFzaCxcbiAgd2l0aExlYWRpbmdTbGFzaCxcbiAgY2xlYW5Eb3VibGVTbGFzaGVzLFxuICBpc05vbkVtcHR5VVJMLFxuICBqb2luVVJMLFxuICBpc0Fic29sdXRlVXJsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstSUZUVloyTFEubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-JKSAJ6AV.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-JKSAJ6AV.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inBrowser: () => (/* binding */ inBrowser),\n/* harmony export */   isBrowserOnline: () => (/* binding */ isBrowserOnline),\n/* harmony export */   isValidBrowser: () => (/* binding */ isValidBrowser),\n/* harmony export */   isValidBrowserOnline: () => (/* binding */ isValidBrowserOnline),\n/* harmony export */   userAgentIsRobot: () => (/* binding */ userAgentIsRobot)\n/* harmony export */ });\n// src/browser.ts\nfunction inBrowser() {\n  return typeof window !== \"undefined\";\n}\nvar botAgents = [\n  \"bot\",\n  \"spider\",\n  \"crawl\",\n  \"APIs-Google\",\n  \"AdsBot\",\n  \"Googlebot\",\n  \"mediapartners\",\n  \"Google Favicon\",\n  \"FeedFetcher\",\n  \"Google-Read-Aloud\",\n  \"DuplexWeb-Google\",\n  \"googleweblight\",\n  \"bing\",\n  \"yandex\",\n  \"baidu\",\n  \"duckduck\",\n  \"yahoo\",\n  \"ecosia\",\n  \"ia_archiver\",\n  \"facebook\",\n  \"instagram\",\n  \"pinterest\",\n  \"reddit\",\n  \"slack\",\n  \"twitter\",\n  \"whatsapp\",\n  \"youtube\",\n  \"semrush\"\n];\nvar botAgentRegex = new RegExp(botAgents.join(\"|\"), \"i\");\nfunction userAgentIsRobot(userAgent) {\n  return !userAgent ? false : botAgentRegex.test(userAgent);\n}\nfunction isValidBrowser() {\n  const navigator = inBrowser() ? window?.navigator : null;\n  if (!navigator) {\n    return false;\n  }\n  return !userAgentIsRobot(navigator?.userAgent) && !navigator?.webdriver;\n}\nfunction isBrowserOnline() {\n  const navigator = inBrowser() ? window?.navigator : null;\n  if (!navigator) {\n    return false;\n  }\n  const isNavigatorOnline = navigator?.onLine;\n  const isExperimentalConnectionOnline = navigator?.connection?.rtt !== 0 && navigator?.connection?.downlink !== 0;\n  return isExperimentalConnectionOnline && isNavigatorOnline;\n}\nfunction isValidBrowserOnline() {\n  return isBrowserOnline() && isValidBrowser();\n}\n\n\n//# sourceMappingURL=chunk-JKSAJ6AV.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSktTQUo2QVYubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVFFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1KS1NBSjZBVi5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2Jyb3dzZXIudHNcbmZ1bmN0aW9uIGluQnJvd3NlcigpIHtcbiAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XG59XG52YXIgYm90QWdlbnRzID0gW1xuICBcImJvdFwiLFxuICBcInNwaWRlclwiLFxuICBcImNyYXdsXCIsXG4gIFwiQVBJcy1Hb29nbGVcIixcbiAgXCJBZHNCb3RcIixcbiAgXCJHb29nbGVib3RcIixcbiAgXCJtZWRpYXBhcnRuZXJzXCIsXG4gIFwiR29vZ2xlIEZhdmljb25cIixcbiAgXCJGZWVkRmV0Y2hlclwiLFxuICBcIkdvb2dsZS1SZWFkLUFsb3VkXCIsXG4gIFwiRHVwbGV4V2ViLUdvb2dsZVwiLFxuICBcImdvb2dsZXdlYmxpZ2h0XCIsXG4gIFwiYmluZ1wiLFxuICBcInlhbmRleFwiLFxuICBcImJhaWR1XCIsXG4gIFwiZHVja2R1Y2tcIixcbiAgXCJ5YWhvb1wiLFxuICBcImVjb3NpYVwiLFxuICBcImlhX2FyY2hpdmVyXCIsXG4gIFwiZmFjZWJvb2tcIixcbiAgXCJpbnN0YWdyYW1cIixcbiAgXCJwaW50ZXJlc3RcIixcbiAgXCJyZWRkaXRcIixcbiAgXCJzbGFja1wiLFxuICBcInR3aXR0ZXJcIixcbiAgXCJ3aGF0c2FwcFwiLFxuICBcInlvdXR1YmVcIixcbiAgXCJzZW1ydXNoXCJcbl07XG52YXIgYm90QWdlbnRSZWdleCA9IG5ldyBSZWdFeHAoYm90QWdlbnRzLmpvaW4oXCJ8XCIpLCBcImlcIik7XG5mdW5jdGlvbiB1c2VyQWdlbnRJc1JvYm90KHVzZXJBZ2VudCkge1xuICByZXR1cm4gIXVzZXJBZ2VudCA/IGZhbHNlIDogYm90QWdlbnRSZWdleC50ZXN0KHVzZXJBZ2VudCk7XG59XG5mdW5jdGlvbiBpc1ZhbGlkQnJvd3NlcigpIHtcbiAgY29uc3QgbmF2aWdhdG9yID0gaW5Ccm93c2VyKCkgPyB3aW5kb3c/Lm5hdmlnYXRvciA6IG51bGw7XG4gIGlmICghbmF2aWdhdG9yKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAhdXNlckFnZW50SXNSb2JvdChuYXZpZ2F0b3I/LnVzZXJBZ2VudCkgJiYgIW5hdmlnYXRvcj8ud2ViZHJpdmVyO1xufVxuZnVuY3Rpb24gaXNCcm93c2VyT25saW5lKCkge1xuICBjb25zdCBuYXZpZ2F0b3IgPSBpbkJyb3dzZXIoKSA/IHdpbmRvdz8ubmF2aWdhdG9yIDogbnVsbDtcbiAgaWYgKCFuYXZpZ2F0b3IpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgaXNOYXZpZ2F0b3JPbmxpbmUgPSBuYXZpZ2F0b3I/Lm9uTGluZTtcbiAgY29uc3QgaXNFeHBlcmltZW50YWxDb25uZWN0aW9uT25saW5lID0gbmF2aWdhdG9yPy5jb25uZWN0aW9uPy5ydHQgIT09IDAgJiYgbmF2aWdhdG9yPy5jb25uZWN0aW9uPy5kb3dubGluayAhPT0gMDtcbiAgcmV0dXJuIGlzRXhwZXJpbWVudGFsQ29ubmVjdGlvbk9ubGluZSAmJiBpc05hdmlnYXRvck9ubGluZTtcbn1cbmZ1bmN0aW9uIGlzVmFsaWRCcm93c2VyT25saW5lKCkge1xuICByZXR1cm4gaXNCcm93c2VyT25saW5lKCkgJiYgaXNWYWxpZEJyb3dzZXIoKTtcbn1cblxuZXhwb3J0IHtcbiAgaW5Ccm93c2VyLFxuICB1c2VyQWdlbnRJc1JvYm90LFxuICBpc1ZhbGlkQnJvd3NlcixcbiAgaXNCcm93c2VyT25saW5lLFxuICBpc1ZhbGlkQnJvd3Nlck9ubGluZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUpLU0FKNkFWLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-JKSAJ6AV.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-JY46X3OC.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-JY46X3OC.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Poller: () => (/* binding */ Poller)\n/* harmony export */ });\n/* harmony import */ var _chunk_ZHPWRK4R_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-ZHPWRK4R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-ZHPWRK4R.mjs\");\n\n\n// src/poller.ts\nfunction Poller({ delayInMs } = { delayInMs: 1e3 }) {\n  const workerTimers = (0,_chunk_ZHPWRK4R_mjs__WEBPACK_IMPORTED_MODULE_0__.createWorkerTimers)();\n  let timerId;\n  let stopped = false;\n  const stop = () => {\n    if (timerId) {\n      workerTimers.clearTimeout(timerId);\n      workerTimers.cleanup();\n    }\n    stopped = true;\n  };\n  const run = async (cb) => {\n    stopped = false;\n    await cb(stop);\n    if (stopped) {\n      return;\n    }\n    timerId = workerTimers.setTimeout(() => {\n      void run(cb);\n    }, delayInMs);\n  };\n  return { run, stop };\n}\n\n\n//# sourceMappingURL=chunk-JY46X3OC.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSlk0NlgzT0MubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRThCOztBQUU5QjtBQUNBLGtCQUFrQixZQUFZLElBQUksZ0JBQWdCO0FBQ2xELHVCQUF1Qix1RUFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFdBQVc7QUFDWDs7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSlk0NlgzT0MubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNyZWF0ZVdvcmtlclRpbWVyc1xufSBmcm9tIFwiLi9jaHVuay1aSFBXUks0Ui5tanNcIjtcblxuLy8gc3JjL3BvbGxlci50c1xuZnVuY3Rpb24gUG9sbGVyKHsgZGVsYXlJbk1zIH0gPSB7IGRlbGF5SW5NczogMWUzIH0pIHtcbiAgY29uc3Qgd29ya2VyVGltZXJzID0gY3JlYXRlV29ya2VyVGltZXJzKCk7XG4gIGxldCB0aW1lcklkO1xuICBsZXQgc3RvcHBlZCA9IGZhbHNlO1xuICBjb25zdCBzdG9wID0gKCkgPT4ge1xuICAgIGlmICh0aW1lcklkKSB7XG4gICAgICB3b3JrZXJUaW1lcnMuY2xlYXJUaW1lb3V0KHRpbWVySWQpO1xuICAgICAgd29ya2VyVGltZXJzLmNsZWFudXAoKTtcbiAgICB9XG4gICAgc3RvcHBlZCA9IHRydWU7XG4gIH07XG4gIGNvbnN0IHJ1biA9IGFzeW5jIChjYikgPT4ge1xuICAgIHN0b3BwZWQgPSBmYWxzZTtcbiAgICBhd2FpdCBjYihzdG9wKTtcbiAgICBpZiAoc3RvcHBlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aW1lcklkID0gd29ya2VyVGltZXJzLnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdm9pZCBydW4oY2IpO1xuICAgIH0sIGRlbGF5SW5Ncyk7XG4gIH07XG4gIHJldHVybiB7IHJ1biwgc3RvcCB9O1xufVxuXG5leHBvcnQge1xuICBQb2xsZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1KWTQ2WDNPQy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-JY46X3OC.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicBtoa: () => (/* binding */ isomorphicBtoa)\n/* harmony export */ });\n// src/isomorphicBtoa.ts\nvar isomorphicBtoa = (data) => {\n  if (typeof btoa !== \"undefined\" && typeof btoa === \"function\") {\n    return btoa(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data).toString(\"base64\");\n  }\n  return data;\n};\n\n\n//# sourceMappingURL=chunk-KOH7GTJO.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstS09IN0dUSk8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstS09IN0dUSk8ubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pc29tb3JwaGljQnRvYS50c1xudmFyIGlzb21vcnBoaWNCdG9hID0gKGRhdGEpID0+IHtcbiAgaWYgKHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gYnRvYShkYXRhKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5CdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IGdsb2JhbC5CdWZmZXIoZGF0YSkudG9TdHJpbmcoXCJiYXNlNjRcIik7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5leHBvcnQge1xuICBpc29tb3JwaGljQnRvYVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUtPSDdHVEpPLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-NT4JRXL3.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-NT4JRXL3.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: () => (/* binding */ ClerkAPIResponseError),\n/* harmony export */   ClerkRuntimeError: () => (/* binding */ ClerkRuntimeError),\n/* harmony export */   ClerkWebAuthnError: () => (/* binding */ ClerkWebAuthnError),\n/* harmony export */   EmailLinkError: () => (/* binding */ EmailLinkError),\n/* harmony export */   EmailLinkErrorCode: () => (/* binding */ EmailLinkErrorCode),\n/* harmony export */   EmailLinkErrorCodeStatus: () => (/* binding */ EmailLinkErrorCodeStatus),\n/* harmony export */   buildErrorThrower: () => (/* binding */ buildErrorThrower),\n/* harmony export */   errorToJSON: () => (/* binding */ errorToJSON),\n/* harmony export */   is4xxError: () => (/* binding */ is4xxError),\n/* harmony export */   isCaptchaError: () => (/* binding */ isCaptchaError),\n/* harmony export */   isClerkAPIResponseError: () => (/* binding */ isClerkAPIResponseError),\n/* harmony export */   isClerkRuntimeError: () => (/* binding */ isClerkRuntimeError),\n/* harmony export */   isEmailLinkError: () => (/* binding */ isEmailLinkError),\n/* harmony export */   isKnownError: () => (/* binding */ isKnownError),\n/* harmony export */   isMetamaskError: () => (/* binding */ isMetamaskError),\n/* harmony export */   isNetworkError: () => (/* binding */ isNetworkError),\n/* harmony export */   isPasswordPwnedError: () => (/* binding */ isPasswordPwnedError),\n/* harmony export */   isReverificationCancelledError: () => (/* binding */ isReverificationCancelledError),\n/* harmony export */   isUnauthorizedError: () => (/* binding */ isUnauthorizedError),\n/* harmony export */   isUserLockedError: () => (/* binding */ isUserLockedError),\n/* harmony export */   parseError: () => (/* binding */ parseError),\n/* harmony export */   parseErrors: () => (/* binding */ parseErrors)\n/* harmony export */ });\n// src/error.ts\nfunction isUnauthorizedError(e) {\n  const status = e?.status;\n  const code = e?.errors?.[0]?.code;\n  return code === \"authentication_invalid\" && status === 401;\n}\nfunction isCaptchaError(e) {\n  return [\"captcha_invalid\", \"captcha_not_enabled\", \"captcha_missing_token\"].includes(e.errors[0].code);\n}\nfunction is4xxError(e) {\n  const status = e?.status;\n  return !!status && status >= 400 && status < 500;\n}\nfunction isNetworkError(e) {\n  const message = (`${e.message}${e.name}` || \"\").toLowerCase().replace(/\\s+/g, \"\");\n  return message.includes(\"networkerror\");\n}\nfunction isKnownError(error) {\n  return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\nfunction isClerkAPIResponseError(err) {\n  return \"clerkError\" in err;\n}\nfunction isClerkRuntimeError(err) {\n  return \"clerkRuntimeError\" in err;\n}\nfunction isReverificationCancelledError(err) {\n  return isClerkRuntimeError(err) && err.code === \"reverification_cancelled\";\n}\nfunction isMetamaskError(err) {\n  return \"code\" in err && [4001, 32602, 32603].includes(err.code) && \"message\" in err;\n}\nfunction isUserLockedError(err) {\n  return isClerkAPIResponseError(err) && err.errors?.[0]?.code === \"user_locked\";\n}\nfunction isPasswordPwnedError(err) {\n  return isClerkAPIResponseError(err) && err.errors?.[0]?.code === \"form_password_pwned\";\n}\nfunction parseErrors(data = []) {\n  return data.length > 0 ? data.map(parseError) : [];\n}\nfunction parseError(error) {\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: error?.meta?.param_name,\n      sessionId: error?.meta?.session_id,\n      emailAddresses: error?.meta?.email_addresses,\n      identifiers: error?.meta?.identifiers,\n      zxcvbn: error?.meta?.zxcvbn\n    }\n  };\n}\nfunction errorToJSON(error) {\n  return {\n    code: error?.code || \"\",\n    message: error?.message || \"\",\n    long_message: error?.longMessage,\n    meta: {\n      param_name: error?.meta?.paramName,\n      session_id: error?.meta?.sessionId,\n      email_addresses: error?.meta?.emailAddresses,\n      identifiers: error?.meta?.identifiers,\n      zxcvbn: error?.meta?.zxcvbn\n    }\n  };\n}\nvar ClerkAPIResponseError = class _ClerkAPIResponseError extends Error {\n  constructor(message, { data, status, clerkTraceId, retryAfter }) {\n    super(message);\n    this.toString = () => {\n      let message = `[${this.name}]\nMessage:${this.message}\nStatus:${this.status}\nSerialized errors: ${this.errors.map(\n        (e) => JSON.stringify(e)\n      )}`;\n      if (this.clerkTraceId) {\n        message += `\nClerk Trace ID: ${this.clerkTraceId}`;\n      }\n      return message;\n    };\n    Object.setPrototypeOf(this, _ClerkAPIResponseError.prototype);\n    this.status = status;\n    this.message = message;\n    this.clerkTraceId = clerkTraceId;\n    this.retryAfter = retryAfter;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n};\nvar ClerkRuntimeError = class _ClerkRuntimeError extends Error {\n  constructor(message, { code }) {\n    const prefix = \"\\u{1F512} Clerk:\";\n    const regex = new RegExp(prefix.replace(\" \", \"\\\\s*\"), \"i\");\n    const sanitized = message.replace(regex, \"\");\n    const _message = `${prefix} ${sanitized.trim()}\n\n(code=\"${code}\")\n`;\n    super(_message);\n    /**\n     * Returns a string representation of the error.\n     *\n     * @returns {string} A formatted string with the error name and message.\n     */\n    this.toString = () => {\n      return `[${this.name}]\nMessage:${this.message}`;\n    };\n    Object.setPrototypeOf(this, _ClerkRuntimeError.prototype);\n    this.code = code;\n    this.message = _message;\n    this.clerkRuntimeError = true;\n    this.name = \"ClerkRuntimeError\";\n  }\n};\nvar EmailLinkError = class _EmailLinkError extends Error {\n  constructor(code) {\n    super(code);\n    this.code = code;\n    this.name = \"EmailLinkError\";\n    Object.setPrototypeOf(this, _EmailLinkError.prototype);\n  }\n};\nfunction isEmailLinkError(err) {\n  return err.name === \"EmailLinkError\";\n}\nvar EmailLinkErrorCode = {\n  Expired: \"expired\",\n  Failed: \"failed\",\n  ClientMismatch: \"client_mismatch\"\n};\nvar EmailLinkErrorCodeStatus = {\n  Expired: \"expired\",\n  Failed: \"failed\",\n  ClientMismatch: \"client_mismatch\"\n};\nvar DefaultMessages = Object.freeze({\n  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingSecretKeyErrorMessage: `Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingClerkProvider: `{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`\n});\nfunction buildErrorThrower({ packageName, customMessages }) {\n  let pkg = packageName;\n  const messages = {\n    ...DefaultMessages,\n    ...customMessages\n  };\n  function buildMessage(rawMessage, replacements) {\n    if (!replacements) {\n      return `${pkg}: ${rawMessage}`;\n    }\n    let msg = rawMessage;\n    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n    for (const match of matches) {\n      const replacement = (replacements[match[1]] || \"\").toString();\n      msg = msg.replace(`{{${match[1]}}}`, replacement);\n    }\n    return `${pkg}: ${msg}`;\n  }\n  return {\n    setPackageName({ packageName: packageName2 }) {\n      if (typeof packageName2 === \"string\") {\n        pkg = packageName2;\n      }\n      return this;\n    },\n    setMessages({ customMessages: customMessages2 }) {\n      Object.assign(messages, customMessages2 || {});\n      return this;\n    },\n    throwInvalidPublishableKeyError(params) {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n    throwInvalidProxyUrl(params) {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n    throwMissingPublishableKeyError() {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    },\n    throwMissingSecretKeyError() {\n      throw new Error(buildMessage(messages.MissingSecretKeyErrorMessage));\n    },\n    throwMissingClerkProviderError(params) {\n      throw new Error(buildMessage(messages.MissingClerkProvider, params));\n    },\n    throw(message) {\n      throw new Error(buildMessage(message));\n    }\n  };\n}\nvar ClerkWebAuthnError = class extends ClerkRuntimeError {\n  constructor(message, { code }) {\n    super(message, { code });\n    this.code = code;\n  }\n};\n\n\n//# sourceMappingURL=chunk-NT4JRXL3.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-NT4JRXL3.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-O32JQBM6.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-O32JQBM6.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: () => (/* binding */ handleValueOrFn)\n/* harmony export */ });\n// src/utils/handleValueOrFn.ts\nfunction handleValueOrFn(value, url, defaultValue) {\n  if (typeof value === \"function\") {\n    return value(url);\n  }\n  if (typeof value !== \"undefined\") {\n    return value;\n  }\n  if (typeof defaultValue !== \"undefined\") {\n    return defaultValue;\n  }\n  return void 0;\n}\n\n\n//# sourceMappingURL=chunk-O32JQBM6.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstTzMySlFCTTYubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstTzMySlFCTTYubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9oYW5kbGVWYWx1ZU9yRm4udHNcbmZ1bmN0aW9uIGhhbmRsZVZhbHVlT3JGbih2YWx1ZSwgdXJsLCBkZWZhdWx0VmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHZhbHVlKHVybCk7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodHlwZW9mIGRlZmF1bHRWYWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cblxuZXhwb3J0IHtcbiAgaGFuZGxlVmFsdWVPckZuXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstTzMySlFCTTYubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-O32JQBM6.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QU372XZW.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-QU372XZW.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: () => (/* binding */ buildPublishableKey),\n/* harmony export */   createDevOrStagingUrlCache: () => (/* binding */ createDevOrStagingUrlCache),\n/* harmony export */   getCookieSuffix: () => (/* binding */ getCookieSuffix),\n/* harmony export */   getSuffixedCookieName: () => (/* binding */ getSuffixedCookieName),\n/* harmony export */   isDevelopmentFromPublishableKey: () => (/* binding */ isDevelopmentFromPublishableKey),\n/* harmony export */   isDevelopmentFromSecretKey: () => (/* binding */ isDevelopmentFromSecretKey),\n/* harmony export */   isProductionFromPublishableKey: () => (/* binding */ isProductionFromPublishableKey),\n/* harmony export */   isProductionFromSecretKey: () => (/* binding */ isProductionFromSecretKey),\n/* harmony export */   isPublishableKey: () => (/* binding */ isPublishableKey),\n/* harmony export */   parsePublishableKey: () => (/* binding */ parsePublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n\n\n\n\n// src/keys.ts\nvar PUBLISHABLE_KEY_LIVE_PREFIX = \"pk_live_\";\nvar PUBLISHABLE_KEY_TEST_PREFIX = \"pk_test_\";\nvar PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\nfunction buildPublishableKey(frontendApi) {\n  const isDevKey = PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) || frontendApi.startsWith(\"clerk.\") && _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__.LEGACY_DEV_INSTANCE_SUFFIXES.some((s) => frontendApi.endsWith(s));\n  const keyPrefix = isDevKey ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n  return `${keyPrefix}${(0,_chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__.isomorphicBtoa)(`${frontendApi}$`)}`;\n}\nfunction parsePublishableKey(key, options = {}) {\n  key = key || \"\";\n  if (!key || !isPublishableKey(key)) {\n    if (options.fatal && !key) {\n      throw new Error(\n        \"Publishable key is missing. Ensure that your publishable key is correctly configured. Double-check your environment configuration for your keys, or access them here: https://dashboard.clerk.com/last-active?path=api-keys\"\n      );\n    }\n    if (options.fatal && !isPublishableKey(key)) {\n      throw new Error(\"Publishable key not valid.\");\n    }\n    return null;\n  }\n  const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? \"production\" : \"development\";\n  let frontendApi = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2]);\n  frontendApi = frontendApi.slice(0, -1);\n  if (options.proxyUrl) {\n    frontendApi = options.proxyUrl;\n  } else if (instanceType !== \"development\" && options.domain && options.isSatellite) {\n    frontendApi = `clerk.${options.domain}`;\n  }\n  return {\n    instanceType,\n    frontendApi\n  };\n}\nfunction isPublishableKey(key = \"\") {\n  try {\n    const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n    const hasValidFrontendApiPostfix = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2] || \"\").endsWith(\"$\");\n    return hasValidPrefix && hasValidFrontendApiPostfix;\n  } catch {\n    return false;\n  }\n}\nfunction createDevOrStagingUrlCache() {\n  const devOrStagingUrlCache = /* @__PURE__ */ new Map();\n  return {\n    isDevOrStagingUrl: (url) => {\n      if (!url) {\n        return false;\n      }\n      const hostname = typeof url === \"string\" ? url : url.hostname;\n      let res = devOrStagingUrlCache.get(hostname);\n      if (res === void 0) {\n        res = _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__.DEV_OR_STAGING_SUFFIXES.some((s) => hostname.endsWith(s));\n        devOrStagingUrlCache.set(hostname, res);\n      }\n      return res;\n    }\n  };\n}\nfunction isDevelopmentFromPublishableKey(apiKey) {\n  return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"pk_test_\");\n}\nfunction isProductionFromPublishableKey(apiKey) {\n  return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"pk_live_\");\n}\nfunction isDevelopmentFromSecretKey(apiKey) {\n  return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"sk_test_\");\n}\nfunction isProductionFromSecretKey(apiKey) {\n  return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"sk_live_\");\n}\nasync function getCookieSuffix(publishableKey, subtle = globalThis.crypto.subtle) {\n  const data = new TextEncoder().encode(publishableKey);\n  const digest = await subtle.digest(\"sha-1\", data);\n  const stringDigest = String.fromCharCode(...new Uint8Array(digest));\n  return (0,_chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_1__.isomorphicBtoa)(stringDigest).replace(/\\+/gi, \"-\").replace(/\\//gi, \"_\").substring(0, 8);\n}\nvar getSuffixedCookieName = (cookieName, cookieSuffix) => {\n  return `${cookieName}_${cookieSuffix}`;\n};\n\n\n//# sourceMappingURL=chunk-QU372XZW.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstUVUzNzJYWlcubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFOEI7QUFHQTtBQUlBOztBQUU5QjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsRUFBRSxPQUFPLElBQUk7QUFDcEU7QUFDQSwrR0FBK0csNkVBQTRCO0FBQzNJO0FBQ0EsWUFBWSxVQUFVLEVBQUUsbUVBQWMsSUFBSSxZQUFZLElBQUk7QUFDMUQ7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUVBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLDJCQUEyQixlQUFlO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxtRUFBYztBQUNyRDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsd0VBQXVCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxtRUFBYztBQUN2QjtBQUNBO0FBQ0EsWUFBWSxXQUFXLEdBQUcsYUFBYTtBQUN2Qzs7QUFhRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstUVUzNzJYWlcubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzb21vcnBoaWNBdG9iXG59IGZyb20gXCIuL2NodW5rLVRFVEdURUkyLm1qc1wiO1xuaW1wb3J0IHtcbiAgaXNvbW9ycGhpY0J0b2Fcbn0gZnJvbSBcIi4vY2h1bmstS09IN0dUSk8ubWpzXCI7XG5pbXBvcnQge1xuICBERVZfT1JfU1RBR0lOR19TVUZGSVhFUyxcbiAgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFU1xufSBmcm9tIFwiLi9jaHVuay1JNk1UU1RPRi5tanNcIjtcblxuLy8gc3JjL2tleXMudHNcbnZhciBQVUJMSVNIQUJMRV9LRVlfTElWRV9QUkVGSVggPSBcInBrX2xpdmVfXCI7XG52YXIgUFVCTElTSEFCTEVfS0VZX1RFU1RfUFJFRklYID0gXCJwa190ZXN0X1wiO1xudmFyIFBVQkxJU0hBQkxFX0ZST05URU5EX0FQSV9ERVZfUkVHRVggPSAvXigoW2Etel0rKS0pezJ9KFswLTldezEsMn0pXFwuY2xlcmtcXC5hY2NvdW50cyhbYS16Ll0qKShkZXZ8Y29tKSQvaTtcbmZ1bmN0aW9uIGJ1aWxkUHVibGlzaGFibGVLZXkoZnJvbnRlbmRBcGkpIHtcbiAgY29uc3QgaXNEZXZLZXkgPSBQVUJMSVNIQUJMRV9GUk9OVEVORF9BUElfREVWX1JFR0VYLnRlc3QoZnJvbnRlbmRBcGkpIHx8IGZyb250ZW5kQXBpLnN0YXJ0c1dpdGgoXCJjbGVyay5cIikgJiYgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUy5zb21lKChzKSA9PiBmcm9udGVuZEFwaS5lbmRzV2l0aChzKSk7XG4gIGNvbnN0IGtleVByZWZpeCA9IGlzRGV2S2V5ID8gUFVCTElTSEFCTEVfS0VZX1RFU1RfUFJFRklYIDogUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYO1xuICByZXR1cm4gYCR7a2V5UHJlZml4fSR7aXNvbW9ycGhpY0J0b2EoYCR7ZnJvbnRlbmRBcGl9JGApfWA7XG59XG5mdW5jdGlvbiBwYXJzZVB1Ymxpc2hhYmxlS2V5KGtleSwgb3B0aW9ucyA9IHt9KSB7XG4gIGtleSA9IGtleSB8fCBcIlwiO1xuICBpZiAoIWtleSB8fCAhaXNQdWJsaXNoYWJsZUtleShrZXkpKSB7XG4gICAgaWYgKG9wdGlvbnMuZmF0YWwgJiYgIWtleSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlB1Ymxpc2hhYmxlIGtleSBpcyBtaXNzaW5nLiBFbnN1cmUgdGhhdCB5b3VyIHB1Ymxpc2hhYmxlIGtleSBpcyBjb3JyZWN0bHkgY29uZmlndXJlZC4gRG91YmxlLWNoZWNrIHlvdXIgZW52aXJvbm1lbnQgY29uZmlndXJhdGlvbiBmb3IgeW91ciBrZXlzLCBvciBhY2Nlc3MgdGhlbSBoZXJlOiBodHRwczovL2Rhc2hib2FyZC5jbGVyay5jb20vbGFzdC1hY3RpdmU/cGF0aD1hcGkta2V5c1wiXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5mYXRhbCAmJiAhaXNQdWJsaXNoYWJsZUtleShrZXkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQdWJsaXNoYWJsZSBrZXkgbm90IHZhbGlkLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgaW5zdGFuY2VUeXBlID0ga2V5LnN0YXJ0c1dpdGgoUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYKSA/IFwicHJvZHVjdGlvblwiIDogXCJkZXZlbG9wbWVudFwiO1xuICBsZXQgZnJvbnRlbmRBcGkgPSBpc29tb3JwaGljQXRvYihrZXkuc3BsaXQoXCJfXCIpWzJdKTtcbiAgZnJvbnRlbmRBcGkgPSBmcm9udGVuZEFwaS5zbGljZSgwLCAtMSk7XG4gIGlmIChvcHRpb25zLnByb3h5VXJsKSB7XG4gICAgZnJvbnRlbmRBcGkgPSBvcHRpb25zLnByb3h5VXJsO1xuICB9IGVsc2UgaWYgKGluc3RhbmNlVHlwZSAhPT0gXCJkZXZlbG9wbWVudFwiICYmIG9wdGlvbnMuZG9tYWluICYmIG9wdGlvbnMuaXNTYXRlbGxpdGUpIHtcbiAgICBmcm9udGVuZEFwaSA9IGBjbGVyay4ke29wdGlvbnMuZG9tYWlufWA7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBpbnN0YW5jZVR5cGUsXG4gICAgZnJvbnRlbmRBcGlcbiAgfTtcbn1cbmZ1bmN0aW9uIGlzUHVibGlzaGFibGVLZXkoa2V5ID0gXCJcIikge1xuICB0cnkge1xuICAgIGNvbnN0IGhhc1ZhbGlkUHJlZml4ID0ga2V5LnN0YXJ0c1dpdGgoUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYKSB8fCBrZXkuc3RhcnRzV2l0aChQVUJMSVNIQUJMRV9LRVlfVEVTVF9QUkVGSVgpO1xuICAgIGNvbnN0IGhhc1ZhbGlkRnJvbnRlbmRBcGlQb3N0Zml4ID0gaXNvbW9ycGhpY0F0b2Ioa2V5LnNwbGl0KFwiX1wiKVsyXSB8fCBcIlwiKS5lbmRzV2l0aChcIiRcIik7XG4gICAgcmV0dXJuIGhhc1ZhbGlkUHJlZml4ICYmIGhhc1ZhbGlkRnJvbnRlbmRBcGlQb3N0Zml4O1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZURldk9yU3RhZ2luZ1VybENhY2hlKCkge1xuICBjb25zdCBkZXZPclN0YWdpbmdVcmxDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIHJldHVybiB7XG4gICAgaXNEZXZPclN0YWdpbmdVcmw6ICh1cmwpID0+IHtcbiAgICAgIGlmICghdXJsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGhvc3RuYW1lID0gdHlwZW9mIHVybCA9PT0gXCJzdHJpbmdcIiA/IHVybCA6IHVybC5ob3N0bmFtZTtcbiAgICAgIGxldCByZXMgPSBkZXZPclN0YWdpbmdVcmxDYWNoZS5nZXQoaG9zdG5hbWUpO1xuICAgICAgaWYgKHJlcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgIHJlcyA9IERFVl9PUl9TVEFHSU5HX1NVRkZJWEVTLnNvbWUoKHMpID0+IGhvc3RuYW1lLmVuZHNXaXRoKHMpKTtcbiAgICAgICAgZGV2T3JTdGFnaW5nVXJsQ2FjaGUuc2V0KGhvc3RuYW1lLCByZXMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBpc0RldmVsb3BtZW50RnJvbVB1Ymxpc2hhYmxlS2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJ0ZXN0X1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInBrX3Rlc3RfXCIpO1xufVxuZnVuY3Rpb24gaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJsaXZlX1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInBrX2xpdmVfXCIpO1xufVxuZnVuY3Rpb24gaXNEZXZlbG9wbWVudEZyb21TZWNyZXRLZXkoYXBpS2V5KSB7XG4gIHJldHVybiBhcGlLZXkuc3RhcnRzV2l0aChcInRlc3RfXCIpIHx8IGFwaUtleS5zdGFydHNXaXRoKFwic2tfdGVzdF9cIik7XG59XG5mdW5jdGlvbiBpc1Byb2R1Y3Rpb25Gcm9tU2VjcmV0S2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJsaXZlX1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInNrX2xpdmVfXCIpO1xufVxuYXN5bmMgZnVuY3Rpb24gZ2V0Q29va2llU3VmZml4KHB1Ymxpc2hhYmxlS2V5LCBzdWJ0bGUgPSBnbG9iYWxUaGlzLmNyeXB0by5zdWJ0bGUpIHtcbiAgY29uc3QgZGF0YSA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShwdWJsaXNoYWJsZUtleSk7XG4gIGNvbnN0IGRpZ2VzdCA9IGF3YWl0IHN1YnRsZS5kaWdlc3QoXCJzaGEtMVwiLCBkYXRhKTtcbiAgY29uc3Qgc3RyaW5nRGlnZXN0ID0gU3RyaW5nLmZyb21DaGFyQ29kZSguLi5uZXcgVWludDhBcnJheShkaWdlc3QpKTtcbiAgcmV0dXJuIGlzb21vcnBoaWNCdG9hKHN0cmluZ0RpZ2VzdCkucmVwbGFjZSgvXFwrL2dpLCBcIi1cIikucmVwbGFjZSgvXFwvL2dpLCBcIl9cIikuc3Vic3RyaW5nKDAsIDgpO1xufVxudmFyIGdldFN1ZmZpeGVkQ29va2llTmFtZSA9IChjb29raWVOYW1lLCBjb29raWVTdWZmaXgpID0+IHtcbiAgcmV0dXJuIGAke2Nvb2tpZU5hbWV9XyR7Y29va2llU3VmZml4fWA7XG59O1xuXG5leHBvcnQge1xuICBidWlsZFB1Ymxpc2hhYmxlS2V5LFxuICBwYXJzZVB1Ymxpc2hhYmxlS2V5LFxuICBpc1B1Ymxpc2hhYmxlS2V5LFxuICBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSxcbiAgaXNEZXZlbG9wbWVudEZyb21QdWJsaXNoYWJsZUtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVB1Ymxpc2hhYmxlS2V5LFxuICBpc0RldmVsb3BtZW50RnJvbVNlY3JldEtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbVNlY3JldEtleSxcbiAgZ2V0Q29va2llU3VmZml4LFxuICBnZXRTdWZmaXhlZENvb2tpZU5hbWVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1RVTM3MlhaVy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QU372XZW.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: () => (/* binding */ isomorphicAtob)\n/* harmony export */ });\n// src/isomorphicAtob.ts\nvar isomorphicAtob = (data) => {\n  if (typeof atob !== \"undefined\" && typeof atob === \"function\") {\n    return atob(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data, \"base64\").toString();\n  }\n  return data;\n};\n\n\n//# sourceMappingURL=chunk-TETGTEI2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVEVUR1RFSTIubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVEVUR1RFSTIubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pc29tb3JwaGljQXRvYi50c1xudmFyIGlzb21vcnBoaWNBdG9iID0gKGRhdGEpID0+IHtcbiAgaWYgKHR5cGVvZiBhdG9iICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBhdG9iID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gYXRvYihkYXRhKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5CdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IGdsb2JhbC5CdWZmZXIoZGF0YSwgXCJiYXNlNjRcIikudG9TdHJpbmcoKTtcbiAgfVxuICByZXR1cm4gZGF0YTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzb21vcnBoaWNBdG9iXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstVEVUR1RFSTIubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-WIS7IYDJ.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-WIS7IYDJ.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TelemetryCollector: () => (/* binding */ TelemetryCollector),\n/* harmony export */   eventComponentMounted: () => (/* binding */ eventComponentMounted),\n/* harmony export */   eventFrameworkMetadata: () => (/* binding */ eventFrameworkMetadata),\n/* harmony export */   eventMethodCalled: () => (/* binding */ eventMethodCalled),\n/* harmony export */   eventPrebuiltComponentMounted: () => (/* binding */ eventPrebuiltComponentMounted),\n/* harmony export */   eventPrebuiltComponentOpened: () => (/* binding */ eventPrebuiltComponentOpened)\n/* harmony export */ });\n/* harmony import */ var _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-GGFRMWFO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-GGFRMWFO.mjs\");\n/* harmony import */ var _chunk_QU372XZW_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-QU372XZW.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QU372XZW.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n// src/telemetry/throttler.ts\nvar DEFAULT_CACHE_TTL_MS = 864e5;\nvar _storageKey, _cacheTtl, _TelemetryEventThrottler_instances, generateKey_fn, cache_get, isValidBrowser_get;\nvar TelemetryEventThrottler = class {\n  constructor() {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _TelemetryEventThrottler_instances);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _storageKey, \"clerk_telemetry_throttler\");\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _cacheTtl, DEFAULT_CACHE_TTL_MS);\n  }\n  isEventThrottled(payload) {\n    if (!(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _TelemetryEventThrottler_instances, isValidBrowser_get)) {\n      return false;\n    }\n    const now = Date.now();\n    const key = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryEventThrottler_instances, generateKey_fn).call(this, payload);\n    const entry = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get)?.[key];\n    if (!entry) {\n      const updatedCache = {\n        ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get),\n        [key]: now\n      };\n      localStorage.setItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _storageKey), JSON.stringify(updatedCache));\n    }\n    const shouldInvalidate = entry && now - entry > (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _cacheTtl);\n    if (shouldInvalidate) {\n      const updatedCache = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _TelemetryEventThrottler_instances, cache_get);\n      delete updatedCache[key];\n      localStorage.setItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _storageKey), JSON.stringify(updatedCache));\n    }\n    return !!entry;\n  }\n};\n_storageKey = new WeakMap();\n_cacheTtl = new WeakMap();\n_TelemetryEventThrottler_instances = new WeakSet();\n/**\n * Generates a consistent unique key for telemetry events by sorting payload properties.\n * This ensures that payloads with identical content in different orders produce the same key.\n */\ngenerateKey_fn = function(event) {\n  const { sk: _sk, pk: _pk, payload, ...rest } = event;\n  const sanitizedEvent = {\n    ...payload,\n    ...rest\n  };\n  return JSON.stringify(\n    Object.keys({\n      ...payload,\n      ...rest\n    }).sort().map((key) => sanitizedEvent[key])\n  );\n};\ncache_get = function() {\n  const cacheString = localStorage.getItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _storageKey));\n  if (!cacheString) {\n    return {};\n  }\n  return JSON.parse(cacheString);\n};\nisValidBrowser_get = function() {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n  const storage = window.localStorage;\n  if (!storage) {\n    return false;\n  }\n  try {\n    const testKey = \"test\";\n    storage.setItem(testKey, testKey);\n    storage.removeItem(testKey);\n    return true;\n  } catch (err) {\n    const isQuotaExceededError = err instanceof DOMException && // Check error names for different browsers\n    (err.name === \"QuotaExceededError\" || err.name === \"NS_ERROR_DOM_QUOTA_REACHED\");\n    if (isQuotaExceededError && storage.length > 0) {\n      storage.removeItem((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _storageKey));\n    }\n    return false;\n  }\n};\n\n// src/telemetry/collector.ts\nvar DEFAULT_CONFIG = {\n  samplingRate: 1,\n  maxBufferSize: 5,\n  // Production endpoint: https://clerk-telemetry.com\n  // Staging endpoint: https://staging.clerk-telemetry.com\n  // Local: http://localhost:8787\n  endpoint: \"https://clerk-telemetry.com\"\n};\nvar _config, _eventThrottler, _metadata, _buffer, _pendingFlush, _TelemetryCollector_instances, shouldRecord_fn, shouldBeSampled_fn, scheduleFlush_fn, flush_fn, logEvent_fn, getSDKMetadata_fn, preparePayload_fn;\nvar TelemetryCollector = class {\n  constructor(options) {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _TelemetryCollector_instances);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _config);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _eventThrottler);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _metadata, {});\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _buffer, []);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateAdd)(this, _pendingFlush);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateSet)(this, _config, {\n      maxBufferSize: options.maxBufferSize ?? DEFAULT_CONFIG.maxBufferSize,\n      samplingRate: options.samplingRate ?? DEFAULT_CONFIG.samplingRate,\n      disabled: options.disabled ?? false,\n      debug: options.debug ?? false,\n      endpoint: DEFAULT_CONFIG.endpoint\n    });\n    if (!options.clerkVersion && typeof window === \"undefined\") {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).clerkVersion = \"\";\n    } else {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).clerkVersion = options.clerkVersion ?? \"\";\n    }\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).sdk = options.sdk;\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).sdkVersion = options.sdkVersion;\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).publishableKey = options.publishableKey ?? \"\";\n    const parsedKey = (0,_chunk_QU372XZW_mjs__WEBPACK_IMPORTED_MODULE_1__.parsePublishableKey)(options.publishableKey);\n    if (parsedKey) {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).instanceType = parsedKey.instanceType;\n    }\n    if (options.secretKey) {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).secretKey = options.secretKey.substring(0, 16);\n    }\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateSet)(this, _eventThrottler, new TelemetryEventThrottler());\n  }\n  get isEnabled() {\n    if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).instanceType !== \"development\") {\n      return false;\n    }\n    if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _config).disabled || typeof process !== \"undefined\" && (0,_chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.isTruthy)(process.env.CLERK_TELEMETRY_DISABLED)) {\n      return false;\n    }\n    if (typeof window !== \"undefined\" && !!window?.navigator?.webdriver) {\n      return false;\n    }\n    return true;\n  }\n  get isDebug() {\n    return (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _config).debug || typeof process !== \"undefined\" && (0,_chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.isTruthy)(process.env.CLERK_TELEMETRY_DEBUG);\n  }\n  record(event) {\n    const preparedPayload = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, preparePayload_fn).call(this, event.event, event.payload);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, logEvent_fn).call(this, preparedPayload.event, preparedPayload);\n    if (!(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, shouldRecord_fn).call(this, preparedPayload, event.eventSamplingRate)) {\n      return;\n    }\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _buffer).push(preparedPayload);\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, scheduleFlush_fn).call(this);\n  }\n};\n_config = new WeakMap();\n_eventThrottler = new WeakMap();\n_metadata = new WeakMap();\n_buffer = new WeakMap();\n_pendingFlush = new WeakMap();\n_TelemetryCollector_instances = new WeakSet();\nshouldRecord_fn = function(preparedPayload, eventSamplingRate) {\n  return this.isEnabled && !this.isDebug && (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, shouldBeSampled_fn).call(this, preparedPayload, eventSamplingRate);\n};\nshouldBeSampled_fn = function(preparedPayload, eventSamplingRate) {\n  const randomSeed = Math.random();\n  const toBeSampled = randomSeed <= (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _config).samplingRate && (typeof eventSamplingRate === \"undefined\" || randomSeed <= eventSamplingRate);\n  if (!toBeSampled) {\n    return false;\n  }\n  return !(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _eventThrottler).isEventThrottled(preparedPayload);\n};\nscheduleFlush_fn = function() {\n  if (typeof window === \"undefined\") {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n    return;\n  }\n  const isBufferFull = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _buffer).length >= (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _config).maxBufferSize;\n  if (isBufferFull) {\n    if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _pendingFlush)) {\n      const cancel = typeof cancelIdleCallback !== \"undefined\" ? cancelIdleCallback : clearTimeout;\n      cancel((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _pendingFlush));\n    }\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n    return;\n  }\n  if ((0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _pendingFlush)) {\n    return;\n  }\n  if (\"requestIdleCallback\" in window) {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateSet)(this, _pendingFlush, requestIdleCallback(() => {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n    }));\n  } else {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateSet)(this, _pendingFlush, setTimeout(() => {\n      (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, flush_fn).call(this);\n    }, 0));\n  }\n};\nflush_fn = function() {\n  fetch(new URL(\"/v1/event\", (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _config).endpoint), {\n    method: \"POST\",\n    // TODO: We send an array here with that idea that we can eventually send multiple events.\n    body: JSON.stringify({\n      events: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _buffer)\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).catch(() => void 0).then(() => {\n    (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateSet)(this, _buffer, []);\n  }).catch(() => void 0);\n};\n/**\n * If running in debug mode, log the event and its payload to the console.\n */\nlogEvent_fn = function(event, payload) {\n  if (!this.isDebug) {\n    return;\n  }\n  if (typeof console.groupCollapsed !== \"undefined\") {\n    console.groupCollapsed(\"[clerk/telemetry]\", event);\n    console.log(payload);\n    console.groupEnd();\n  } else {\n    console.log(\"[clerk/telemetry]\", event, payload);\n  }\n};\n/**\n * If in browser, attempt to lazily grab the SDK metadata from the Clerk singleton, otherwise fallback to the initially passed in values.\n *\n * This is necessary because the sdkMetadata can be set by the host SDK after the TelemetryCollector is instantiated.\n */\ngetSDKMetadata_fn = function() {\n  let sdkMetadata = {\n    name: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).sdk,\n    version: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).sdkVersion\n  };\n  if (typeof window !== \"undefined\" && window.Clerk) {\n    sdkMetadata = { ...sdkMetadata, ...window.Clerk.constructor.sdkMetadata };\n  }\n  return sdkMetadata;\n};\n/**\n * Append relevant metadata from the Clerk singleton to the event payload.\n */\npreparePayload_fn = function(event, payload) {\n  const sdkMetadata = (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateMethod)(this, _TelemetryCollector_instances, getSDKMetadata_fn).call(this);\n  return {\n    event,\n    cv: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).clerkVersion ?? \"\",\n    it: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).instanceType ?? \"\",\n    sdk: sdkMetadata.name,\n    sdkv: sdkMetadata.version,\n    ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).publishableKey ? { pk: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).publishableKey } : {},\n    ...(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).secretKey ? { sk: (0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_2__.__privateGet)(this, _metadata).secretKey } : {},\n    payload\n  };\n};\n\n// src/telemetry/events/component-mounted.ts\nvar EVENT_COMPONENT_MOUNTED = \"COMPONENT_MOUNTED\";\nvar EVENT_COMPONENT_OPENED = \"COMPONENT_OPENED\";\nvar EVENT_SAMPLING_RATE = 0.1;\nfunction createPrebuiltComponentEvent(event) {\n  return function(component, props, additionalPayload) {\n    return {\n      event,\n      eventSamplingRate: EVENT_SAMPLING_RATE,\n      payload: {\n        component,\n        appearanceProp: Boolean(props?.appearance),\n        baseTheme: Boolean(props?.appearance?.baseTheme),\n        elements: Boolean(props?.appearance?.elements),\n        variables: Boolean(props?.appearance?.variables),\n        ...additionalPayload\n      }\n    };\n  };\n}\nfunction eventPrebuiltComponentMounted(component, props, additionalPayload) {\n  return createPrebuiltComponentEvent(EVENT_COMPONENT_MOUNTED)(component, props, additionalPayload);\n}\nfunction eventPrebuiltComponentOpened(component, props, additionalPayload) {\n  return createPrebuiltComponentEvent(EVENT_COMPONENT_OPENED)(component, props, additionalPayload);\n}\nfunction eventComponentMounted(component, props = {}) {\n  return {\n    event: EVENT_COMPONENT_MOUNTED,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload: {\n      component,\n      ...props\n    }\n  };\n}\n\n// src/telemetry/events/method-called.ts\nvar EVENT_METHOD_CALLED = \"METHOD_CALLED\";\nfunction eventMethodCalled(method, payload) {\n  return {\n    event: EVENT_METHOD_CALLED,\n    payload: {\n      method,\n      ...payload\n    }\n  };\n}\n\n// src/telemetry/events/framework-metadata.ts\nvar EVENT_FRAMEWORK_METADATA = \"FRAMEWORK_METADATA\";\nvar EVENT_SAMPLING_RATE2 = 0.1;\nfunction eventFrameworkMetadata(payload) {\n  return {\n    event: EVENT_FRAMEWORK_METADATA,\n    eventSamplingRate: EVENT_SAMPLING_RATE2,\n    payload\n  };\n}\n\n\n//# sourceMappingURL=chunk-WIS7IYDJ.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-WIS7IYDJ.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-ZHPWRK4R.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-ZHPWRK4R.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWorkerTimers: () => (/* binding */ createWorkerTimers)\n/* harmony export */ });\n/* harmony import */ var _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7FNX7RWY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\");\n\n\n// src/workerTimers/workerTimers.worker.ts\nvar workerTimers_worker_default = 'const respond=r=>{self.postMessage(r)},workerToTabIds={};self.addEventListener(\"message\",r=>{const e=r.data;switch(e.type){case\"setTimeout\":workerToTabIds[e.id]=setTimeout(()=>{respond({id:e.id}),delete workerToTabIds[e.id]},e.ms);break;case\"clearTimeout\":workerToTabIds[e.id]&&(clearTimeout(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break;case\"setInterval\":workerToTabIds[e.id]=setInterval(()=>{respond({id:e.id})},e.ms);break;case\"clearInterval\":workerToTabIds[e.id]&&(clearInterval(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break}});\\n';\n\n// src/workerTimers/createWorkerTimers.ts\nvar createWebWorker = (source, opts = {}) => {\n  if (typeof Worker === \"undefined\") {\n    return null;\n  }\n  try {\n    const blob = new Blob([source], { type: \"application/javascript; charset=utf-8\" });\n    const workerScript = globalThis.URL.createObjectURL(blob);\n    return new Worker(workerScript, opts);\n  } catch {\n    console.warn(\"Clerk: Cannot create worker from blob. Consider adding worker-src blob:; to your CSP\");\n    return null;\n  }\n};\nvar fallbackTimers = () => {\n  const setTimeout = globalThis.setTimeout.bind(globalThis);\n  const setInterval = globalThis.setInterval.bind(globalThis);\n  const clearTimeout = globalThis.clearTimeout.bind(globalThis);\n  const clearInterval = globalThis.clearInterval.bind(globalThis);\n  return { setTimeout, setInterval, clearTimeout, clearInterval, cleanup: _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_0__.noop };\n};\nvar createWorkerTimers = () => {\n  let id = 0;\n  const generateId = () => id++;\n  const callbacks = /* @__PURE__ */ new Map();\n  const post = (w, p) => w?.postMessage(p);\n  const handleMessage = (e) => {\n    callbacks.get(e.data.id)?.();\n  };\n  let worker = createWebWorker(workerTimers_worker_default, { name: \"clerk-timers\" });\n  worker?.addEventListener(\"message\", handleMessage);\n  if (!worker) {\n    return fallbackTimers();\n  }\n  const init = () => {\n    if (!worker) {\n      worker = createWebWorker(workerTimers_worker_default, { name: \"clerk-timers\" });\n      worker?.addEventListener(\"message\", handleMessage);\n    }\n  };\n  const cleanup = () => {\n    if (worker) {\n      worker.terminate();\n      worker = null;\n      callbacks.clear();\n    }\n  };\n  const setTimeout = (cb, ms) => {\n    init();\n    const id2 = generateId();\n    callbacks.set(id2, () => {\n      cb();\n      callbacks.delete(id2);\n    });\n    post(worker, { type: \"setTimeout\", id: id2, ms });\n    return id2;\n  };\n  const setInterval = (cb, ms) => {\n    init();\n    const id2 = generateId();\n    callbacks.set(id2, cb);\n    post(worker, { type: \"setInterval\", id: id2, ms });\n    return id2;\n  };\n  const clearTimeout = (id2) => {\n    init();\n    callbacks.delete(id2);\n    post(worker, { type: \"clearTimeout\", id: id2 });\n  };\n  const clearInterval = (id2) => {\n    init();\n    callbacks.delete(id2);\n    post(worker, { type: \"clearInterval\", id: id2 });\n  };\n  return { setTimeout, setInterval, clearTimeout, clearInterval, cleanup };\n};\n\n\n//# sourceMappingURL=chunk-ZHPWRK4R.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstWkhQV1JLNFIubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRThCOztBQUU5QjtBQUNBLHFEQUFxRCxvQkFBb0IsbUJBQW1CLG9DQUFvQyxlQUFlLGVBQWUsc0RBQXNELFNBQVMsUUFBUSw4QkFBOEIsT0FBTyxNQUFNLDBHQUEwRyxNQUFNLHdEQUF3RCxTQUFTLFFBQVEsRUFBRSxPQUFPLE1BQU0sNEdBQTRHLE9BQU8sRUFBRTs7QUFFN2tCO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLCtCQUErQixnQkFBZ0I7QUFDckY7QUFDQTtBQUNBLElBQUk7QUFDSiwyRkFBMkY7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsK0RBQStELHFEQUFJO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxzQkFBc0I7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELHNCQUFzQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxtQkFBbUIsaUNBQWlDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQ0FBa0M7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwrQkFBK0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0NBQWdDO0FBQ25EO0FBQ0EsV0FBVztBQUNYOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1aSFBXUks0Ui5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgbm9vcFxufSBmcm9tIFwiLi9jaHVuay03Rk5YN1JXWS5tanNcIjtcblxuLy8gc3JjL3dvcmtlclRpbWVycy93b3JrZXJUaW1lcnMud29ya2VyLnRzXG52YXIgd29ya2VyVGltZXJzX3dvcmtlcl9kZWZhdWx0ID0gJ2NvbnN0IHJlc3BvbmQ9cj0+e3NlbGYucG9zdE1lc3NhZ2Uocil9LHdvcmtlclRvVGFiSWRzPXt9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixyPT57Y29uc3QgZT1yLmRhdGE7c3dpdGNoKGUudHlwZSl7Y2FzZVwic2V0VGltZW91dFwiOndvcmtlclRvVGFiSWRzW2UuaWRdPXNldFRpbWVvdXQoKCk9PntyZXNwb25kKHtpZDplLmlkfSksZGVsZXRlIHdvcmtlclRvVGFiSWRzW2UuaWRdfSxlLm1zKTticmVhaztjYXNlXCJjbGVhclRpbWVvdXRcIjp3b3JrZXJUb1RhYklkc1tlLmlkXSYmKGNsZWFyVGltZW91dCh3b3JrZXJUb1RhYklkc1tlLmlkXSksZGVsZXRlIHdvcmtlclRvVGFiSWRzW2UuaWRdKTticmVhaztjYXNlXCJzZXRJbnRlcnZhbFwiOndvcmtlclRvVGFiSWRzW2UuaWRdPXNldEludGVydmFsKCgpPT57cmVzcG9uZCh7aWQ6ZS5pZH0pfSxlLm1zKTticmVhaztjYXNlXCJjbGVhckludGVydmFsXCI6d29ya2VyVG9UYWJJZHNbZS5pZF0mJihjbGVhckludGVydmFsKHdvcmtlclRvVGFiSWRzW2UuaWRdKSxkZWxldGUgd29ya2VyVG9UYWJJZHNbZS5pZF0pO2JyZWFrfX0pO1xcbic7XG5cbi8vIHNyYy93b3JrZXJUaW1lcnMvY3JlYXRlV29ya2VyVGltZXJzLnRzXG52YXIgY3JlYXRlV2ViV29ya2VyID0gKHNvdXJjZSwgb3B0cyA9IHt9KSA9PiB7XG4gIGlmICh0eXBlb2YgV29ya2VyID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdHJ5IHtcbiAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW3NvdXJjZV0sIHsgdHlwZTogXCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0OyBjaGFyc2V0PXV0Zi04XCIgfSk7XG4gICAgY29uc3Qgd29ya2VyU2NyaXB0ID0gZ2xvYmFsVGhpcy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgIHJldHVybiBuZXcgV29ya2VyKHdvcmtlclNjcmlwdCwgb3B0cyk7XG4gIH0gY2F0Y2gge1xuICAgIGNvbnNvbGUud2FybihcIkNsZXJrOiBDYW5ub3QgY3JlYXRlIHdvcmtlciBmcm9tIGJsb2IuIENvbnNpZGVyIGFkZGluZyB3b3JrZXItc3JjIGJsb2I6OyB0byB5b3VyIENTUFwiKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTtcbnZhciBmYWxsYmFja1RpbWVycyA9ICgpID0+IHtcbiAgY29uc3Qgc2V0VGltZW91dCA9IGdsb2JhbFRoaXMuc2V0VGltZW91dC5iaW5kKGdsb2JhbFRoaXMpO1xuICBjb25zdCBzZXRJbnRlcnZhbCA9IGdsb2JhbFRoaXMuc2V0SW50ZXJ2YWwuYmluZChnbG9iYWxUaGlzKTtcbiAgY29uc3QgY2xlYXJUaW1lb3V0ID0gZ2xvYmFsVGhpcy5jbGVhclRpbWVvdXQuYmluZChnbG9iYWxUaGlzKTtcbiAgY29uc3QgY2xlYXJJbnRlcnZhbCA9IGdsb2JhbFRoaXMuY2xlYXJJbnRlcnZhbC5iaW5kKGdsb2JhbFRoaXMpO1xuICByZXR1cm4geyBzZXRUaW1lb3V0LCBzZXRJbnRlcnZhbCwgY2xlYXJUaW1lb3V0LCBjbGVhckludGVydmFsLCBjbGVhbnVwOiBub29wIH07XG59O1xudmFyIGNyZWF0ZVdvcmtlclRpbWVycyA9ICgpID0+IHtcbiAgbGV0IGlkID0gMDtcbiAgY29uc3QgZ2VuZXJhdGVJZCA9ICgpID0+IGlkKys7XG4gIGNvbnN0IGNhbGxiYWNrcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIGNvbnN0IHBvc3QgPSAodywgcCkgPT4gdz8ucG9zdE1lc3NhZ2UocCk7XG4gIGNvbnN0IGhhbmRsZU1lc3NhZ2UgPSAoZSkgPT4ge1xuICAgIGNhbGxiYWNrcy5nZXQoZS5kYXRhLmlkKT8uKCk7XG4gIH07XG4gIGxldCB3b3JrZXIgPSBjcmVhdGVXZWJXb3JrZXIod29ya2VyVGltZXJzX3dvcmtlcl9kZWZhdWx0LCB7IG5hbWU6IFwiY2xlcmstdGltZXJzXCIgfSk7XG4gIHdvcmtlcj8uYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgaGFuZGxlTWVzc2FnZSk7XG4gIGlmICghd29ya2VyKSB7XG4gICAgcmV0dXJuIGZhbGxiYWNrVGltZXJzKCk7XG4gIH1cbiAgY29uc3QgaW5pdCA9ICgpID0+IHtcbiAgICBpZiAoIXdvcmtlcikge1xuICAgICAgd29ya2VyID0gY3JlYXRlV2ViV29ya2VyKHdvcmtlclRpbWVyc193b3JrZXJfZGVmYXVsdCwgeyBuYW1lOiBcImNsZXJrLXRpbWVyc1wiIH0pO1xuICAgICAgd29ya2VyPy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBoYW5kbGVNZXNzYWdlKTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IGNsZWFudXAgPSAoKSA9PiB7XG4gICAgaWYgKHdvcmtlcikge1xuICAgICAgd29ya2VyLnRlcm1pbmF0ZSgpO1xuICAgICAgd29ya2VyID0gbnVsbDtcbiAgICAgIGNhbGxiYWNrcy5jbGVhcigpO1xuICAgIH1cbiAgfTtcbiAgY29uc3Qgc2V0VGltZW91dCA9IChjYiwgbXMpID0+IHtcbiAgICBpbml0KCk7XG4gICAgY29uc3QgaWQyID0gZ2VuZXJhdGVJZCgpO1xuICAgIGNhbGxiYWNrcy5zZXQoaWQyLCAoKSA9PiB7XG4gICAgICBjYigpO1xuICAgICAgY2FsbGJhY2tzLmRlbGV0ZShpZDIpO1xuICAgIH0pO1xuICAgIHBvc3Qod29ya2VyLCB7IHR5cGU6IFwic2V0VGltZW91dFwiLCBpZDogaWQyLCBtcyB9KTtcbiAgICByZXR1cm4gaWQyO1xuICB9O1xuICBjb25zdCBzZXRJbnRlcnZhbCA9IChjYiwgbXMpID0+IHtcbiAgICBpbml0KCk7XG4gICAgY29uc3QgaWQyID0gZ2VuZXJhdGVJZCgpO1xuICAgIGNhbGxiYWNrcy5zZXQoaWQyLCBjYik7XG4gICAgcG9zdCh3b3JrZXIsIHsgdHlwZTogXCJzZXRJbnRlcnZhbFwiLCBpZDogaWQyLCBtcyB9KTtcbiAgICByZXR1cm4gaWQyO1xuICB9O1xuICBjb25zdCBjbGVhclRpbWVvdXQgPSAoaWQyKSA9PiB7XG4gICAgaW5pdCgpO1xuICAgIGNhbGxiYWNrcy5kZWxldGUoaWQyKTtcbiAgICBwb3N0KHdvcmtlciwgeyB0eXBlOiBcImNsZWFyVGltZW91dFwiLCBpZDogaWQyIH0pO1xuICB9O1xuICBjb25zdCBjbGVhckludGVydmFsID0gKGlkMikgPT4ge1xuICAgIGluaXQoKTtcbiAgICBjYWxsYmFja3MuZGVsZXRlKGlkMik7XG4gICAgcG9zdCh3b3JrZXIsIHsgdHlwZTogXCJjbGVhckludGVydmFsXCIsIGlkOiBpZDIgfSk7XG4gIH07XG4gIHJldHVybiB7IHNldFRpbWVvdXQsIHNldEludGVydmFsLCBjbGVhclRpbWVvdXQsIGNsZWFySW50ZXJ2YWwsIGNsZWFudXAgfTtcbn07XG5cbmV4cG9ydCB7XG4gIGNyZWF0ZVdvcmtlclRpbWVyc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVpIUFdSSzRSLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-ZHPWRK4R.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/constants.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/constants.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_INSTANCE_SUFFIXES: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.CURRENT_DEV_INSTANCE_SUFFIXES),\n/* harmony export */   DEV_OR_STAGING_SUFFIXES: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.DEV_OR_STAGING_SUFFIXES),\n/* harmony export */   LEGACY_DEV_INSTANCE_SUFFIXES: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.LEGACY_DEV_INSTANCE_SUFFIXES),\n/* harmony export */   LOCAL_API_URL: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.LOCAL_API_URL),\n/* harmony export */   LOCAL_ENV_SUFFIXES: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.LOCAL_ENV_SUFFIXES),\n/* harmony export */   PROD_API_URL: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.PROD_API_URL),\n/* harmony export */   STAGING_API_URL: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.STAGING_API_URL),\n/* harmony export */   STAGING_ENV_SUFFIXES: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.STAGING_ENV_SUFFIXES),\n/* harmony export */   iconImageUrl: () => (/* reexport safe */ _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__.iconImageUrl)\n/* harmony export */ });\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=constants.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY29uc3RhbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQVU4QjtBQUNBO0FBVzVCO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jb25zdGFudHMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENVUlJFTlRfREVWX0lOU1RBTkNFX1NVRkZJWEVTLFxuICBERVZfT1JfU1RBR0lOR19TVUZGSVhFUyxcbiAgTEVHQUNZX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyxcbiAgTE9DQUxfQVBJX1VSTCxcbiAgTE9DQUxfRU5WX1NVRkZJWEVTLFxuICBQUk9EX0FQSV9VUkwsXG4gIFNUQUdJTkdfQVBJX1VSTCxcbiAgU1RBR0lOR19FTlZfU1VGRklYRVMsXG4gIGljb25JbWFnZVVybFxufSBmcm9tIFwiLi9jaHVuay1JNk1UU1RPRi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBDVVJSRU5UX0RFVl9JTlNUQU5DRV9TVUZGSVhFUyxcbiAgREVWX09SX1NUQUdJTkdfU1VGRklYRVMsXG4gIExFR0FDWV9ERVZfSU5TVEFOQ0VfU1VGRklYRVMsXG4gIExPQ0FMX0FQSV9VUkwsXG4gIExPQ0FMX0VOVl9TVUZGSVhFUyxcbiAgUFJPRF9BUElfVVJMLFxuICBTVEFHSU5HX0FQSV9VUkwsXG4gIFNUQUdJTkdfRU5WX1NVRkZJWEVTLFxuICBpY29uSW1hZ2VVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/constants.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/error.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/error.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkAPIResponseError),\n/* harmony export */   ClerkRuntimeError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkRuntimeError),\n/* harmony export */   ClerkWebAuthnError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkWebAuthnError),\n/* harmony export */   EmailLinkError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkError),\n/* harmony export */   EmailLinkErrorCode: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkErrorCode),\n/* harmony export */   EmailLinkErrorCodeStatus: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkErrorCodeStatus),\n/* harmony export */   buildErrorThrower: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower),\n/* harmony export */   errorToJSON: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.errorToJSON),\n/* harmony export */   is4xxError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.is4xxError),\n/* harmony export */   isCaptchaError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isCaptchaError),\n/* harmony export */   isClerkAPIResponseError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkAPIResponseError),\n/* harmony export */   isClerkRuntimeError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkRuntimeError),\n/* harmony export */   isEmailLinkError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isEmailLinkError),\n/* harmony export */   isKnownError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isKnownError),\n/* harmony export */   isMetamaskError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isMetamaskError),\n/* harmony export */   isNetworkError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isNetworkError),\n/* harmony export */   isPasswordPwnedError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isPasswordPwnedError),\n/* harmony export */   isReverificationCancelledError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isReverificationCancelledError),\n/* harmony export */   isUnauthorizedError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnauthorizedError),\n/* harmony export */   isUserLockedError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.isUserLockedError),\n/* harmony export */   parseError: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.parseError),\n/* harmony export */   parseErrors: () => (/* reexport safe */ _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__.parseErrors)\n/* harmony export */ });\n/* harmony import */ var _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-NT4JRXL3.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-NT4JRXL3.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=error.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCOEI7QUFDQTtBQXdCNUI7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2Vycm9yLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDbGVya0FQSVJlc3BvbnNlRXJyb3IsXG4gIENsZXJrUnVudGltZUVycm9yLFxuICBDbGVya1dlYkF1dGhuRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yLFxuICBFbWFpbExpbmtFcnJvckNvZGUsXG4gIEVtYWlsTGlua0Vycm9yQ29kZVN0YXR1cyxcbiAgYnVpbGRFcnJvclRocm93ZXIsXG4gIGVycm9yVG9KU09OLFxuICBpczR4eEVycm9yLFxuICBpc0NhcHRjaGFFcnJvcixcbiAgaXNDbGVya0FQSVJlc3BvbnNlRXJyb3IsXG4gIGlzQ2xlcmtSdW50aW1lRXJyb3IsXG4gIGlzRW1haWxMaW5rRXJyb3IsXG4gIGlzS25vd25FcnJvcixcbiAgaXNNZXRhbWFza0Vycm9yLFxuICBpc05ldHdvcmtFcnJvcixcbiAgaXNQYXNzd29yZFB3bmVkRXJyb3IsXG4gIGlzUmV2ZXJpZmljYXRpb25DYW5jZWxsZWRFcnJvcixcbiAgaXNVbmF1dGhvcml6ZWRFcnJvcixcbiAgaXNVc2VyTG9ja2VkRXJyb3IsXG4gIHBhcnNlRXJyb3IsXG4gIHBhcnNlRXJyb3JzXG59IGZyb20gXCIuL2NodW5rLU5UNEpSWEwzLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIENsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgQ2xlcmtSdW50aW1lRXJyb3IsXG4gIENsZXJrV2ViQXV0aG5FcnJvcixcbiAgRW1haWxMaW5rRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yQ29kZSxcbiAgRW1haWxMaW5rRXJyb3JDb2RlU3RhdHVzLFxuICBidWlsZEVycm9yVGhyb3dlcixcbiAgZXJyb3JUb0pTT04sXG4gIGlzNHh4RXJyb3IsXG4gIGlzQ2FwdGNoYUVycm9yLFxuICBpc0NsZXJrQVBJUmVzcG9uc2VFcnJvcixcbiAgaXNDbGVya1J1bnRpbWVFcnJvcixcbiAgaXNFbWFpbExpbmtFcnJvcixcbiAgaXNLbm93bkVycm9yLFxuICBpc01ldGFtYXNrRXJyb3IsXG4gIGlzTmV0d29ya0Vycm9yLFxuICBpc1Bhc3N3b3JkUHduZWRFcnJvcixcbiAgaXNSZXZlcmlmaWNhdGlvbkNhbmNlbGxlZEVycm9yLFxuICBpc1VuYXV0aG9yaXplZEVycm9yLFxuICBpc1VzZXJMb2NrZWRFcnJvcixcbiAgcGFyc2VFcnJvcixcbiAgcGFyc2VFcnJvcnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/error.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/logger.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/logger.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* reexport safe */ _chunk_CYDR2ZSA_mjs__WEBPACK_IMPORTED_MODULE_0__.logger)\n/* harmony export */ });\n/* harmony import */ var _chunk_CYDR2ZSA_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-CYDR2ZSA.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-CYDR2ZSA.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=logger.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvbG9nZ2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFOEI7QUFDQTtBQUc1QjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvbG9nZ2VyLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBsb2dnZXJcbn0gZnJvbSBcIi4vY2h1bmstQ1lEUjJaU0EubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgbG9nZ2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2VyLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/logger.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/oauth.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/oauth.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OAUTH_PROVIDERS: () => (/* binding */ OAUTH_PROVIDERS),\n/* harmony export */   getOAuthProviderData: () => (/* binding */ getOAuthProviderData)\n/* harmony export */ });\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n// src/oauth.ts\nvar OAUTH_PROVIDERS = [\n  {\n    provider: \"google\",\n    strategy: \"oauth_google\",\n    name: \"Google\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/google\"\n  },\n  {\n    provider: \"discord\",\n    strategy: \"oauth_discord\",\n    name: \"Discord\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/discord\"\n  },\n  {\n    provider: \"facebook\",\n    strategy: \"oauth_facebook\",\n    name: \"Facebook\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/facebook\"\n  },\n  {\n    provider: \"twitch\",\n    strategy: \"oauth_twitch\",\n    name: \"Twitch\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/twitch\"\n  },\n  {\n    provider: \"twitter\",\n    strategy: \"oauth_twitter\",\n    name: \"Twitter\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/twitter\"\n  },\n  {\n    provider: \"microsoft\",\n    strategy: \"oauth_microsoft\",\n    name: \"Microsoft\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/microsoft\"\n  },\n  {\n    provider: \"tiktok\",\n    strategy: \"oauth_tiktok\",\n    name: \"TikTok\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/tiktok\"\n  },\n  {\n    provider: \"linkedin\",\n    strategy: \"oauth_linkedin\",\n    name: \"LinkedIn\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/linkedin\"\n  },\n  {\n    provider: \"linkedin_oidc\",\n    strategy: \"oauth_linkedin_oidc\",\n    name: \"LinkedIn\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/linkedin-oidc\"\n  },\n  {\n    provider: \"github\",\n    strategy: \"oauth_github\",\n    name: \"GitHub\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/github\"\n  },\n  {\n    provider: \"gitlab\",\n    strategy: \"oauth_gitlab\",\n    name: \"GitLab\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/gitlab\"\n  },\n  {\n    provider: \"dropbox\",\n    strategy: \"oauth_dropbox\",\n    name: \"Dropbox\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/dropbox\"\n  },\n  {\n    provider: \"atlassian\",\n    strategy: \"oauth_atlassian\",\n    name: \"Atlassian\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/atlassian\"\n  },\n  {\n    provider: \"bitbucket\",\n    strategy: \"oauth_bitbucket\",\n    name: \"Bitbucket\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/bitbucket\"\n  },\n  {\n    provider: \"hubspot\",\n    strategy: \"oauth_hubspot\",\n    name: \"HubSpot\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/hubspot\"\n  },\n  {\n    provider: \"notion\",\n    strategy: \"oauth_notion\",\n    name: \"Notion\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/notion\"\n  },\n  {\n    provider: \"apple\",\n    strategy: \"oauth_apple\",\n    name: \"Apple\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/apple\"\n  },\n  {\n    provider: \"line\",\n    strategy: \"oauth_line\",\n    name: \"LINE\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/line\"\n  },\n  {\n    provider: \"instagram\",\n    strategy: \"oauth_instagram\",\n    name: \"Instagram\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/instagram\"\n  },\n  {\n    provider: \"coinbase\",\n    strategy: \"oauth_coinbase\",\n    name: \"Coinbase\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/coinbase\"\n  },\n  {\n    provider: \"spotify\",\n    strategy: \"oauth_spotify\",\n    name: \"Spotify\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/spotify\"\n  },\n  {\n    provider: \"xero\",\n    strategy: \"oauth_xero\",\n    name: \"Xero\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/xero\"\n  },\n  {\n    provider: \"box\",\n    strategy: \"oauth_box\",\n    name: \"Box\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/box\"\n  },\n  {\n    provider: \"slack\",\n    strategy: \"oauth_slack\",\n    name: \"Slack\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/slack\"\n  },\n  {\n    provider: \"linear\",\n    strategy: \"oauth_linear\",\n    name: \"Linear\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/linear\"\n  },\n  {\n    provider: \"x\",\n    strategy: \"oauth_x\",\n    name: \"X / Twitter\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/x-twitter-v2\"\n  },\n  {\n    provider: \"enstall\",\n    strategy: \"oauth_enstall\",\n    name: \"Enstall\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/enstall\"\n  },\n  {\n    provider: \"huggingface\",\n    strategy: \"oauth_huggingface\",\n    name: \"Hugging Face\",\n    docsUrl: \"https://clerk.com/docs/authentication/social-connections/huggingface\"\n  }\n];\nfunction getOAuthProviderData({\n  provider,\n  strategy\n}) {\n  if (provider) {\n    return OAUTH_PROVIDERS.find((oauth_provider) => oauth_provider.provider == provider);\n  }\n  return OAUTH_PROVIDERS.find((oauth_provider) => oauth_provider.strategy == strategy);\n}\n\n//# sourceMappingURL=oauth.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/oauth.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/poller.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/poller.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Poller: () => (/* reexport safe */ _chunk_JY46X3OC_mjs__WEBPACK_IMPORTED_MODULE_0__.Poller)\n/* harmony export */ });\n/* harmony import */ var _chunk_JY46X3OC_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-JY46X3OC.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-JY46X3OC.mjs\");\n/* harmony import */ var _chunk_ZHPWRK4R_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-ZHPWRK4R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-ZHPWRK4R.mjs\");\n/* harmony import */ var _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-7FNX7RWY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n//# sourceMappingURL=poller.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvcG9sbGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUU4QjtBQUNBO0FBQ0E7QUFDQTtBQUc1QjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvcG9sbGVyLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBQb2xsZXJcbn0gZnJvbSBcIi4vY2h1bmstSlk0NlgzT0MubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVpIUFdSSzRSLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03Rk5YN1JXWS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBQb2xsZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb2xsZXIubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/poller.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/react/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkInstanceContext: () => (/* binding */ ClerkInstanceContext),\n/* harmony export */   ClientContext: () => (/* binding */ ClientContext),\n/* harmony export */   OptionsContext: () => (/* binding */ OptionsContext),\n/* harmony export */   OrganizationProvider: () => (/* binding */ OrganizationProvider),\n/* harmony export */   SessionContext: () => (/* binding */ SessionContext),\n/* harmony export */   UserContext: () => (/* binding */ UserContext),\n/* harmony export */   assertContextExists: () => (/* binding */ assertContextExists),\n/* harmony export */   createContextAndHook: () => (/* binding */ createContextAndHook),\n/* harmony export */   isDeeplyEqual: () => (/* binding */ isDeeplyEqual),\n/* harmony export */   useAssertWrappedByClerkProvider: () => (/* binding */ useAssertWrappedByClerkProvider),\n/* harmony export */   useClerk: () => (/* binding */ useClerk),\n/* harmony export */   useClerkInstanceContext: () => (/* binding */ useClerkInstanceContext),\n/* harmony export */   useClientContext: () => (/* binding */ useClientContext),\n/* harmony export */   useDeepEqualMemo: () => (/* binding */ useDeepEqualMemo),\n/* harmony export */   useOptionsContext: () => (/* binding */ useOptionsContext),\n/* harmony export */   useOrganization: () => (/* binding */ useOrganization),\n/* harmony export */   useOrganizationContext: () => (/* binding */ useOrganizationContext),\n/* harmony export */   useOrganizationList: () => (/* binding */ useOrganizationList),\n/* harmony export */   useReverification: () => (/* binding */ useReverification),\n/* harmony export */   useSafeLayoutEffect: () => (/* binding */ useSafeLayoutEffect),\n/* harmony export */   useSession: () => (/* binding */ useSession),\n/* harmony export */   useSessionContext: () => (/* binding */ useSessionContext),\n/* harmony export */   useSessionList: () => (/* binding */ useSessionList),\n/* harmony export */   useUser: () => (/* binding */ useUser),\n/* harmony export */   useUserContext: () => (/* binding */ useUserContext)\n/* harmony export */ });\n/* harmony import */ var _chunk_IBXKDGSZ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-IBXKDGSZ.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IBXKDGSZ.mjs\");\n/* harmony import */ var _chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk-WIS7IYDJ.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-WIS7IYDJ.mjs\");\n/* harmony import */ var _chunk_7QJ2QTJL_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunk-7QJ2QTJL.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7QJ2QTJL.mjs\");\n/* harmony import */ var _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chunk-7FNX7RWY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\");\n/* harmony import */ var _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chunk-GGFRMWFO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-GGFRMWFO.mjs\");\n/* harmony import */ var _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../chunk-NT4JRXL3.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-NT4JRXL3.mjs\");\n/* harmony import */ var _chunk_QU372XZW_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../chunk-QU372XZW.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QU372XZW.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_43A5F2IE_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../chunk-43A5F2IE.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-43A5F2IE.mjs\");\n/* harmony import */ var _chunk_3CN5LOSN_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../chunk-3CN5LOSN.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3CN5LOSN.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! swr */ \"(app-pages-browser)/./node_modules/swr/dist/index/index.mjs\");\n/* harmony import */ var swr_infinite__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! swr/infinite */ \"(app-pages-browser)/./node_modules/swr/dist/infinite/index.mjs\");\n/* harmony import */ var dequal__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! dequal */ \"(app-pages-browser)/./node_modules/dequal/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// src/react/hooks/createContextAndHook.ts\n\nfunction assertContextExists(contextVal, msgOrCtx) {\n  if (!contextVal) {\n    throw typeof msgOrCtx === \"string\" ? new Error(msgOrCtx) : new Error(`${msgOrCtx.displayName} not found`);\n  }\n}\nvar createContextAndHook = (displayName, options) => {\n  const { assertCtxFn = assertContextExists } = options || {};\n  const Ctx = react__WEBPACK_IMPORTED_MODULE_13__.createContext(void 0);\n  Ctx.displayName = displayName;\n  const useCtx = () => {\n    const ctx = react__WEBPACK_IMPORTED_MODULE_13__.useContext(Ctx);\n    assertCtxFn(ctx, `${displayName} not found`);\n    return ctx.value;\n  };\n  const useCtxWithoutGuarantee = () => {\n    const ctx = react__WEBPACK_IMPORTED_MODULE_13__.useContext(Ctx);\n    return ctx ? ctx.value : {};\n  };\n  return [Ctx, useCtx, useCtxWithoutGuarantee];\n};\n\n// src/react/contexts.tsx\n\n\n// src/react/clerk-swr.ts\nvar clerk_swr_exports = {};\n(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_12__.__export)(clerk_swr_exports, {\n  useSWR: () => swr__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n  useSWRInfinite: () => swr_infinite__WEBPACK_IMPORTED_MODULE_15__[\"default\"]\n});\n(0,_chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_12__.__reExport)(clerk_swr_exports, swr__WEBPACK_IMPORTED_MODULE_14__);\n\n\n\n\n// src/react/contexts.tsx\nvar [ClerkInstanceContext, useClerkInstanceContext] = createContextAndHook(\"ClerkInstanceContext\");\nvar [UserContext, useUserContext] = createContextAndHook(\"UserContext\");\nvar [ClientContext, useClientContext] = createContextAndHook(\"ClientContext\");\nvar [SessionContext, useSessionContext] = createContextAndHook(\n  \"SessionContext\"\n);\nvar OptionsContext = react__WEBPACK_IMPORTED_MODULE_13__.createContext({});\nfunction useOptionsContext() {\n  const context = react__WEBPACK_IMPORTED_MODULE_13__.useContext(OptionsContext);\n  if (context === void 0) {\n    throw new Error(\"useOptions must be used within an OptionsContext\");\n  }\n  return context;\n}\nvar [OrganizationContextInternal, useOrganizationContext] = createContextAndHook(\"OrganizationContext\");\nvar OrganizationProvider = ({\n  children,\n  organization,\n  swrConfig\n}) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_13__.createElement(clerk_swr_exports.SWRConfig, { value: swrConfig }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_13__.createElement(\n    OrganizationContextInternal.Provider,\n    {\n      value: {\n        value: { organization }\n      }\n    },\n    children\n  ));\n};\nfunction useAssertWrappedByClerkProvider(displayNameOrFn) {\n  const ctx = react__WEBPACK_IMPORTED_MODULE_13__.useContext(ClerkInstanceContext);\n  if (!ctx) {\n    if (typeof displayNameOrFn === \"function\") {\n      displayNameOrFn();\n      return;\n    }\n    throw new Error(\n      `${displayNameOrFn} can only be used within the <ClerkProvider /> component.\n\nPossible fixes:\n1. Ensure that the <ClerkProvider /> is correctly wrapping your application where this component is used.\n2. Check for multiple versions of the \\`@clerk/shared\\` package in your project. Use a tool like \\`npm ls @clerk/shared\\` to identify multiple versions, and update your dependencies to only rely on one.\n\nLearn more: https://clerk.com/docs/components/clerk-provider`.trim()\n    );\n  }\n}\n\n// src/react/hooks/usePagesOrInfinite.ts\n\nfunction getDifferentKeys(obj1, obj2) {\n  const keysSet = new Set(Object.keys(obj2));\n  const differentKeysObject = {};\n  for (const key1 of Object.keys(obj1)) {\n    if (!keysSet.has(key1)) {\n      differentKeysObject[key1] = obj1[key1];\n    }\n  }\n  return differentKeysObject;\n}\nvar useWithSafeValues = (params, defaultValues) => {\n  const shouldUseDefaults = typeof params === \"boolean\" && params;\n  const initialPageRef = (0,react__WEBPACK_IMPORTED_MODULE_13__.useRef)(\n    shouldUseDefaults ? defaultValues.initialPage : params?.initialPage ?? defaultValues.initialPage\n  );\n  const pageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_13__.useRef)(shouldUseDefaults ? defaultValues.pageSize : params?.pageSize ?? defaultValues.pageSize);\n  const newObj = {};\n  for (const key of Object.keys(defaultValues)) {\n    newObj[key] = shouldUseDefaults ? defaultValues[key] : params?.[key] ?? defaultValues[key];\n  }\n  return {\n    ...newObj,\n    initialPage: initialPageRef.current,\n    pageSize: pageSizeRef.current\n  };\n};\nvar cachingSWROptions = {\n  dedupingInterval: 1e3 * 60,\n  focusThrottleInterval: 1e3 * 60 * 2\n};\nvar usePagesOrInfinite = (params, fetcher, config, cacheKeys) => {\n  const [paginatedPage, setPaginatedPage] = (0,react__WEBPACK_IMPORTED_MODULE_13__.useState)(params.initialPage ?? 1);\n  const initialPageRef = (0,react__WEBPACK_IMPORTED_MODULE_13__.useRef)(params.initialPage ?? 1);\n  const pageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_13__.useRef)(params.pageSize ?? 10);\n  const enabled = config.enabled ?? true;\n  const triggerInfinite = config.infinite ?? false;\n  const keepPreviousData = config.keepPreviousData ?? false;\n  const pagesCacheKey = {\n    ...cacheKeys,\n    ...params,\n    initialPage: paginatedPage,\n    pageSize: pageSizeRef.current\n  };\n  const {\n    data: swrData,\n    isValidating: swrIsValidating,\n    isLoading: swrIsLoading,\n    error: swrError,\n    mutate: swrMutate\n  } = (0,swr__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(\n    !triggerInfinite && !!fetcher && enabled ? pagesCacheKey : null,\n    (cacheKeyParams) => {\n      const requestParams = getDifferentKeys(cacheKeyParams, cacheKeys);\n      return fetcher?.(requestParams);\n    },\n    { keepPreviousData, ...cachingSWROptions }\n  );\n  const {\n    data: swrInfiniteData,\n    isLoading: swrInfiniteIsLoading,\n    isValidating: swrInfiniteIsValidating,\n    error: swrInfiniteError,\n    size,\n    setSize,\n    mutate: swrInfiniteMutate\n  } = (0,swr_infinite__WEBPACK_IMPORTED_MODULE_15__[\"default\"])(\n    (pageIndex) => {\n      if (!triggerInfinite || !enabled) {\n        return null;\n      }\n      return {\n        ...params,\n        ...cacheKeys,\n        initialPage: initialPageRef.current + pageIndex,\n        pageSize: pageSizeRef.current\n      };\n    },\n    (cacheKeyParams) => {\n      const requestParams = getDifferentKeys(cacheKeyParams, cacheKeys);\n      return fetcher?.(requestParams);\n    },\n    cachingSWROptions\n  );\n  const page = (0,react__WEBPACK_IMPORTED_MODULE_13__.useMemo)(() => {\n    if (triggerInfinite) {\n      return size;\n    }\n    return paginatedPage;\n  }, [triggerInfinite, size, paginatedPage]);\n  const fetchPage = (0,react__WEBPACK_IMPORTED_MODULE_13__.useCallback)(\n    (numberOrgFn) => {\n      if (triggerInfinite) {\n        void setSize(numberOrgFn);\n        return;\n      }\n      return setPaginatedPage(numberOrgFn);\n    },\n    [setSize]\n  );\n  const data = (0,react__WEBPACK_IMPORTED_MODULE_13__.useMemo)(() => {\n    if (triggerInfinite) {\n      return swrInfiniteData?.map((a) => a?.data).flat() ?? [];\n    }\n    return swrData?.data ?? [];\n  }, [triggerInfinite, swrData, swrInfiniteData]);\n  const count = (0,react__WEBPACK_IMPORTED_MODULE_13__.useMemo)(() => {\n    if (triggerInfinite) {\n      return swrInfiniteData?.[swrInfiniteData?.length - 1]?.total_count || 0;\n    }\n    return swrData?.total_count ?? 0;\n  }, [triggerInfinite, swrData, swrInfiniteData]);\n  const isLoading = triggerInfinite ? swrInfiniteIsLoading : swrIsLoading;\n  const isFetching = triggerInfinite ? swrInfiniteIsValidating : swrIsValidating;\n  const error = (triggerInfinite ? swrInfiniteError : swrError) ?? null;\n  const isError = !!error;\n  const fetchNext = (0,react__WEBPACK_IMPORTED_MODULE_13__.useCallback)(() => {\n    fetchPage((n) => Math.max(0, n + 1));\n  }, [fetchPage]);\n  const fetchPrevious = (0,react__WEBPACK_IMPORTED_MODULE_13__.useCallback)(() => {\n    fetchPage((n) => Math.max(0, n - 1));\n  }, [fetchPage]);\n  const offsetCount = (initialPageRef.current - 1) * pageSizeRef.current;\n  const pageCount = Math.ceil((count - offsetCount) / pageSizeRef.current);\n  const hasNextPage = count - offsetCount * pageSizeRef.current > page * pageSizeRef.current;\n  const hasPreviousPage = (page - 1) * pageSizeRef.current > offsetCount * pageSizeRef.current;\n  const setData = triggerInfinite ? (value) => swrInfiniteMutate(value, {\n    revalidate: false\n  }) : (value) => swrMutate(value, {\n    revalidate: false\n  });\n  const revalidate = triggerInfinite ? () => swrInfiniteMutate() : () => swrMutate();\n  return {\n    data,\n    count,\n    error,\n    isLoading,\n    isFetching,\n    isError,\n    page,\n    pageCount,\n    fetchPage,\n    fetchNext,\n    fetchPrevious,\n    hasNextPage,\n    hasPreviousPage,\n    // Let the hook return type define this type\n    revalidate,\n    // Let the hook return type define this type\n    setData\n  };\n};\n\n// src/react/hooks/useOrganization.tsx\nvar undefinedPaginatedResource = {\n  data: void 0,\n  count: void 0,\n  error: void 0,\n  isLoading: false,\n  isFetching: false,\n  isError: false,\n  page: void 0,\n  pageCount: void 0,\n  fetchPage: void 0,\n  fetchNext: void 0,\n  fetchPrevious: void 0,\n  hasNextPage: false,\n  hasPreviousPage: false,\n  revalidate: void 0,\n  setData: void 0\n};\nfunction useOrganization(params) {\n  const {\n    domains: domainListParams,\n    membershipRequests: membershipRequestsListParams,\n    memberships: membersListParams,\n    invitations: invitationsListParams,\n    subscriptions: subscriptionsListParams\n  } = params || {};\n  useAssertWrappedByClerkProvider(\"useOrganization\");\n  const { organization } = useOrganizationContext();\n  const session = useSessionContext();\n  const domainSafeValues = useWithSafeValues(domainListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false,\n    enrollmentMode: void 0\n  });\n  const membershipRequestSafeValues = useWithSafeValues(membershipRequestsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const membersSafeValues = useWithSafeValues(membersListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    role: void 0,\n    keepPreviousData: false,\n    infinite: false,\n    query: void 0\n  });\n  const invitationsSafeValues = useWithSafeValues(invitationsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    status: [\"pending\"],\n    keepPreviousData: false,\n    infinite: false\n  });\n  const subscriptionsSafeValues = useWithSafeValues(subscriptionsListParams, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false\n  });\n  const clerk = useClerkInstanceContext();\n  clerk.telemetry?.record((0,_chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_1__.eventMethodCalled)(\"useOrganization\"));\n  const domainParams = typeof domainListParams === \"undefined\" ? void 0 : {\n    initialPage: domainSafeValues.initialPage,\n    pageSize: domainSafeValues.pageSize,\n    enrollmentMode: domainSafeValues.enrollmentMode\n  };\n  const membershipRequestParams = typeof membershipRequestsListParams === \"undefined\" ? void 0 : {\n    initialPage: membershipRequestSafeValues.initialPage,\n    pageSize: membershipRequestSafeValues.pageSize,\n    status: membershipRequestSafeValues.status\n  };\n  const membersParams = typeof membersListParams === \"undefined\" ? void 0 : {\n    initialPage: membersSafeValues.initialPage,\n    pageSize: membersSafeValues.pageSize,\n    role: membersSafeValues.role,\n    query: membersSafeValues.query\n  };\n  const invitationsParams = typeof invitationsListParams === \"undefined\" ? void 0 : {\n    initialPage: invitationsSafeValues.initialPage,\n    pageSize: invitationsSafeValues.pageSize,\n    status: invitationsSafeValues.status\n  };\n  const subscriptionsParams = typeof subscriptionsListParams === \"undefined\" ? void 0 : {\n    initialPage: subscriptionsSafeValues.initialPage,\n    pageSize: subscriptionsSafeValues.pageSize,\n    orgId: organization?.id\n  };\n  const domains = usePagesOrInfinite(\n    {\n      ...domainParams\n    },\n    organization?.getDomains,\n    {\n      keepPreviousData: domainSafeValues.keepPreviousData,\n      infinite: domainSafeValues.infinite,\n      enabled: !!domainParams\n    },\n    {\n      type: \"domains\",\n      organizationId: organization?.id\n    }\n  );\n  const membershipRequests = usePagesOrInfinite(\n    {\n      ...membershipRequestParams\n    },\n    organization?.getMembershipRequests,\n    {\n      keepPreviousData: membershipRequestSafeValues.keepPreviousData,\n      infinite: membershipRequestSafeValues.infinite,\n      enabled: !!membershipRequestParams\n    },\n    {\n      type: \"membershipRequests\",\n      organizationId: organization?.id\n    }\n  );\n  const memberships = usePagesOrInfinite(\n    membersParams || {},\n    organization?.getMemberships,\n    {\n      keepPreviousData: membersSafeValues.keepPreviousData,\n      infinite: membersSafeValues.infinite,\n      enabled: !!membersParams\n    },\n    {\n      type: \"members\",\n      organizationId: organization?.id\n    }\n  );\n  const invitations = usePagesOrInfinite(\n    {\n      ...invitationsParams\n    },\n    organization?.getInvitations,\n    {\n      keepPreviousData: invitationsSafeValues.keepPreviousData,\n      infinite: invitationsSafeValues.infinite,\n      enabled: !!invitationsParams\n    },\n    {\n      type: \"invitations\",\n      organizationId: organization?.id\n    }\n  );\n  const subscriptions = usePagesOrInfinite(\n    {\n      ...subscriptionsParams\n    },\n    organization?.getSubscriptions,\n    {\n      keepPreviousData: subscriptionsSafeValues.keepPreviousData,\n      infinite: subscriptionsSafeValues.infinite,\n      enabled: !!subscriptionsParams\n    },\n    {\n      type: \"subscriptions\",\n      organizationId: organization?.id\n    }\n  );\n  if (organization === void 0) {\n    return {\n      isLoaded: false,\n      organization: void 0,\n      membership: void 0,\n      domains: undefinedPaginatedResource,\n      membershipRequests: undefinedPaginatedResource,\n      memberships: undefinedPaginatedResource,\n      invitations: undefinedPaginatedResource,\n      subscriptions: undefinedPaginatedResource\n    };\n  }\n  if (organization === null) {\n    return {\n      isLoaded: true,\n      organization: null,\n      membership: null,\n      domains: null,\n      membershipRequests: null,\n      memberships: null,\n      invitations: null,\n      subscriptions: null\n    };\n  }\n  if (!clerk.loaded && organization) {\n    return {\n      isLoaded: true,\n      organization,\n      membership: void 0,\n      domains: undefinedPaginatedResource,\n      membershipRequests: undefinedPaginatedResource,\n      memberships: undefinedPaginatedResource,\n      invitations: undefinedPaginatedResource,\n      subscriptions: undefinedPaginatedResource\n    };\n  }\n  return {\n    isLoaded: clerk.loaded,\n    organization,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    membership: (0,_chunk_IBXKDGSZ_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentOrganizationMembership)(session.user.organizationMemberships, organization.id),\n    // your membership in the current org\n    domains,\n    membershipRequests,\n    memberships,\n    invitations,\n    subscriptions\n  };\n}\n\n// src/react/hooks/useOrganizationList.tsx\nvar undefinedPaginatedResource2 = {\n  data: void 0,\n  count: void 0,\n  error: void 0,\n  isLoading: false,\n  isFetching: false,\n  isError: false,\n  page: void 0,\n  pageCount: void 0,\n  fetchPage: void 0,\n  fetchNext: void 0,\n  fetchPrevious: void 0,\n  hasNextPage: false,\n  hasPreviousPage: false,\n  revalidate: void 0,\n  setData: void 0\n};\nfunction useOrganizationList(params) {\n  const { userMemberships, userInvitations, userSuggestions } = params || {};\n  useAssertWrappedByClerkProvider(\"useOrganizationList\");\n  const userMembershipsSafeValues = useWithSafeValues(userMemberships, {\n    initialPage: 1,\n    pageSize: 10,\n    keepPreviousData: false,\n    infinite: false\n  });\n  const userInvitationsSafeValues = useWithSafeValues(userInvitations, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const userSuggestionsSafeValues = useWithSafeValues(userSuggestions, {\n    initialPage: 1,\n    pageSize: 10,\n    status: \"pending\",\n    keepPreviousData: false,\n    infinite: false\n  });\n  const clerk = useClerkInstanceContext();\n  const user = useUserContext();\n  clerk.telemetry?.record((0,_chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_1__.eventMethodCalled)(\"useOrganizationList\"));\n  const userMembershipsParams = typeof userMemberships === \"undefined\" ? void 0 : {\n    initialPage: userMembershipsSafeValues.initialPage,\n    pageSize: userMembershipsSafeValues.pageSize\n  };\n  const userInvitationsParams = typeof userInvitations === \"undefined\" ? void 0 : {\n    initialPage: userInvitationsSafeValues.initialPage,\n    pageSize: userInvitationsSafeValues.pageSize,\n    status: userInvitationsSafeValues.status\n  };\n  const userSuggestionsParams = typeof userSuggestions === \"undefined\" ? void 0 : {\n    initialPage: userSuggestionsSafeValues.initialPage,\n    pageSize: userSuggestionsSafeValues.pageSize,\n    status: userSuggestionsSafeValues.status\n  };\n  const isClerkLoaded = !!(clerk.loaded && user);\n  const memberships = usePagesOrInfinite(\n    userMembershipsParams || {},\n    user?.getOrganizationMemberships,\n    {\n      keepPreviousData: userMembershipsSafeValues.keepPreviousData,\n      infinite: userMembershipsSafeValues.infinite,\n      enabled: !!userMembershipsParams\n    },\n    {\n      type: \"userMemberships\",\n      userId: user?.id\n    }\n  );\n  const invitations = usePagesOrInfinite(\n    {\n      ...userInvitationsParams\n    },\n    user?.getOrganizationInvitations,\n    {\n      keepPreviousData: userInvitationsSafeValues.keepPreviousData,\n      infinite: userInvitationsSafeValues.infinite,\n      enabled: !!userInvitationsParams\n    },\n    {\n      type: \"userInvitations\",\n      userId: user?.id\n    }\n  );\n  const suggestions = usePagesOrInfinite(\n    {\n      ...userSuggestionsParams\n    },\n    user?.getOrganizationSuggestions,\n    {\n      keepPreviousData: userSuggestionsSafeValues.keepPreviousData,\n      infinite: userSuggestionsSafeValues.infinite,\n      enabled: !!userSuggestionsParams\n    },\n    {\n      type: \"userSuggestions\",\n      userId: user?.id\n    }\n  );\n  if (!isClerkLoaded) {\n    return {\n      isLoaded: false,\n      createOrganization: void 0,\n      setActive: void 0,\n      userMemberships: undefinedPaginatedResource2,\n      userInvitations: undefinedPaginatedResource2,\n      userSuggestions: undefinedPaginatedResource2\n    };\n  }\n  return {\n    isLoaded: isClerkLoaded,\n    setActive: clerk.setActive,\n    createOrganization: clerk.createOrganization,\n    userMemberships: memberships,\n    userInvitations: invitations,\n    userSuggestions: suggestions\n  };\n}\n\n// src/react/hooks/useSafeLayoutEffect.tsx\n\nvar useSafeLayoutEffect = typeof window !== \"undefined\" ? react__WEBPACK_IMPORTED_MODULE_13__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_13__.useEffect;\n\n// src/react/hooks/useClerk.ts\nvar useClerk = () => {\n  useAssertWrappedByClerkProvider(\"useClerk\");\n  return useClerkInstanceContext();\n};\n\n// src/react/hooks/useSession.ts\nvar useSession = (options = {}) => {\n  useAssertWrappedByClerkProvider(\"useSession\");\n  const session = useSessionContext();\n  const clerk = useClerk();\n  if (session === void 0) {\n    return { isLoaded: false, isSignedIn: void 0, session: void 0 };\n  }\n  const pendingAsSignedOut = session?.status === \"pending\" && (options.treatPendingAsSignedOut ?? clerk.__internal_getOption(\"treatPendingAsSignedOut\"));\n  const isSignedOut = session === null || pendingAsSignedOut;\n  if (isSignedOut) {\n    return { isLoaded: true, isSignedIn: false, session: null };\n  }\n  return { isLoaded: true, isSignedIn: true, session };\n};\n\n// src/react/hooks/useSessionList.ts\nvar useSessionList = () => {\n  useAssertWrappedByClerkProvider(\"useSessionList\");\n  const isomorphicClerk = useClerkInstanceContext();\n  const client = useClientContext();\n  if (!client) {\n    return { isLoaded: false, sessions: void 0, setActive: void 0 };\n  }\n  return {\n    isLoaded: true,\n    sessions: client.sessions,\n    setActive: isomorphicClerk.setActive\n  };\n};\n\n// src/react/hooks/useUser.ts\nfunction useUser() {\n  useAssertWrappedByClerkProvider(\"useUser\");\n  const user = useUserContext();\n  if (user === void 0) {\n    return { isLoaded: false, isSignedIn: void 0, user: void 0 };\n  }\n  if (user === null) {\n    return { isLoaded: true, isSignedIn: false, user: null };\n  }\n  return { isLoaded: true, isSignedIn: true, user };\n}\n\n// src/react/hooks/useDeepEqualMemo.ts\n\n\nvar useDeepEqualMemoize = (value) => {\n  const ref = react__WEBPACK_IMPORTED_MODULE_13__.useRef(value);\n  if (!(0,dequal__WEBPACK_IMPORTED_MODULE_16__.dequal)(value, ref.current)) {\n    ref.current = value;\n  }\n  return react__WEBPACK_IMPORTED_MODULE_13__.useMemo(() => ref.current, [ref.current]);\n};\nvar useDeepEqualMemo = (factory, dependencyArray) => {\n  return react__WEBPACK_IMPORTED_MODULE_13__.useMemo(factory, useDeepEqualMemoize(dependencyArray));\n};\nvar isDeeplyEqual = dequal__WEBPACK_IMPORTED_MODULE_16__.dequal;\n\n// src/react/hooks/useReverification.ts\n\nvar CLERK_API_REVERIFICATION_ERROR_CODE = \"session_reverification_required\";\nasync function resolveResult(result) {\n  try {\n    const r = await result;\n    if (r instanceof Response) {\n      return r.json();\n    }\n    return r;\n  } catch (e) {\n    if ((0,_chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_5__.isClerkAPIResponseError)(e) && e.errors.find(({ code }) => code === CLERK_API_REVERIFICATION_ERROR_CODE)) {\n      return (0,_chunk_43A5F2IE_mjs__WEBPACK_IMPORTED_MODULE_10__.reverificationError)();\n    }\n    throw e;\n  }\n}\nfunction createReverificationHandler(params) {\n  function assertReverification(fetcher) {\n    return async (...args) => {\n      let result = await resolveResult(fetcher(...args));\n      if ((0,_chunk_43A5F2IE_mjs__WEBPACK_IMPORTED_MODULE_10__.isReverificationHint)(result)) {\n        const resolvers = (0,_chunk_7QJ2QTJL_mjs__WEBPACK_IMPORTED_MODULE_2__.createDeferredPromise)();\n        const isValidMetadata = (0,_chunk_3CN5LOSN_mjs__WEBPACK_IMPORTED_MODULE_11__.validateReverificationConfig)(result.clerk_error.metadata?.reverification);\n        const level = isValidMetadata ? isValidMetadata().level : void 0;\n        const cancel = () => {\n          resolvers.reject(\n            new _chunk_NT4JRXL3_mjs__WEBPACK_IMPORTED_MODULE_5__.ClerkRuntimeError(\"User cancelled attempted verification\", {\n              code: \"reverification_cancelled\"\n            })\n          );\n        };\n        const complete = () => {\n          resolvers.resolve(true);\n        };\n        if (params.onNeedsReverification === void 0) {\n          params.openUIComponent?.({\n            level,\n            afterVerification: complete,\n            afterVerificationCancelled: cancel\n          });\n        } else {\n          params.telemetry?.record((0,_chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_1__.eventMethodCalled)(\"UserVerificationCustomUI\"));\n          params.onNeedsReverification({\n            cancel,\n            complete,\n            level\n          });\n        }\n        await resolvers.promise;\n        result = await resolveResult(fetcher(...args));\n      }\n      return result;\n    };\n  }\n  return assertReverification;\n}\nvar useReverification = (fetcher, options) => {\n  const { __internal_openReverification, telemetry } = useClerk();\n  const fetcherRef = (0,react__WEBPACK_IMPORTED_MODULE_13__.useRef)(fetcher);\n  const optionsRef = (0,react__WEBPACK_IMPORTED_MODULE_13__.useRef)(options);\n  const handleReverification = (0,react__WEBPACK_IMPORTED_MODULE_13__.useMemo)(() => {\n    const handler = createReverificationHandler({\n      openUIComponent: __internal_openReverification,\n      telemetry,\n      ...optionsRef.current\n    })(fetcherRef.current);\n    return handler;\n  }, [__internal_openReverification, fetcherRef.current, optionsRef.current]);\n  useSafeLayoutEffect(() => {\n    fetcherRef.current = fetcher;\n    optionsRef.current = options;\n  });\n  return handleReverification;\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/react/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/router.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkHostRouterContext: () => (/* binding */ ClerkHostRouterContext),\n/* harmony export */   ClerkRouterContext: () => (/* binding */ ClerkRouterContext),\n/* harmony export */   Route: () => (/* binding */ Route),\n/* harmony export */   Router: () => (/* binding */ Router),\n/* harmony export */   createClerkRouter: () => (/* binding */ createClerkRouter),\n/* harmony export */   useClerkHostRouter: () => (/* binding */ useClerkHostRouter),\n/* harmony export */   useClerkRouter: () => (/* binding */ useClerkRouter)\n/* harmony export */ });\n/* harmony import */ var _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-IFTVZ2LQ.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs\");\n/* harmony import */ var _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-3TMSNP4L.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\n\n\n\n// src/router/router.ts\nvar PRESERVED_QUERYSTRING_PARAMS = [\"after_sign_in_url\", \"after_sign_up_url\", \"redirect_url\"];\nfunction normalizePath(path) {\n  return (0,_chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash)((0,_chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash)(path));\n}\nfunction createClerkRouter(router, basePath = \"/\") {\n  const normalizedBasePath = normalizePath(basePath);\n  function makeDestinationUrlWithPreservedQueryParameters(path) {\n    if ((0,_chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl)(path)) {\n      return path;\n    }\n    const destinationUrl = new URL(path, window.location.origin);\n    const currentSearchParams = router.searchParams();\n    PRESERVED_QUERYSTRING_PARAMS.forEach((key) => {\n      const maybeValue = currentSearchParams.get(key);\n      if (maybeValue) {\n        destinationUrl.searchParams.set(key, maybeValue);\n      }\n    });\n    return `${destinationUrl.pathname}${destinationUrl.search}`;\n  }\n  function match(path, index) {\n    const pathToMatch = path ?? (index && \"/\");\n    if (!pathToMatch) {\n      throw new Error(\"[clerk] router.match() requires either a path to match, or the index flag must be set to true.\");\n    }\n    const normalizedPath = normalizePath(pathToMatch);\n    return normalizePath(`${normalizedBasePath}${normalizedPath}`) === normalizePath(router.pathname());\n  }\n  function child(childBasePath) {\n    return createClerkRouter(router, `${normalizedBasePath}${normalizePath(childBasePath)}`);\n  }\n  function push(path) {\n    const destinationUrl = makeDestinationUrlWithPreservedQueryParameters(path);\n    return router.push(destinationUrl);\n  }\n  function replace(path) {\n    const destinationUrl = makeDestinationUrlWithPreservedQueryParameters(path);\n    return router.replace(destinationUrl);\n  }\n  function shallowPush(path) {\n    const destinationUrl = makeDestinationUrlWithPreservedQueryParameters(path);\n    return router.shallowPush(destinationUrl);\n  }\n  function pathname() {\n    return router.pathname();\n  }\n  function searchParams() {\n    return router.searchParams();\n  }\n  return {\n    makeDestinationUrlWithPreservedQueryParameters,\n    child,\n    match,\n    mode: router.mode,\n    name: router.name,\n    push,\n    replace,\n    shallowPush,\n    pathname,\n    searchParams,\n    basePath: normalizedBasePath\n  };\n}\n\n// src/router/react.tsx\n\nvar ClerkHostRouterContext = (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)(null);\nvar ClerkRouterContext = (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)(null);\nfunction useClerkHostRouter() {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(ClerkHostRouterContext);\n  if (!ctx) {\n    throw new Error(\n      \"clerk: Unable to locate ClerkHostRouter, make sure this is rendered within `<ClerkHostRouterContext.Provider>`.\"\n    );\n  }\n  return ctx;\n}\nfunction useClerkRouter() {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(ClerkRouterContext);\n  if (!ctx) {\n    throw new Error(\"clerk: Unable to locate ClerkRouter, make sure this is rendered within `<Router>`.\");\n  }\n  return ctx;\n}\nfunction Router({\n  basePath,\n  children,\n  router\n}) {\n  const hostRouter = useClerkHostRouter();\n  const clerkRouter = createClerkRouter(router ?? hostRouter, basePath);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(ClerkRouterContext.Provider, { value: clerkRouter }, children);\n}\nfunction Route({ path, children, index }) {\n  const parentRouter = useClerkRouter();\n  if (!path && !index) {\n    return children;\n  }\n  if (!parentRouter?.match(path, index)) {\n    return null;\n  }\n  return children;\n}\n\n//# sourceMappingURL=router.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qvcm91dGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFJOEI7QUFDQTtBQUNBO0FBQ0E7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUVBQW9CLENBQUMscUVBQWdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRUFBYTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsY0FBYyx3QkFBd0IsRUFBRSxzQkFBc0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbUJBQW1CLEVBQUUsZUFBZTtBQUNoRTtBQUNBO0FBQ0Esd0NBQXdDLG1CQUFtQixFQUFFLDZCQUE2QjtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDeUQ7QUFDekQsNkJBQTZCLG9EQUFhO0FBQzFDLHlCQUF5QixvREFBYTtBQUN0QztBQUNBLGNBQWMsaURBQVU7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaURBQVU7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSx5QkFBeUIsZ0RBQW1CLGdDQUFnQyxvQkFBb0I7QUFDaEc7QUFDQSxpQkFBaUIsdUJBQXVCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9yb3V0ZXIubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzQWJzb2x1dGVVcmwsXG4gIHdpdGhMZWFkaW5nU2xhc2gsXG4gIHdpdGhvdXRUcmFpbGluZ1NsYXNoXG59IGZyb20gXCIuL2NodW5rLUlGVFZaMkxRLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay0zVE1TTlA0TC5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstSTZNVFNUT0YubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuXG4vLyBzcmMvcm91dGVyL3JvdXRlci50c1xudmFyIFBSRVNFUlZFRF9RVUVSWVNUUklOR19QQVJBTVMgPSBbXCJhZnRlcl9zaWduX2luX3VybFwiLCBcImFmdGVyX3NpZ25fdXBfdXJsXCIsIFwicmVkaXJlY3RfdXJsXCJdO1xuZnVuY3Rpb24gbm9ybWFsaXplUGF0aChwYXRoKSB7XG4gIHJldHVybiB3aXRob3V0VHJhaWxpbmdTbGFzaCh3aXRoTGVhZGluZ1NsYXNoKHBhdGgpKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUNsZXJrUm91dGVyKHJvdXRlciwgYmFzZVBhdGggPSBcIi9cIikge1xuICBjb25zdCBub3JtYWxpemVkQmFzZVBhdGggPSBub3JtYWxpemVQYXRoKGJhc2VQYXRoKTtcbiAgZnVuY3Rpb24gbWFrZURlc3RpbmF0aW9uVXJsV2l0aFByZXNlcnZlZFF1ZXJ5UGFyYW1ldGVycyhwYXRoKSB7XG4gICAgaWYgKGlzQWJzb2x1dGVVcmwocGF0aCkpIHtcbiAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCBkZXN0aW5hdGlvblVybCA9IG5ldyBVUkwocGF0aCwgd2luZG93LmxvY2F0aW9uLm9yaWdpbik7XG4gICAgY29uc3QgY3VycmVudFNlYXJjaFBhcmFtcyA9IHJvdXRlci5zZWFyY2hQYXJhbXMoKTtcbiAgICBQUkVTRVJWRURfUVVFUllTVFJJTkdfUEFSQU1TLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgY29uc3QgbWF5YmVWYWx1ZSA9IGN1cnJlbnRTZWFyY2hQYXJhbXMuZ2V0KGtleSk7XG4gICAgICBpZiAobWF5YmVWYWx1ZSkge1xuICAgICAgICBkZXN0aW5hdGlvblVybC5zZWFyY2hQYXJhbXMuc2V0KGtleSwgbWF5YmVWYWx1ZSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGAke2Rlc3RpbmF0aW9uVXJsLnBhdGhuYW1lfSR7ZGVzdGluYXRpb25Vcmwuc2VhcmNofWA7XG4gIH1cbiAgZnVuY3Rpb24gbWF0Y2gocGF0aCwgaW5kZXgpIHtcbiAgICBjb25zdCBwYXRoVG9NYXRjaCA9IHBhdGggPz8gKGluZGV4ICYmIFwiL1wiKTtcbiAgICBpZiAoIXBhdGhUb01hdGNoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJbY2xlcmtdIHJvdXRlci5tYXRjaCgpIHJlcXVpcmVzIGVpdGhlciBhIHBhdGggdG8gbWF0Y2gsIG9yIHRoZSBpbmRleCBmbGFnIG11c3QgYmUgc2V0IHRvIHRydWUuXCIpO1xuICAgIH1cbiAgICBjb25zdCBub3JtYWxpemVkUGF0aCA9IG5vcm1hbGl6ZVBhdGgocGF0aFRvTWF0Y2gpO1xuICAgIHJldHVybiBub3JtYWxpemVQYXRoKGAke25vcm1hbGl6ZWRCYXNlUGF0aH0ke25vcm1hbGl6ZWRQYXRofWApID09PSBub3JtYWxpemVQYXRoKHJvdXRlci5wYXRobmFtZSgpKTtcbiAgfVxuICBmdW5jdGlvbiBjaGlsZChjaGlsZEJhc2VQYXRoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUNsZXJrUm91dGVyKHJvdXRlciwgYCR7bm9ybWFsaXplZEJhc2VQYXRofSR7bm9ybWFsaXplUGF0aChjaGlsZEJhc2VQYXRoKX1gKTtcbiAgfVxuICBmdW5jdGlvbiBwdXNoKHBhdGgpIHtcbiAgICBjb25zdCBkZXN0aW5hdGlvblVybCA9IG1ha2VEZXN0aW5hdGlvblVybFdpdGhQcmVzZXJ2ZWRRdWVyeVBhcmFtZXRlcnMocGF0aCk7XG4gICAgcmV0dXJuIHJvdXRlci5wdXNoKGRlc3RpbmF0aW9uVXJsKTtcbiAgfVxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgpIHtcbiAgICBjb25zdCBkZXN0aW5hdGlvblVybCA9IG1ha2VEZXN0aW5hdGlvblVybFdpdGhQcmVzZXJ2ZWRRdWVyeVBhcmFtZXRlcnMocGF0aCk7XG4gICAgcmV0dXJuIHJvdXRlci5yZXBsYWNlKGRlc3RpbmF0aW9uVXJsKTtcbiAgfVxuICBmdW5jdGlvbiBzaGFsbG93UHVzaChwYXRoKSB7XG4gICAgY29uc3QgZGVzdGluYXRpb25VcmwgPSBtYWtlRGVzdGluYXRpb25VcmxXaXRoUHJlc2VydmVkUXVlcnlQYXJhbWV0ZXJzKHBhdGgpO1xuICAgIHJldHVybiByb3V0ZXIuc2hhbGxvd1B1c2goZGVzdGluYXRpb25VcmwpO1xuICB9XG4gIGZ1bmN0aW9uIHBhdGhuYW1lKCkge1xuICAgIHJldHVybiByb3V0ZXIucGF0aG5hbWUoKTtcbiAgfVxuICBmdW5jdGlvbiBzZWFyY2hQYXJhbXMoKSB7XG4gICAgcmV0dXJuIHJvdXRlci5zZWFyY2hQYXJhbXMoKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIG1ha2VEZXN0aW5hdGlvblVybFdpdGhQcmVzZXJ2ZWRRdWVyeVBhcmFtZXRlcnMsXG4gICAgY2hpbGQsXG4gICAgbWF0Y2gsXG4gICAgbW9kZTogcm91dGVyLm1vZGUsXG4gICAgbmFtZTogcm91dGVyLm5hbWUsXG4gICAgcHVzaCxcbiAgICByZXBsYWNlLFxuICAgIHNoYWxsb3dQdXNoLFxuICAgIHBhdGhuYW1lLFxuICAgIHNlYXJjaFBhcmFtcyxcbiAgICBiYXNlUGF0aDogbm9ybWFsaXplZEJhc2VQYXRoXG4gIH07XG59XG5cbi8vIHNyYy9yb3V0ZXIvcmVhY3QudHN4XG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xudmFyIENsZXJrSG9zdFJvdXRlckNvbnRleHQgPSBjcmVhdGVDb250ZXh0KG51bGwpO1xudmFyIENsZXJrUm91dGVyQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5mdW5jdGlvbiB1c2VDbGVya0hvc3RSb3V0ZXIoKSB7XG4gIGNvbnN0IGN0eCA9IHVzZUNvbnRleHQoQ2xlcmtIb3N0Um91dGVyQ29udGV4dCk7XG4gIGlmICghY3R4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJjbGVyazogVW5hYmxlIHRvIGxvY2F0ZSBDbGVya0hvc3RSb3V0ZXIsIG1ha2Ugc3VyZSB0aGlzIGlzIHJlbmRlcmVkIHdpdGhpbiBgPENsZXJrSG9zdFJvdXRlckNvbnRleHQuUHJvdmlkZXI+YC5cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGN0eDtcbn1cbmZ1bmN0aW9uIHVzZUNsZXJrUm91dGVyKCkge1xuICBjb25zdCBjdHggPSB1c2VDb250ZXh0KENsZXJrUm91dGVyQ29udGV4dCk7XG4gIGlmICghY3R4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiY2xlcms6IFVuYWJsZSB0byBsb2NhdGUgQ2xlcmtSb3V0ZXIsIG1ha2Ugc3VyZSB0aGlzIGlzIHJlbmRlcmVkIHdpdGhpbiBgPFJvdXRlcj5gLlwiKTtcbiAgfVxuICByZXR1cm4gY3R4O1xufVxuZnVuY3Rpb24gUm91dGVyKHtcbiAgYmFzZVBhdGgsXG4gIGNoaWxkcmVuLFxuICByb3V0ZXJcbn0pIHtcbiAgY29uc3QgaG9zdFJvdXRlciA9IHVzZUNsZXJrSG9zdFJvdXRlcigpO1xuICBjb25zdCBjbGVya1JvdXRlciA9IGNyZWF0ZUNsZXJrUm91dGVyKHJvdXRlciA/PyBob3N0Um91dGVyLCBiYXNlUGF0aCk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChDbGVya1JvdXRlckNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNsZXJrUm91dGVyIH0sIGNoaWxkcmVuKTtcbn1cbmZ1bmN0aW9uIFJvdXRlKHsgcGF0aCwgY2hpbGRyZW4sIGluZGV4IH0pIHtcbiAgY29uc3QgcGFyZW50Um91dGVyID0gdXNlQ2xlcmtSb3V0ZXIoKTtcbiAgaWYgKCFwYXRoICYmICFpbmRleCkge1xuICAgIHJldHVybiBjaGlsZHJlbjtcbiAgfVxuICBpZiAoIXBhcmVudFJvdXRlcj8ubWF0Y2gocGF0aCwgaW5kZXgpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIGNoaWxkcmVuO1xufVxuZXhwb3J0IHtcbiAgQ2xlcmtIb3N0Um91dGVyQ29udGV4dCxcbiAgQ2xlcmtSb3V0ZXJDb250ZXh0LFxuICBSb3V0ZSxcbiAgUm91dGVyLFxuICBjcmVhdGVDbGVya1JvdXRlcixcbiAgdXNlQ2xlcmtIb3N0Um91dGVyLFxuICB1c2VDbGVya1JvdXRlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlci5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/router.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/telemetry.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TelemetryCollector: () => (/* reexport safe */ _chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_0__.TelemetryCollector),\n/* harmony export */   eventComponentMounted: () => (/* reexport safe */ _chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_0__.eventComponentMounted),\n/* harmony export */   eventFrameworkMetadata: () => (/* reexport safe */ _chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_0__.eventFrameworkMetadata),\n/* harmony export */   eventMethodCalled: () => (/* reexport safe */ _chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_0__.eventMethodCalled),\n/* harmony export */   eventPrebuiltComponentMounted: () => (/* reexport safe */ _chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_0__.eventPrebuiltComponentMounted),\n/* harmony export */   eventPrebuiltComponentOpened: () => (/* reexport safe */ _chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_0__.eventPrebuiltComponentOpened)\n/* harmony export */ });\n/* harmony import */ var _chunk_WIS7IYDJ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-WIS7IYDJ.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-WIS7IYDJ.mjs\");\n/* harmony import */ var _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-GGFRMWFO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-GGFRMWFO.mjs\");\n/* harmony import */ var _chunk_QU372XZW_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-QU372XZW.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-QU372XZW.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_KOH7GTJO_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-KOH7GTJO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n\n\n\n//# sourceMappingURL=telemetry.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdGVsZW1ldHJ5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBTzhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUTVCO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC90ZWxlbWV0cnkubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFRlbGVtZXRyeUNvbGxlY3RvcixcbiAgZXZlbnRDb21wb25lbnRNb3VudGVkLFxuICBldmVudEZyYW1ld29ya01ldGFkYXRhLFxuICBldmVudE1ldGhvZENhbGxlZCxcbiAgZXZlbnRQcmVidWlsdENvbXBvbmVudE1vdW50ZWQsXG4gIGV2ZW50UHJlYnVpbHRDb21wb25lbnRPcGVuZWRcbn0gZnJvbSBcIi4vY2h1bmstV0lTN0lZREoubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUdHRlJNV0ZPLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1RVTM3MlhaVy5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVEVUR1RFSTIubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUtPSDdHVEpPLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1JNk1UU1RPRi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBUZWxlbWV0cnlDb2xsZWN0b3IsXG4gIGV2ZW50Q29tcG9uZW50TW91bnRlZCxcbiAgZXZlbnRGcmFtZXdvcmtNZXRhZGF0YSxcbiAgZXZlbnRNZXRob2RDYWxsZWQsXG4gIGV2ZW50UHJlYnVpbHRDb21wb25lbnRNb3VudGVkLFxuICBldmVudFByZWJ1aWx0Q29tcG9uZW50T3BlbmVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGVsZW1ldHJ5Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/telemetry.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/underscore.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/underscore.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelToSnake: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.camelToSnake),\n/* harmony export */   deepCamelToSnake: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.deepCamelToSnake),\n/* harmony export */   deepSnakeToCamel: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.deepSnakeToCamel),\n/* harmony export */   getNonUndefinedValues: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.getNonUndefinedValues),\n/* harmony export */   isIPV4Address: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.isIPV4Address),\n/* harmony export */   isTruthy: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.isTruthy),\n/* harmony export */   snakeToCamel: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.snakeToCamel),\n/* harmony export */   titleize: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.titleize),\n/* harmony export */   toSentence: () => (/* reexport safe */ _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__.toSentence)\n/* harmony export */ });\n/* harmony import */ var _chunk_GGFRMWFO_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-GGFRMWFO.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-GGFRMWFO.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=underscore.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdW5kZXJzY29yZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFVOEI7QUFDQTtBQVc1QjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdW5kZXJzY29yZS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY2FtZWxUb1NuYWtlLFxuICBkZWVwQ2FtZWxUb1NuYWtlLFxuICBkZWVwU25ha2VUb0NhbWVsLFxuICBnZXROb25VbmRlZmluZWRWYWx1ZXMsXG4gIGlzSVBWNEFkZHJlc3MsXG4gIGlzVHJ1dGh5LFxuICBzbmFrZVRvQ2FtZWwsXG4gIHRpdGxlaXplLFxuICB0b1NlbnRlbmNlXG59IGZyb20gXCIuL2NodW5rLUdHRlJNV0ZPLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIGNhbWVsVG9TbmFrZSxcbiAgZGVlcENhbWVsVG9TbmFrZSxcbiAgZGVlcFNuYWtlVG9DYW1lbCxcbiAgZ2V0Tm9uVW5kZWZpbmVkVmFsdWVzLFxuICBpc0lQVjRBZGRyZXNzLFxuICBpc1RydXRoeSxcbiAgc25ha2VUb0NhbWVsLFxuICB0aXRsZWl6ZSxcbiAgdG9TZW50ZW5jZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVuZGVyc2NvcmUubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/underscore.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/url.mjs":
/*!*************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/url.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.addClerkPrefix),\n/* harmony export */   cleanDoubleSlashes: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.cleanDoubleSlashes),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.getScriptUrl),\n/* harmony export */   hasLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.hasLeadingSlash),\n/* harmony export */   hasTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.hasTrailingSlash),\n/* harmony export */   isAbsoluteUrl: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl),\n/* harmony export */   isCurrentDevAccountPortalOrigin: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isCurrentDevAccountPortalOrigin),\n/* harmony export */   isLegacyDevAccountPortalOrigin: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isLegacyDevAccountPortalOrigin),\n/* harmony export */   isNonEmptyURL: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyURL),\n/* harmony export */   joinURL: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.joinURL),\n/* harmony export */   parseSearchParams: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.parseSearchParams),\n/* harmony export */   stripScheme: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.stripScheme),\n/* harmony export */   withLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash),\n/* harmony export */   withTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withTrailingSlash),\n/* harmony export */   withoutLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutLeadingSlash),\n/* harmony export */   withoutTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash)\n/* harmony export */ });\n/* harmony import */ var _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-IFTVZ2LQ.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs\");\n/* harmony import */ var _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-3TMSNP4L.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n//# sourceMappingURL=url.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXJsLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQjhCO0FBQ0E7QUFDQTtBQUNBO0FBbUI1QjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXJsLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBhZGRDbGVya1ByZWZpeCxcbiAgY2xlYW5Eb3VibGVTbGFzaGVzLFxuICBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcsXG4gIGdldFNjcmlwdFVybCxcbiAgaGFzTGVhZGluZ1NsYXNoLFxuICBoYXNUcmFpbGluZ1NsYXNoLFxuICBpc0Fic29sdXRlVXJsLFxuICBpc0N1cnJlbnREZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBpc0xlZ2FjeURldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTm9uRW1wdHlVUkwsXG4gIGpvaW5VUkwsXG4gIHBhcnNlU2VhcmNoUGFyYW1zLFxuICBzdHJpcFNjaGVtZSxcbiAgd2l0aExlYWRpbmdTbGFzaCxcbiAgd2l0aFRyYWlsaW5nU2xhc2gsXG4gIHdpdGhvdXRMZWFkaW5nU2xhc2gsXG4gIHdpdGhvdXRUcmFpbGluZ1NsYXNoXG59IGZyb20gXCIuL2NodW5rLUlGVFZaMkxRLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay0zVE1TTlA0TC5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstSTZNVFNUT0YubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgYWRkQ2xlcmtQcmVmaXgsXG4gIGNsZWFuRG91YmxlU2xhc2hlcyxcbiAgZ2V0Q2xlcmtKc01ham9yVmVyc2lvbk9yVGFnLFxuICBnZXRTY3JpcHRVcmwsXG4gIGhhc0xlYWRpbmdTbGFzaCxcbiAgaGFzVHJhaWxpbmdTbGFzaCxcbiAgaXNBYnNvbHV0ZVVybCxcbiAgaXNDdXJyZW50RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaXNMZWdhY3lEZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBpc05vbkVtcHR5VVJMLFxuICBqb2luVVJMLFxuICBwYXJzZVNlYXJjaFBhcmFtcyxcbiAgc3RyaXBTY2hlbWUsXG4gIHdpdGhMZWFkaW5nU2xhc2gsXG4gIHdpdGhUcmFpbGluZ1NsYXNoLFxuICB3aXRob3V0TGVhZGluZ1NsYXNoLFxuICB3aXRob3V0VHJhaWxpbmdTbGFzaFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/url.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/utils/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/utils/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allSettled: () => (/* reexport safe */ _chunk_ARQUL5DC_mjs__WEBPACK_IMPORTED_MODULE_0__.allSettled),\n/* harmony export */   createDeferredPromise: () => (/* reexport safe */ _chunk_7QJ2QTJL_mjs__WEBPACK_IMPORTED_MODULE_1__.createDeferredPromise),\n/* harmony export */   fastDeepMergeAndKeep: () => (/* reexport safe */ _chunk_ARQUL5DC_mjs__WEBPACK_IMPORTED_MODULE_0__.fastDeepMergeAndKeep),\n/* harmony export */   fastDeepMergeAndReplace: () => (/* reexport safe */ _chunk_ARQUL5DC_mjs__WEBPACK_IMPORTED_MODULE_0__.fastDeepMergeAndReplace),\n/* harmony export */   handleValueOrFn: () => (/* reexport safe */ _chunk_O32JQBM6_mjs__WEBPACK_IMPORTED_MODULE_4__.handleValueOrFn),\n/* harmony export */   isDevelopmentEnvironment: () => (/* reexport safe */ _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentEnvironment),\n/* harmony export */   isProductionEnvironment: () => (/* reexport safe */ _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_5__.isProductionEnvironment),\n/* harmony export */   isStaging: () => (/* reexport safe */ _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_3__.isStaging),\n/* harmony export */   isTestEnvironment: () => (/* reexport safe */ _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_5__.isTestEnvironment),\n/* harmony export */   logErrorInDevMode: () => (/* reexport safe */ _chunk_ARQUL5DC_mjs__WEBPACK_IMPORTED_MODULE_0__.logErrorInDevMode),\n/* harmony export */   noop: () => (/* reexport safe */ _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_2__.noop)\n/* harmony export */ });\n/* harmony import */ var _chunk_ARQUL5DC_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-ARQUL5DC.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-ARQUL5DC.mjs\");\n/* harmony import */ var _chunk_7QJ2QTJL_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk-7QJ2QTJL.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7QJ2QTJL.mjs\");\n/* harmony import */ var _chunk_7FNX7RWY_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunk-7FNX7RWY.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7FNX7RWY.mjs\");\n/* harmony import */ var _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../chunk-3TMSNP4L.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\");\n/* harmony import */ var _chunk_O32JQBM6_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../chunk-O32JQBM6.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-O32JQBM6.mjs\");\n/* harmony import */ var _chunk_7HPDNZ3R_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../chunk-7HPDNZ3R.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXRpbHMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUsrQjtBQUdBO0FBR0E7QUFHQTtBQUdBO0FBS0E7QUFDQTtBQWE3QjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXRpbHMvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFsbFNldHRsZWQsXG4gIGZhc3REZWVwTWVyZ2VBbmRLZWVwLFxuICBmYXN0RGVlcE1lcmdlQW5kUmVwbGFjZSxcbiAgbG9nRXJyb3JJbkRldk1vZGVcbn0gZnJvbSBcIi4uL2NodW5rLUFSUVVMNURDLm1qc1wiO1xuaW1wb3J0IHtcbiAgY3JlYXRlRGVmZXJyZWRQcm9taXNlXG59IGZyb20gXCIuLi9jaHVuay03UUoyUVRKTC5tanNcIjtcbmltcG9ydCB7XG4gIG5vb3Bcbn0gZnJvbSBcIi4uL2NodW5rLTdGTlg3UldZLm1qc1wiO1xuaW1wb3J0IHtcbiAgaXNTdGFnaW5nXG59IGZyb20gXCIuLi9jaHVuay0zVE1TTlA0TC5tanNcIjtcbmltcG9ydCB7XG4gIGhhbmRsZVZhbHVlT3JGblxufSBmcm9tIFwiLi4vY2h1bmstTzMySlFCTTYubWpzXCI7XG5pbXBvcnQge1xuICBpc0RldmVsb3BtZW50RW52aXJvbm1lbnQsXG4gIGlzUHJvZHVjdGlvbkVudmlyb25tZW50LFxuICBpc1Rlc3RFbnZpcm9ubWVudFxufSBmcm9tIFwiLi4vY2h1bmstN0hQRE5aM1IubWpzXCI7XG5pbXBvcnQgXCIuLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIGFsbFNldHRsZWQsXG4gIGNyZWF0ZURlZmVycmVkUHJvbWlzZSxcbiAgZmFzdERlZXBNZXJnZUFuZEtlZXAsXG4gIGZhc3REZWVwTWVyZ2VBbmRSZXBsYWNlLFxuICBoYW5kbGVWYWx1ZU9yRm4sXG4gIGlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCxcbiAgaXNQcm9kdWN0aW9uRW52aXJvbm1lbnQsXG4gIGlzU3RhZ2luZyxcbiAgaXNUZXN0RW52aXJvbm1lbnQsXG4gIGxvZ0Vycm9ySW5EZXZNb2RlLFxuICBub29wXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/utils/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/web3.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/web3.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WEB3_PROVIDERS: () => (/* binding */ WEB3_PROVIDERS)\n/* harmony export */ });\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n// src/web3.ts\nvar WEB3_PROVIDERS = [\n  {\n    provider: \"metamask\",\n    strategy: \"web3_metamask_signature\",\n    name: \"MetaMask\"\n  },\n  {\n    provider: \"coinbase_wallet\",\n    strategy: \"web3_coinbase_wallet_signature\",\n    name: \"Coinbase Wallet\"\n  },\n  {\n    provider: \"okx_wallet\",\n    strategy: \"web3_okx_wallet_signature\",\n    name: \"OKX Wallet\"\n  }\n];\n\n//# sourceMappingURL=web3.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qvd2ViMy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEI7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qvd2ViMy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcblxuLy8gc3JjL3dlYjMudHNcbnZhciBXRUIzX1BST1ZJREVSUyA9IFtcbiAge1xuICAgIHByb3ZpZGVyOiBcIm1ldGFtYXNrXCIsXG4gICAgc3RyYXRlZ3k6IFwid2ViM19tZXRhbWFza19zaWduYXR1cmVcIixcbiAgICBuYW1lOiBcIk1ldGFNYXNrXCJcbiAgfSxcbiAge1xuICAgIHByb3ZpZGVyOiBcImNvaW5iYXNlX3dhbGxldFwiLFxuICAgIHN0cmF0ZWd5OiBcIndlYjNfY29pbmJhc2Vfd2FsbGV0X3NpZ25hdHVyZVwiLFxuICAgIG5hbWU6IFwiQ29pbmJhc2UgV2FsbGV0XCJcbiAgfSxcbiAge1xuICAgIHByb3ZpZGVyOiBcIm9reF93YWxsZXRcIixcbiAgICBzdHJhdGVneTogXCJ3ZWIzX29reF93YWxsZXRfc2lnbmF0dXJlXCIsXG4gICAgbmFtZTogXCJPS1ggV2FsbGV0XCJcbiAgfVxuXTtcbmV4cG9ydCB7XG4gIFdFQjNfUFJPVklERVJTXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2ViMy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/web3.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@clerk/shared/dist/webauthn.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/webauthn.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isWebAuthnAutofillSupported: () => (/* binding */ isWebAuthnAutofillSupported),\n/* harmony export */   isWebAuthnPlatformAuthenticatorSupported: () => (/* binding */ isWebAuthnPlatformAuthenticatorSupported),\n/* harmony export */   isWebAuthnSupported: () => (/* binding */ isWebAuthnSupported)\n/* harmony export */ });\n/* harmony import */ var _chunk_JKSAJ6AV_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-JKSAJ6AV.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-JKSAJ6AV.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"(app-pages-browser)/./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n// src/webauthn.ts\nfunction isWebAuthnSupported() {\n  return (0,_chunk_JKSAJ6AV_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidBrowser)() && // Check if `PublicKeyCredential` is a constructor\n  typeof window.PublicKeyCredential === \"function\";\n}\nasync function isWebAuthnAutofillSupported() {\n  try {\n    return isWebAuthnSupported() && await window.PublicKeyCredential.isConditionalMediationAvailable();\n  } catch {\n    return false;\n  }\n}\nasync function isWebAuthnPlatformAuthenticatorSupported() {\n  try {\n    return typeof window !== \"undefined\" && await window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n  } catch {\n    return false;\n  }\n}\n\n//# sourceMappingURL=webauthn.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qvd2ViYXV0aG4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRThCO0FBQ0E7O0FBRTlCO0FBQ0E7QUFDQSxTQUFTLG1FQUFjO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC93ZWJhdXRobi5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaXNWYWxpZEJyb3dzZXJcbn0gZnJvbSBcIi4vY2h1bmstSktTQUo2QVYubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuXG4vLyBzcmMvd2ViYXV0aG4udHNcbmZ1bmN0aW9uIGlzV2ViQXV0aG5TdXBwb3J0ZWQoKSB7XG4gIHJldHVybiBpc1ZhbGlkQnJvd3NlcigpICYmIC8vIENoZWNrIGlmIGBQdWJsaWNLZXlDcmVkZW50aWFsYCBpcyBhIGNvbnN0cnVjdG9yXG4gIHR5cGVvZiB3aW5kb3cuUHVibGljS2V5Q3JlZGVudGlhbCA9PT0gXCJmdW5jdGlvblwiO1xufVxuYXN5bmMgZnVuY3Rpb24gaXNXZWJBdXRobkF1dG9maWxsU3VwcG9ydGVkKCkge1xuICB0cnkge1xuICAgIHJldHVybiBpc1dlYkF1dGhuU3VwcG9ydGVkKCkgJiYgYXdhaXQgd2luZG93LlB1YmxpY0tleUNyZWRlbnRpYWwuaXNDb25kaXRpb25hbE1lZGlhdGlvbkF2YWlsYWJsZSgpO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbmFzeW5jIGZ1bmN0aW9uIGlzV2ViQXV0aG5QbGF0Zm9ybUF1dGhlbnRpY2F0b3JTdXBwb3J0ZWQoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgYXdhaXQgd2luZG93LlB1YmxpY0tleUNyZWRlbnRpYWwuaXNVc2VyVmVyaWZ5aW5nUGxhdGZvcm1BdXRoZW50aWNhdG9yQXZhaWxhYmxlKCk7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgaXNXZWJBdXRobkF1dG9maWxsU3VwcG9ydGVkLFxuICBpc1dlYkF1dGhuUGxhdGZvcm1BdXRoZW50aWNhdG9yU3VwcG9ydGVkLFxuICBpc1dlYkF1dGhuU3VwcG9ydGVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2ViYXV0aG4ubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@clerk/shared/dist/webauthn.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@radix-ui/primitive/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeEventHandlers: () => (/* binding */ composeEventHandlers)\n/* harmony export */ });\n// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLHVFQUF1RSxrQ0FBa0MsSUFBSTtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9wcmltaXRpdmUvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvY29yZS9wcmltaXRpdmUvc3JjL3ByaW1pdGl2ZS50c3hcbmZ1bmN0aW9uIGNvbXBvc2VFdmVudEhhbmRsZXJzKG9yaWdpbmFsRXZlbnRIYW5kbGVyLCBvdXJFdmVudEhhbmRsZXIsIHsgY2hlY2tGb3JEZWZhdWx0UHJldmVudGVkID0gdHJ1ZSB9ID0ge30pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGhhbmRsZUV2ZW50KGV2ZW50KSB7XG4gICAgb3JpZ2luYWxFdmVudEhhbmRsZXI/LihldmVudCk7XG4gICAgaWYgKGNoZWNrRm9yRGVmYXVsdFByZXZlbnRlZCA9PT0gZmFsc2UgfHwgIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgIHJldHVybiBvdXJFdmVudEhhbmRsZXI/LihldmVudCk7XG4gICAgfVxuICB9O1xufVxuZXhwb3J0IHtcbiAgY29tcG9zZUV2ZW50SGFuZGxlcnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@radix-ui/react-compose-refs/dist/index.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   composeRefs: () => (/* binding */ composeRefs),\n/* harmony export */   useComposedRefs: () => (/* binding */ useComposedRefs)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/compose-refs/src/compose-refs.tsx\n\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(composeRefs(...refs), refs);\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29tcG9zZS1yZWZzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQytCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDhDQUFpQjtBQUMxQjtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL0ByYWRpeC11aS9yZWFjdC1jb21wb3NlLXJlZnMvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvY29tcG9zZS1yZWZzL3NyYy9jb21wb3NlLXJlZnMudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHNldFJlZihyZWYsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgcmVmID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gcmVmKHZhbHVlKTtcbiAgfSBlbHNlIGlmIChyZWYgIT09IG51bGwgJiYgcmVmICE9PSB2b2lkIDApIHtcbiAgICByZWYuY3VycmVudCA9IHZhbHVlO1xuICB9XG59XG5mdW5jdGlvbiBjb21wb3NlUmVmcyguLi5yZWZzKSB7XG4gIHJldHVybiAobm9kZSkgPT4ge1xuICAgIGxldCBoYXNDbGVhbnVwID0gZmFsc2U7XG4gICAgY29uc3QgY2xlYW51cHMgPSByZWZzLm1hcCgocmVmKSA9PiB7XG4gICAgICBjb25zdCBjbGVhbnVwID0gc2V0UmVmKHJlZiwgbm9kZSk7XG4gICAgICBpZiAoIWhhc0NsZWFudXAgJiYgdHlwZW9mIGNsZWFudXAgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGhhc0NsZWFudXAgPSB0cnVlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNsZWFudXA7XG4gICAgfSk7XG4gICAgaWYgKGhhc0NsZWFudXApIHtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xlYW51cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBjb25zdCBjbGVhbnVwID0gY2xlYW51cHNbaV07XG4gICAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXRSZWYocmVmc1tpXSwgbnVsbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIHVzZUNvbXBvc2VkUmVmcyguLi5yZWZzKSB7XG4gIHJldHVybiBSZWFjdC51c2VDYWxsYmFjayhjb21wb3NlUmVmcyguLi5yZWZzKSwgcmVmcyk7XG59XG5leHBvcnQge1xuICBjb21wb3NlUmVmcyxcbiAgdXNlQ29tcG9zZWRSZWZzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@radix-ui/react-context/dist/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: () => (/* binding */ createContext2),\n/* harmony export */   createContextScope: () => (/* binding */ createContextScope)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// packages/react/context/src/create-context.tsx\n\n\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n  const Provider = (props) => {\n    const { children, ...context } = props;\n    const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n  };\n  Provider.displayName = rootComponentName + \"Provider\";\n  function useContext2(consumerName) {\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    const Provider = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Context.Provider, { value, children });\n    };\n    Provider.displayName = rootComponentName + \"Provider\";\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtY29udGV4dC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDK0I7QUFDUztBQUN4QztBQUNBLGtCQUFrQixnREFBbUI7QUFDckM7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQyxrQkFBa0IsMENBQWE7QUFDL0IsMkJBQTJCLHNEQUFHLHFCQUFxQixpQkFBaUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDZDQUFnQjtBQUNwQztBQUNBO0FBQ0EseUJBQXlCLGFBQWEsMkJBQTJCLGtCQUFrQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOEJBQThCO0FBQzVDO0FBQ0Esb0JBQW9CLDBDQUFhO0FBQ2pDLDZCQUE2QixzREFBRyxxQkFBcUIsaUJBQWlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDZDQUFnQjtBQUN0QztBQUNBO0FBQ0EsMkJBQTJCLGFBQWEsMkJBQTJCLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBbUI7QUFDaEMsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDBDQUFhO0FBQzFCLGlCQUFpQixXQUFXLFVBQVUsTUFBTSxtQ0FBbUM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJEQUEyRCxxQkFBcUI7QUFDaEY7QUFDQSxrREFBa0QsVUFBVTtBQUM1RCxpQkFBaUI7QUFDakIsT0FBTyxJQUFJO0FBQ1gsYUFBYSwwQ0FBYSxVQUFVLFdBQVcsb0JBQW9CLGdCQUFnQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWNvbnRleHQvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvY29udGV4dC9zcmMvY3JlYXRlLWNvbnRleHQudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gY3JlYXRlQ29udGV4dDIocm9vdENvbXBvbmVudE5hbWUsIGRlZmF1bHRDb250ZXh0KSB7XG4gIGNvbnN0IENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGRlZmF1bHRDb250ZXh0KTtcbiAgY29uc3QgUHJvdmlkZXIgPSAocHJvcHMpID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCAuLi5jb250ZXh0IH0gPSBwcm9wcztcbiAgICBjb25zdCB2YWx1ZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gY29udGV4dCwgT2JqZWN0LnZhbHVlcyhjb250ZXh0KSk7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZSwgY2hpbGRyZW4gfSk7XG4gIH07XG4gIFByb3ZpZGVyLmRpc3BsYXlOYW1lID0gcm9vdENvbXBvbmVudE5hbWUgKyBcIlByb3ZpZGVyXCI7XG4gIGZ1bmN0aW9uIHVzZUNvbnRleHQyKGNvbnN1bWVyTmFtZSkge1xuICAgIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KENvbnRleHQpO1xuICAgIGlmIChjb250ZXh0KSByZXR1cm4gY29udGV4dDtcbiAgICBpZiAoZGVmYXVsdENvbnRleHQgIT09IHZvaWQgMCkgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xuICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHtjb25zdW1lck5hbWV9XFxgIG11c3QgYmUgdXNlZCB3aXRoaW4gXFxgJHtyb290Q29tcG9uZW50TmFtZX1cXGBgKTtcbiAgfVxuICByZXR1cm4gW1Byb3ZpZGVyLCB1c2VDb250ZXh0Ml07XG59XG5mdW5jdGlvbiBjcmVhdGVDb250ZXh0U2NvcGUoc2NvcGVOYW1lLCBjcmVhdGVDb250ZXh0U2NvcGVEZXBzID0gW10pIHtcbiAgbGV0IGRlZmF1bHRDb250ZXh0cyA9IFtdO1xuICBmdW5jdGlvbiBjcmVhdGVDb250ZXh0Myhyb290Q29tcG9uZW50TmFtZSwgZGVmYXVsdENvbnRleHQpIHtcbiAgICBjb25zdCBCYXNlQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZGVmYXVsdENvbnRleHQpO1xuICAgIGNvbnN0IGluZGV4ID0gZGVmYXVsdENvbnRleHRzLmxlbmd0aDtcbiAgICBkZWZhdWx0Q29udGV4dHMgPSBbLi4uZGVmYXVsdENvbnRleHRzLCBkZWZhdWx0Q29udGV4dF07XG4gICAgY29uc3QgUHJvdmlkZXIgPSAocHJvcHMpID0+IHtcbiAgICAgIGNvbnN0IHsgc2NvcGUsIGNoaWxkcmVuLCAuLi5jb250ZXh0IH0gPSBwcm9wcztcbiAgICAgIGNvbnN0IENvbnRleHQgPSBzY29wZT8uW3Njb3BlTmFtZV0/LltpbmRleF0gfHwgQmFzZUNvbnRleHQ7XG4gICAgICBjb25zdCB2YWx1ZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gY29udGV4dCwgT2JqZWN0LnZhbHVlcyhjb250ZXh0KSk7XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlLCBjaGlsZHJlbiB9KTtcbiAgICB9O1xuICAgIFByb3ZpZGVyLmRpc3BsYXlOYW1lID0gcm9vdENvbXBvbmVudE5hbWUgKyBcIlByb3ZpZGVyXCI7XG4gICAgZnVuY3Rpb24gdXNlQ29udGV4dDIoY29uc3VtZXJOYW1lLCBzY29wZSkge1xuICAgICAgY29uc3QgQ29udGV4dCA9IHNjb3BlPy5bc2NvcGVOYW1lXT8uW2luZGV4XSB8fCBCYXNlQ29udGV4dDtcbiAgICAgIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0KENvbnRleHQpO1xuICAgICAgaWYgKGNvbnRleHQpIHJldHVybiBjb250ZXh0O1xuICAgICAgaWYgKGRlZmF1bHRDb250ZXh0ICE9PSB2b2lkIDApIHJldHVybiBkZWZhdWx0Q29udGV4dDtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHtjb25zdW1lck5hbWV9XFxgIG11c3QgYmUgdXNlZCB3aXRoaW4gXFxgJHtyb290Q29tcG9uZW50TmFtZX1cXGBgKTtcbiAgICB9XG4gICAgcmV0dXJuIFtQcm92aWRlciwgdXNlQ29udGV4dDJdO1xuICB9XG4gIGNvbnN0IGNyZWF0ZVNjb3BlID0gKCkgPT4ge1xuICAgIGNvbnN0IHNjb3BlQ29udGV4dHMgPSBkZWZhdWx0Q29udGV4dHMubWFwKChkZWZhdWx0Q29udGV4dCkgPT4ge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUNvbnRleHQoZGVmYXVsdENvbnRleHQpO1xuICAgIH0pO1xuICAgIHJldHVybiBmdW5jdGlvbiB1c2VTY29wZShzY29wZSkge1xuICAgICAgY29uc3QgY29udGV4dHMgPSBzY29wZT8uW3Njb3BlTmFtZV0gfHwgc2NvcGVDb250ZXh0cztcbiAgICAgIHJldHVybiBSZWFjdC51c2VNZW1vKFxuICAgICAgICAoKSA9PiAoeyBbYF9fc2NvcGUke3Njb3BlTmFtZX1gXTogeyAuLi5zY29wZSwgW3Njb3BlTmFtZV06IGNvbnRleHRzIH0gfSksXG4gICAgICAgIFtzY29wZSwgY29udGV4dHNdXG4gICAgICApO1xuICAgIH07XG4gIH07XG4gIGNyZWF0ZVNjb3BlLnNjb3BlTmFtZSA9IHNjb3BlTmFtZTtcbiAgcmV0dXJuIFtjcmVhdGVDb250ZXh0MywgY29tcG9zZUNvbnRleHRTY29wZXMoY3JlYXRlU2NvcGUsIC4uLmNyZWF0ZUNvbnRleHRTY29wZURlcHMpXTtcbn1cbmZ1bmN0aW9uIGNvbXBvc2VDb250ZXh0U2NvcGVzKC4uLnNjb3Blcykge1xuICBjb25zdCBiYXNlU2NvcGUgPSBzY29wZXNbMF07XG4gIGlmIChzY29wZXMubGVuZ3RoID09PSAxKSByZXR1cm4gYmFzZVNjb3BlO1xuICBjb25zdCBjcmVhdGVTY29wZSA9ICgpID0+IHtcbiAgICBjb25zdCBzY29wZUhvb2tzID0gc2NvcGVzLm1hcCgoY3JlYXRlU2NvcGUyKSA9PiAoe1xuICAgICAgdXNlU2NvcGU6IGNyZWF0ZVNjb3BlMigpLFxuICAgICAgc2NvcGVOYW1lOiBjcmVhdGVTY29wZTIuc2NvcGVOYW1lXG4gICAgfSkpO1xuICAgIHJldHVybiBmdW5jdGlvbiB1c2VDb21wb3NlZFNjb3BlcyhvdmVycmlkZVNjb3Blcykge1xuICAgICAgY29uc3QgbmV4dFNjb3BlcyA9IHNjb3BlSG9va3MucmVkdWNlKChuZXh0U2NvcGVzMiwgeyB1c2VTY29wZSwgc2NvcGVOYW1lIH0pID0+IHtcbiAgICAgICAgY29uc3Qgc2NvcGVQcm9wcyA9IHVzZVNjb3BlKG92ZXJyaWRlU2NvcGVzKTtcbiAgICAgICAgY29uc3QgY3VycmVudFNjb3BlID0gc2NvcGVQcm9wc1tgX19zY29wZSR7c2NvcGVOYW1lfWBdO1xuICAgICAgICByZXR1cm4geyAuLi5uZXh0U2NvcGVzMiwgLi4uY3VycmVudFNjb3BlIH07XG4gICAgICB9LCB7fSk7XG4gICAgICByZXR1cm4gUmVhY3QudXNlTWVtbygoKSA9PiAoeyBbYF9fc2NvcGUke2Jhc2VTY29wZS5zY29wZU5hbWV9YF06IG5leHRTY29wZXMgfSksIFtuZXh0U2NvcGVzXSk7XG4gICAgfTtcbiAgfTtcbiAgY3JlYXRlU2NvcGUuc2NvcGVOYW1lID0gYmFzZVNjb3BlLnNjb3BlTmFtZTtcbiAgcmV0dXJuIGNyZWF0ZVNjb3BlO1xufVxuZXhwb3J0IHtcbiAgY3JlYXRlQ29udGV4dDIgYXMgY3JlYXRlQ29udGV4dCxcbiAgY3JlYXRlQ29udGV4dFNjb3BlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-form/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-form/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Control: () => (/* binding */ Control),\n/* harmony export */   Field: () => (/* binding */ Field),\n/* harmony export */   Form: () => (/* binding */ Form),\n/* harmony export */   FormControl: () => (/* binding */ FormControl),\n/* harmony export */   FormField: () => (/* binding */ FormField),\n/* harmony export */   FormLabel: () => (/* binding */ FormLabel),\n/* harmony export */   FormMessage: () => (/* binding */ FormMessage),\n/* harmony export */   FormSubmit: () => (/* binding */ FormSubmit),\n/* harmony export */   FormValidityState: () => (/* binding */ FormValidityState),\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   Message: () => (/* binding */ Message),\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   Submit: () => (/* binding */ Submit),\n/* harmony export */   ValidityState: () => (/* binding */ ValidityState),\n/* harmony export */   createFormScope: () => (/* binding */ createFormScope)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @radix-ui/primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/primitive/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-context */ \"(app-pages-browser)/./node_modules/@radix-ui/react-context/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @radix-ui/react-id */ \"(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_label__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @radix-ui/react-label */ \"(app-pages-browser)/./node_modules/@radix-ui/react-label/dist/index.mjs\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Control,Field,Form,FormControl,FormField,FormLabel,FormMessage,FormSubmit,FormValidityState,Label,Message,Root,Submit,ValidityState,createFormScope auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$();\n// src/form.tsx\n\n\n\n\n\n\n\n\nvar [createFormContext, createFormScope] = (0,_radix_ui_react_context__WEBPACK_IMPORTED_MODULE_2__.createContextScope)(\"Form\");\nvar FORM_NAME = \"Form\";\nvar [ValidationProvider, useValidationContext] = createFormContext(FORM_NAME);\nvar [AriaDescriptionProvider, useAriaDescriptionContext] = createFormContext(FORM_NAME);\nvar Form = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = _s((props, forwardedRef)=>{\n    _s();\n    const { __scopeForm, onClearServerErrors = ()=>{}, ...rootProps } = props;\n    const formRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedFormRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, formRef);\n    const [validityMap, setValidityMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const getFieldValidity = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[getFieldValidity]\": (fieldName)=>validityMap[fieldName]\n    }[\"Form.useCallback[getFieldValidity]\"], [\n        validityMap\n    ]);\n    const handleFieldValidityChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[handleFieldValidityChange]\": (fieldName, validity)=>setValidityMap({\n                \"Form.useCallback[handleFieldValidityChange]\": (prevValidityMap)=>{\n                    var _prevValidityMap_fieldName;\n                    return {\n                        ...prevValidityMap,\n                        [fieldName]: {\n                            ...(_prevValidityMap_fieldName = prevValidityMap[fieldName]) !== null && _prevValidityMap_fieldName !== void 0 ? _prevValidityMap_fieldName : {},\n                            ...validity\n                        }\n                    };\n                }\n            }[\"Form.useCallback[handleFieldValidityChange]\"])\n    }[\"Form.useCallback[handleFieldValidityChange]\"], []);\n    const handleFieldValiditionClear = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[handleFieldValiditionClear]\": (fieldName)=>{\n            setValidityMap({\n                \"Form.useCallback[handleFieldValiditionClear]\": (prevValidityMap)=>({\n                        ...prevValidityMap,\n                        [fieldName]: void 0\n                    })\n            }[\"Form.useCallback[handleFieldValiditionClear]\"]);\n            setCustomErrorsMap({\n                \"Form.useCallback[handleFieldValiditionClear]\": (prevCustomErrorsMap)=>({\n                        ...prevCustomErrorsMap,\n                        [fieldName]: {}\n                    })\n            }[\"Form.useCallback[handleFieldValiditionClear]\"]);\n        }\n    }[\"Form.useCallback[handleFieldValiditionClear]\"], []);\n    const [customMatcherEntriesMap, setCustomMatcherEntriesMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const getFieldCustomMatcherEntries = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[getFieldCustomMatcherEntries]\": (fieldName)=>{\n            var _customMatcherEntriesMap_fieldName;\n            return (_customMatcherEntriesMap_fieldName = customMatcherEntriesMap[fieldName]) !== null && _customMatcherEntriesMap_fieldName !== void 0 ? _customMatcherEntriesMap_fieldName : [];\n        }\n    }[\"Form.useCallback[getFieldCustomMatcherEntries]\"], [\n        customMatcherEntriesMap\n    ]);\n    const handleFieldCustomMatcherAdd = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[handleFieldCustomMatcherAdd]\": (fieldName, matcherEntry)=>{\n            setCustomMatcherEntriesMap({\n                \"Form.useCallback[handleFieldCustomMatcherAdd]\": (prevCustomMatcherEntriesMap)=>{\n                    var _prevCustomMatcherEntriesMap_fieldName;\n                    return {\n                        ...prevCustomMatcherEntriesMap,\n                        [fieldName]: [\n                            ...(_prevCustomMatcherEntriesMap_fieldName = prevCustomMatcherEntriesMap[fieldName]) !== null && _prevCustomMatcherEntriesMap_fieldName !== void 0 ? _prevCustomMatcherEntriesMap_fieldName : [],\n                            matcherEntry\n                        ]\n                    };\n                }\n            }[\"Form.useCallback[handleFieldCustomMatcherAdd]\"]);\n        }\n    }[\"Form.useCallback[handleFieldCustomMatcherAdd]\"], []);\n    const handleFieldCustomMatcherRemove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[handleFieldCustomMatcherRemove]\": (fieldName, matcherEntryId)=>{\n            setCustomMatcherEntriesMap({\n                \"Form.useCallback[handleFieldCustomMatcherRemove]\": (prevCustomMatcherEntriesMap)=>{\n                    var _prevCustomMatcherEntriesMap_fieldName;\n                    return {\n                        ...prevCustomMatcherEntriesMap,\n                        [fieldName]: ((_prevCustomMatcherEntriesMap_fieldName = prevCustomMatcherEntriesMap[fieldName]) !== null && _prevCustomMatcherEntriesMap_fieldName !== void 0 ? _prevCustomMatcherEntriesMap_fieldName : []).filter({\n                            \"Form.useCallback[handleFieldCustomMatcherRemove]\": (matcherEntry)=>matcherEntry.id !== matcherEntryId\n                        }[\"Form.useCallback[handleFieldCustomMatcherRemove]\"])\n                    };\n                }\n            }[\"Form.useCallback[handleFieldCustomMatcherRemove]\"]);\n        }\n    }[\"Form.useCallback[handleFieldCustomMatcherRemove]\"], []);\n    const [customErrorsMap, setCustomErrorsMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const getFieldCustomErrors = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[getFieldCustomErrors]\": (fieldName)=>{\n            var _customErrorsMap_fieldName;\n            return (_customErrorsMap_fieldName = customErrorsMap[fieldName]) !== null && _customErrorsMap_fieldName !== void 0 ? _customErrorsMap_fieldName : {};\n        }\n    }[\"Form.useCallback[getFieldCustomErrors]\"], [\n        customErrorsMap\n    ]);\n    const handleFieldCustomErrorsChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[handleFieldCustomErrorsChange]\": (fieldName, customErrors)=>{\n            setCustomErrorsMap({\n                \"Form.useCallback[handleFieldCustomErrorsChange]\": (prevCustomErrorsMap)=>{\n                    var _prevCustomErrorsMap_fieldName;\n                    return {\n                        ...prevCustomErrorsMap,\n                        [fieldName]: {\n                            ...(_prevCustomErrorsMap_fieldName = prevCustomErrorsMap[fieldName]) !== null && _prevCustomErrorsMap_fieldName !== void 0 ? _prevCustomErrorsMap_fieldName : {},\n                            ...customErrors\n                        }\n                    };\n                }\n            }[\"Form.useCallback[handleFieldCustomErrorsChange]\"]);\n        }\n    }[\"Form.useCallback[handleFieldCustomErrorsChange]\"], []);\n    const [messageIdsMap, setMessageIdsMap] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const handleFieldMessageIdAdd = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[handleFieldMessageIdAdd]\": (fieldName, id)=>{\n            setMessageIdsMap({\n                \"Form.useCallback[handleFieldMessageIdAdd]\": (prevMessageIdsMap)=>{\n                    const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]).add(id);\n                    return {\n                        ...prevMessageIdsMap,\n                        [fieldName]: fieldDescriptionIds\n                    };\n                }\n            }[\"Form.useCallback[handleFieldMessageIdAdd]\"]);\n        }\n    }[\"Form.useCallback[handleFieldMessageIdAdd]\"], []);\n    const handleFieldMessageIdRemove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[handleFieldMessageIdRemove]\": (fieldName, id)=>{\n            setMessageIdsMap({\n                \"Form.useCallback[handleFieldMessageIdRemove]\": (prevMessageIdsMap)=>{\n                    const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]);\n                    fieldDescriptionIds.delete(id);\n                    return {\n                        ...prevMessageIdsMap,\n                        [fieldName]: fieldDescriptionIds\n                    };\n                }\n            }[\"Form.useCallback[handleFieldMessageIdRemove]\"]);\n        }\n    }[\"Form.useCallback[handleFieldMessageIdRemove]\"], []);\n    const getFieldDescription = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"Form.useCallback[getFieldDescription]\": (fieldName)=>{\n            var _messageIdsMap_fieldName;\n            return Array.from((_messageIdsMap_fieldName = messageIdsMap[fieldName]) !== null && _messageIdsMap_fieldName !== void 0 ? _messageIdsMap_fieldName : []).join(\" \") || void 0;\n        }\n    }[\"Form.useCallback[getFieldDescription]\"], [\n        messageIdsMap\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ValidationProvider, {\n        scope: __scopeForm,\n        getFieldValidity,\n        onFieldValidityChange: handleFieldValidityChange,\n        getFieldCustomMatcherEntries,\n        onFieldCustomMatcherEntryAdd: handleFieldCustomMatcherAdd,\n        onFieldCustomMatcherEntryRemove: handleFieldCustomMatcherRemove,\n        getFieldCustomErrors,\n        onFieldCustomErrorsChange: handleFieldCustomErrorsChange,\n        onFieldValiditionClear: handleFieldValiditionClear,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AriaDescriptionProvider, {\n            scope: __scopeForm,\n            onFieldMessageIdAdd: handleFieldMessageIdAdd,\n            onFieldMessageIdRemove: handleFieldMessageIdRemove,\n            getFieldDescription,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.form, {\n                ...rootProps,\n                ref: composedFormRef,\n                onInvalid: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onInvalid, (event)=>{\n                    const firstInvalidControl = getFirstInvalidControl(event.currentTarget);\n                    if (firstInvalidControl === event.target) firstInvalidControl.focus();\n                    event.preventDefault();\n                }),\n                onSubmit: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onSubmit, onClearServerErrors, {\n                    checkForDefaultPrevented: false\n                }),\n                onReset: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onReset, onClearServerErrors)\n            })\n        })\n    });\n}, \"znXW+SV0CCLgbEjczhrA/A+y5V4=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n})), \"znXW+SV0CCLgbEjczhrA/A+y5V4=\", false, function() {\n    return [\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n});\n_c1 = Form;\nForm.displayName = FORM_NAME;\nvar FIELD_NAME = \"FormField\";\nvar [FormFieldProvider, useFormFieldContext] = createFormContext(FIELD_NAME);\nvar FormField = /*#__PURE__*/ _s1(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c2 = _s1((props, forwardedRef)=>{\n    _s1();\n    const { __scopeForm, name, serverInvalid = false, ...fieldProps } = props;\n    const validationContext = useValidationContext(FIELD_NAME, __scopeForm);\n    const validity = validationContext.getFieldValidity(name);\n    const id = (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId)();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormFieldProvider, {\n        scope: __scopeForm,\n        id,\n        name,\n        serverInvalid,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.div, {\n            \"data-valid\": getValidAttribute(validity, serverInvalid),\n            \"data-invalid\": getInvalidAttribute(validity, serverInvalid),\n            ...fieldProps,\n            ref: forwardedRef\n        })\n    });\n}, \"QtO2CrCjvzX7EDI72yMOl2fgkVw=\", false, function() {\n    return [\n        useValidationContext,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId\n    ];\n})), \"QtO2CrCjvzX7EDI72yMOl2fgkVw=\", false, function() {\n    return [\n        useValidationContext,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId\n    ];\n});\n_c3 = FormField;\nFormField.displayName = FIELD_NAME;\nvar LABEL_NAME = \"FormLabel\";\nvar FormLabel = /*#__PURE__*/ _s2(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c4 = _s2((props, forwardedRef)=>{\n    _s2();\n    const { __scopeForm, ...labelProps } = props;\n    const validationContext = useValidationContext(LABEL_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(LABEL_NAME, __scopeForm);\n    const htmlFor = labelProps.htmlFor || fieldContext.id;\n    const validity = validationContext.getFieldValidity(fieldContext.name);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_label__WEBPACK_IMPORTED_MODULE_7__.Label, {\n        \"data-valid\": getValidAttribute(validity, fieldContext.serverInvalid),\n        \"data-invalid\": getInvalidAttribute(validity, fieldContext.serverInvalid),\n        ...labelProps,\n        ref: forwardedRef,\n        htmlFor\n    });\n}, \"xAZltm1+/ZJbfBzCEma+mqQ9Vi8=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext\n    ];\n})), \"xAZltm1+/ZJbfBzCEma+mqQ9Vi8=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext\n    ];\n});\n_c5 = FormLabel;\nFormLabel.displayName = LABEL_NAME;\nvar CONTROL_NAME = \"FormControl\";\nvar FormControl = /*#__PURE__*/ _s3(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c6 = _s3((props, forwardedRef)=>{\n    _s3();\n    const { __scopeForm, ...controlProps } = props;\n    const validationContext = useValidationContext(CONTROL_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(CONTROL_NAME, __scopeForm);\n    const ariaDescriptionContext = useAriaDescriptionContext(CONTROL_NAME, __scopeForm);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref);\n    const name = controlProps.name || fieldContext.name;\n    const id = controlProps.id || fieldContext.id;\n    const customMatcherEntries = validationContext.getFieldCustomMatcherEntries(name);\n    const { onFieldValidityChange, onFieldCustomErrorsChange, onFieldValiditionClear } = validationContext;\n    const updateControlValidity = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"FormControl.useCallback[updateControlValidity]\": async (control)=>{\n            if (hasBuiltInError(control.validity)) {\n                const controlValidity2 = validityStateToObject(control.validity);\n                onFieldValidityChange(name, controlValidity2);\n                return;\n            }\n            const formData = control.form ? new FormData(control.form) : new FormData();\n            const matcherArgs = [\n                control.value,\n                formData\n            ];\n            const syncCustomMatcherEntries = [];\n            const ayncCustomMatcherEntries = [];\n            customMatcherEntries.forEach({\n                \"FormControl.useCallback[updateControlValidity]\": (customMatcherEntry)=>{\n                    if (isAsyncCustomMatcherEntry(customMatcherEntry, matcherArgs)) {\n                        ayncCustomMatcherEntries.push(customMatcherEntry);\n                    } else if (isSyncCustomMatcherEntry(customMatcherEntry)) {\n                        syncCustomMatcherEntries.push(customMatcherEntry);\n                    }\n                }\n            }[\"FormControl.useCallback[updateControlValidity]\"]);\n            const syncCustomErrors = syncCustomMatcherEntries.map({\n                \"FormControl.useCallback[updateControlValidity].syncCustomErrors\": (param)=>{\n                    let { id: id2, match } = param;\n                    return [\n                        id2,\n                        match(...matcherArgs)\n                    ];\n                }\n            }[\"FormControl.useCallback[updateControlValidity].syncCustomErrors\"]);\n            const syncCustomErrorsById = Object.fromEntries(syncCustomErrors);\n            const hasSyncCustomErrors = Object.values(syncCustomErrorsById).some(Boolean);\n            const hasCustomError = hasSyncCustomErrors;\n            control.setCustomValidity(hasCustomError ? DEFAULT_INVALID_MESSAGE : \"\");\n            const controlValidity = validityStateToObject(control.validity);\n            onFieldValidityChange(name, controlValidity);\n            onFieldCustomErrorsChange(name, syncCustomErrorsById);\n            if (!hasSyncCustomErrors && ayncCustomMatcherEntries.length > 0) {\n                const promisedCustomErrors = ayncCustomMatcherEntries.map({\n                    \"FormControl.useCallback[updateControlValidity].promisedCustomErrors\": (param)=>{\n                        let { id: id2, match } = param;\n                        return match(...matcherArgs).then({\n                            \"FormControl.useCallback[updateControlValidity].promisedCustomErrors\": (matches)=>[\n                                    id2,\n                                    matches\n                                ]\n                        }[\"FormControl.useCallback[updateControlValidity].promisedCustomErrors\"]);\n                    }\n                }[\"FormControl.useCallback[updateControlValidity].promisedCustomErrors\"]);\n                const asyncCustomErrors = await Promise.all(promisedCustomErrors);\n                const asyncCustomErrorsById = Object.fromEntries(asyncCustomErrors);\n                const hasAsyncCustomErrors = Object.values(asyncCustomErrorsById).some(Boolean);\n                const hasCustomError2 = hasAsyncCustomErrors;\n                control.setCustomValidity(hasCustomError2 ? DEFAULT_INVALID_MESSAGE : \"\");\n                const controlValidity2 = validityStateToObject(control.validity);\n                onFieldValidityChange(name, controlValidity2);\n                onFieldCustomErrorsChange(name, asyncCustomErrorsById);\n            }\n        }\n    }[\"FormControl.useCallback[updateControlValidity]\"], [\n        customMatcherEntries,\n        name,\n        onFieldCustomErrorsChange,\n        onFieldValidityChange\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"FormControl.useEffect\": ()=>{\n            const control = ref.current;\n            if (control) {\n                const handleChange = {\n                    \"FormControl.useEffect.handleChange\": ()=>updateControlValidity(control)\n                }[\"FormControl.useEffect.handleChange\"];\n                control.addEventListener(\"change\", handleChange);\n                return ({\n                    \"FormControl.useEffect\": ()=>control.removeEventListener(\"change\", handleChange)\n                })[\"FormControl.useEffect\"];\n            }\n        }\n    }[\"FormControl.useEffect\"], [\n        updateControlValidity\n    ]);\n    const resetControlValidity = react__WEBPACK_IMPORTED_MODULE_0__.useCallback({\n        \"FormControl.useCallback[resetControlValidity]\": ()=>{\n            const control = ref.current;\n            if (control) {\n                control.setCustomValidity(\"\");\n                onFieldValiditionClear(name);\n            }\n        }\n    }[\"FormControl.useCallback[resetControlValidity]\"], [\n        name,\n        onFieldValiditionClear\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"FormControl.useEffect\": ()=>{\n            var _ref_current;\n            const form = (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;\n            if (form) {\n                form.addEventListener(\"reset\", resetControlValidity);\n                return ({\n                    \"FormControl.useEffect\": ()=>form.removeEventListener(\"reset\", resetControlValidity)\n                })[\"FormControl.useEffect\"];\n            }\n        }\n    }[\"FormControl.useEffect\"], [\n        resetControlValidity\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"FormControl.useEffect\": ()=>{\n            const control = ref.current;\n            const form = control === null || control === void 0 ? void 0 : control.closest(\"form\");\n            if (form && fieldContext.serverInvalid) {\n                const firstInvalidControl = getFirstInvalidControl(form);\n                if (firstInvalidControl === control) firstInvalidControl.focus();\n            }\n        }\n    }[\"FormControl.useEffect\"], [\n        fieldContext.serverInvalid\n    ]);\n    const validity = validationContext.getFieldValidity(name);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.input, {\n        \"data-valid\": getValidAttribute(validity, fieldContext.serverInvalid),\n        \"data-invalid\": getInvalidAttribute(validity, fieldContext.serverInvalid),\n        \"aria-invalid\": fieldContext.serverInvalid ? true : void 0,\n        \"aria-describedby\": ariaDescriptionContext.getFieldDescription(name),\n        title: \"\",\n        ...controlProps,\n        ref: composedRef,\n        id,\n        name,\n        onInvalid: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onInvalid, (event)=>{\n            const control = event.currentTarget;\n            updateControlValidity(control);\n        }),\n        onChange: (0,_radix_ui_primitive__WEBPACK_IMPORTED_MODULE_5__.composeEventHandlers)(props.onChange, (_event)=>{\n            resetControlValidity();\n        })\n    });\n}, \"iwsb6EFGBTRTcMGyFrwMG6Mtvlg=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext,\n        useAriaDescriptionContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n})), \"iwsb6EFGBTRTcMGyFrwMG6Mtvlg=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext,\n        useAriaDescriptionContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs\n    ];\n});\n_c7 = FormControl;\nFormControl.displayName = CONTROL_NAME;\nvar DEFAULT_INVALID_MESSAGE = \"This value is not valid\";\nvar DEFAULT_BUILT_IN_MESSAGES = {\n    badInput: DEFAULT_INVALID_MESSAGE,\n    patternMismatch: \"This value does not match the required pattern\",\n    rangeOverflow: \"This value is too large\",\n    rangeUnderflow: \"This value is too small\",\n    stepMismatch: \"This value does not match the required step\",\n    tooLong: \"This value is too long\",\n    tooShort: \"This value is too short\",\n    typeMismatch: \"This value does not match the required type\",\n    valid: void 0,\n    valueMissing: \"This value is missing\"\n};\nvar MESSAGE_NAME = \"FormMessage\";\nvar FormMessage = /*#__PURE__*/ _s4(react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c8 = _s4((props, forwardedRef)=>{\n    _s4();\n    const { match, name: nameProp, ...messageProps } = props;\n    const fieldContext = useFormFieldContext(MESSAGE_NAME, props.__scopeForm);\n    const name = nameProp !== null && nameProp !== void 0 ? nameProp : fieldContext.name;\n    if (match === void 0) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormMessageImpl, {\n            ...messageProps,\n            ref: forwardedRef,\n            name,\n            children: props.children || DEFAULT_INVALID_MESSAGE\n        });\n    } else if (typeof match === \"function\") {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormCustomMessage, {\n            match,\n            ...messageProps,\n            ref: forwardedRef,\n            name\n        });\n    } else {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormBuiltInMessage, {\n            match,\n            ...messageProps,\n            ref: forwardedRef,\n            name\n        });\n    }\n}, \"KDtQrqLsDp7HN9npqX++fwcE8eQ=\", false, function() {\n    return [\n        useFormFieldContext\n    ];\n})), \"KDtQrqLsDp7HN9npqX++fwcE8eQ=\", false, function() {\n    return [\n        useFormFieldContext\n    ];\n});\n_c9 = FormMessage;\nFormMessage.displayName = MESSAGE_NAME;\nvar FormBuiltInMessage = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s5((props, forwardedRef)=>{\n    _s5();\n    const { match, forceMatch = false, name, children, ...messageProps } = props;\n    const validationContext = useValidationContext(MESSAGE_NAME, messageProps.__scopeForm);\n    const validity = validationContext.getFieldValidity(name);\n    const matches = forceMatch || (validity === null || validity === void 0 ? void 0 : validity[match]);\n    if (matches) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormMessageImpl, {\n            ref: forwardedRef,\n            ...messageProps,\n            name,\n            children: children !== null && children !== void 0 ? children : DEFAULT_BUILT_IN_MESSAGES[match]\n        });\n    }\n    return null;\n}, \"B9g6kthSaiu6o2fBu1ng4isqqU8=\", false, function() {\n    return [\n        useValidationContext\n    ];\n}));\n_c10 = FormBuiltInMessage;\nvar FormCustomMessage = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s6((props, forwardedRef)=>{\n    _s6();\n    const { match, forceMatch = false, name, id: idProp, children, ...messageProps } = props;\n    const validationContext = useValidationContext(MESSAGE_NAME, messageProps.__scopeForm);\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const composedRef = (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs)(forwardedRef, ref);\n    const _id = (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId)();\n    const id = idProp !== null && idProp !== void 0 ? idProp : _id;\n    const customMatcherEntry = react__WEBPACK_IMPORTED_MODULE_0__.useMemo({\n        \"FormCustomMessage.useMemo[customMatcherEntry]\": ()=>({\n                id,\n                match\n            })\n    }[\"FormCustomMessage.useMemo[customMatcherEntry]\"], [\n        id,\n        match\n    ]);\n    const { onFieldCustomMatcherEntryAdd, onFieldCustomMatcherEntryRemove } = validationContext;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"FormCustomMessage.useEffect\": ()=>{\n            onFieldCustomMatcherEntryAdd(name, customMatcherEntry);\n            return ({\n                \"FormCustomMessage.useEffect\": ()=>onFieldCustomMatcherEntryRemove(name, customMatcherEntry.id)\n            })[\"FormCustomMessage.useEffect\"];\n        }\n    }[\"FormCustomMessage.useEffect\"], [\n        customMatcherEntry,\n        name,\n        onFieldCustomMatcherEntryAdd,\n        onFieldCustomMatcherEntryRemove\n    ]);\n    const validity = validationContext.getFieldValidity(name);\n    const customErrors = validationContext.getFieldCustomErrors(name);\n    const hasMatchingCustomError = customErrors[id];\n    const matches = forceMatch || validity && !hasBuiltInError(validity) && hasMatchingCustomError;\n    if (matches) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FormMessageImpl, {\n            id,\n            ref: composedRef,\n            ...messageProps,\n            name,\n            children: children !== null && children !== void 0 ? children : DEFAULT_INVALID_MESSAGE\n        });\n    }\n    return null;\n}, \"yU9yUzvpwSblWm7+F2wSiARynYI=\", false, function() {\n    return [\n        useValidationContext,\n        _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_3__.useComposedRefs,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId\n    ];\n}));\n_c11 = FormCustomMessage;\nvar FormMessageImpl = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_s7((props, forwardedRef)=>{\n    _s7();\n    const { __scopeForm, id: idProp, name, ...messageProps } = props;\n    const ariaDescriptionContext = useAriaDescriptionContext(MESSAGE_NAME, __scopeForm);\n    const _id = (0,_radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId)();\n    const id = idProp !== null && idProp !== void 0 ? idProp : _id;\n    const { onFieldMessageIdAdd, onFieldMessageIdRemove } = ariaDescriptionContext;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect({\n        \"FormMessageImpl.useEffect\": ()=>{\n            onFieldMessageIdAdd(name, id);\n            return ({\n                \"FormMessageImpl.useEffect\": ()=>onFieldMessageIdRemove(name, id)\n            })[\"FormMessageImpl.useEffect\"];\n        }\n    }[\"FormMessageImpl.useEffect\"], [\n        name,\n        id,\n        onFieldMessageIdAdd,\n        onFieldMessageIdRemove\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.span, {\n        id,\n        ...messageProps,\n        ref: forwardedRef\n    });\n}, \"szdh+V66vOn6ALMfxAOuZEo9T+Q=\", false, function() {\n    return [\n        useAriaDescriptionContext,\n        _radix_ui_react_id__WEBPACK_IMPORTED_MODULE_6__.useId\n    ];\n}));\n_c12 = FormMessageImpl;\nvar VALIDITY_STATE_NAME = \"FormValidityState\";\nvar FormValidityState = (props)=>{\n    _s8();\n    const { __scopeForm, name: nameProp, children } = props;\n    const validationContext = useValidationContext(VALIDITY_STATE_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(VALIDITY_STATE_NAME, __scopeForm);\n    const name = nameProp !== null && nameProp !== void 0 ? nameProp : fieldContext.name;\n    const validity = validationContext.getFieldValidity(name);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: children(validity)\n    });\n};\n_s8(FormValidityState, \"xAZltm1+/ZJbfBzCEma+mqQ9Vi8=\", false, function() {\n    return [\n        useValidationContext,\n        useFormFieldContext\n    ];\n});\n_c13 = FormValidityState;\nFormValidityState.displayName = VALIDITY_STATE_NAME;\nvar SUBMIT_NAME = \"FormSubmit\";\nvar FormSubmit = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c14 = (props, forwardedRef)=>{\n    const { __scopeForm, ...submitProps } = props;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_4__.Primitive.button, {\n        type: \"submit\",\n        ...submitProps,\n        ref: forwardedRef\n    });\n});\n_c15 = FormSubmit;\nFormSubmit.displayName = SUBMIT_NAME;\nfunction validityStateToObject(validity) {\n    const object = {};\n    for(const key in validity){\n        object[key] = validity[key];\n    }\n    return object;\n}\nfunction isHTMLElement(element) {\n    return element instanceof HTMLElement;\n}\nfunction isFormControl(element) {\n    return \"validity\" in element;\n}\nfunction isInvalid(control) {\n    return isFormControl(control) && (control.validity.valid === false || control.getAttribute(\"aria-invalid\") === \"true\");\n}\nfunction getFirstInvalidControl(form) {\n    const elements = form.elements;\n    const [firstInvalidControl] = Array.from(elements).filter(isHTMLElement).filter(isInvalid);\n    return firstInvalidControl;\n}\nfunction isAsyncCustomMatcherEntry(entry, args) {\n    return entry.match.constructor.name === \"AsyncFunction\" || returnsPromise(entry.match, args);\n}\nfunction isSyncCustomMatcherEntry(entry) {\n    return entry.match.constructor.name === \"Function\";\n}\nfunction returnsPromise(func, args) {\n    return func(...args) instanceof Promise;\n}\nfunction hasBuiltInError(validity) {\n    let error = false;\n    for(const validityKey in validity){\n        const key = validityKey;\n        if (key !== \"valid\" && key !== \"customError\" && validity[key]) {\n            error = true;\n            break;\n        }\n    }\n    return error;\n}\nfunction getValidAttribute(validity, serverInvalid) {\n    if ((validity === null || validity === void 0 ? void 0 : validity.valid) === true && !serverInvalid) return true;\n    return void 0;\n}\nfunction getInvalidAttribute(validity, serverInvalid) {\n    if ((validity === null || validity === void 0 ? void 0 : validity.valid) === false || serverInvalid) return true;\n    return void 0;\n}\nvar Root = Form;\nvar Field = FormField;\nvar Label = FormLabel;\nvar Control = FormControl;\nvar Message = FormMessage;\nvar ValidityState = FormValidityState;\nvar Submit = FormSubmit;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"Form$React.forwardRef\");\n$RefreshReg$(_c1, \"Form\");\n$RefreshReg$(_c2, \"FormField$React.forwardRef\");\n$RefreshReg$(_c3, \"FormField\");\n$RefreshReg$(_c4, \"FormLabel$React.forwardRef\");\n$RefreshReg$(_c5, \"FormLabel\");\n$RefreshReg$(_c6, \"FormControl$React.forwardRef\");\n$RefreshReg$(_c7, \"FormControl\");\n$RefreshReg$(_c8, \"FormMessage$React.forwardRef\");\n$RefreshReg$(_c9, \"FormMessage\");\n$RefreshReg$(_c10, \"FormBuiltInMessage\");\n$RefreshReg$(_c11, \"FormCustomMessage\");\n$RefreshReg$(_c12, \"FormMessageImpl\");\n$RefreshReg$(_c13, \"FormValidityState\");\n$RefreshReg$(_c14, \"FormSubmit$React.forwardRef\");\n$RefreshReg$(_c15, \"FormSubmit\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-form/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@radix-ui/react-id/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useId: () => (/* binding */ useId)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @radix-ui/react-use-layout-effect */ \"(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\");\n// packages/react/id/src/id.tsx\n\n\nvar useReactId = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2)))[\" useId \".trim().toString()] || (() => void 0);\nvar count = 0;\nfunction useId(deterministicId) {\n  const [id, setId] = react__WEBPACK_IMPORTED_MODULE_0__.useState(useReactId());\n  (0,_radix_ui_react_use_layout_effect__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : \"\");\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtaWQvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQytCO0FBQ3FDO0FBQ3BFLGlCQUFpQix5TEFBSztBQUN0QjtBQUNBO0FBQ0Esc0JBQXNCLDJDQUFjO0FBQ3BDLEVBQUUsa0ZBQWU7QUFDakI7QUFDQSxHQUFHO0FBQ0gsMkNBQTJDLEdBQUc7QUFDOUM7QUFHRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtaWQvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFja2FnZXMvcmVhY3QvaWQvc3JjL2lkLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0XCI7XG52YXIgdXNlUmVhY3RJZCA9IFJlYWN0W1wiIHVzZUlkIFwiLnRyaW0oKS50b1N0cmluZygpXSB8fCAoKCkgPT4gdm9pZCAwKTtcbnZhciBjb3VudCA9IDA7XG5mdW5jdGlvbiB1c2VJZChkZXRlcm1pbmlzdGljSWQpIHtcbiAgY29uc3QgW2lkLCBzZXRJZF0gPSBSZWFjdC51c2VTdGF0ZSh1c2VSZWFjdElkKCkpO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghZGV0ZXJtaW5pc3RpY0lkKSBzZXRJZCgocmVhY3RJZCkgPT4gcmVhY3RJZCA/PyBTdHJpbmcoY291bnQrKykpO1xuICB9LCBbZGV0ZXJtaW5pc3RpY0lkXSk7XG4gIHJldHVybiBkZXRlcm1pbmlzdGljSWQgfHwgKGlkID8gYHJhZGl4LSR7aWR9YCA6IFwiXCIpO1xufVxuZXhwb3J0IHtcbiAgdXNlSWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-id/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-label/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@radix-ui/react-label/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   Root: () => (/* binding */ Root)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ Label,Root auto */ // src/label.tsx\n\n\n\nvar NAME = \"Label\";\nvar Label = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(_c = (props, forwardedRef)=>{\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__.Primitive.label, {\n        ...props,\n        ref: forwardedRef,\n        onMouseDown: (event)=>{\n            var _props_onMouseDown;\n            const target = event.target;\n            if (target.closest(\"button, input, select, textarea\")) return;\n            (_props_onMouseDown = props.onMouseDown) === null || _props_onMouseDown === void 0 ? void 0 : _props_onMouseDown.call(props, event);\n            if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n        }\n    });\n});\n_c1 = Label;\nLabel.displayName = NAME;\nvar Root = Label;\n //# sourceMappingURL=index.mjs.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Label$React.forwardRef\");\n$RefreshReg$(_c1, \"Label\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtbGFiZWwvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVCO0FBQ0c7QUFjdEI7QUFSSixJQUFNLE9BQU87QUFNYixJQUFNLHNCQUFjLG1EQUFxQyxDQUFDLE9BQU87SUFDL0QsT0FDRSx1RUFBQyxnRUFBUyxDQUFDLE9BQVY7UUFDRSxHQUFHO1FBQ0osS0FBSztRQUNMLGFBQWEsQ0FBQztnQkFLWjtZQUhBLE1BQU0sU0FBUyxNQUFNO1lBQ3JCLElBQUksT0FBTyxRQUFRLGlDQUFpQyxFQUFHO2FBRXZELDJCQUFNLHlCQUFOLHdFQUFvQixLQUFLO1lBRXpCLElBQUksQ0FBQyxNQUFNLG9CQUFvQixNQUFNLFNBQVMsRUFBRyxPQUFNLGVBQWU7UUFDeEU7SUFBQTtBQUdOLENBQUM7O0FBRUQsTUFBTSxjQUFjO0FBSXBCLElBQU0sT0FBTyIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvc3JjL2xhYmVsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBQcmltaXRpdmUgfSBmcm9tICdAcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlJztcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogTGFiZWxcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuY29uc3QgTkFNRSA9ICdMYWJlbCc7XG5cbnR5cGUgTGFiZWxFbGVtZW50ID0gUmVhY3QuQ29tcG9uZW50UmVmPHR5cGVvZiBQcmltaXRpdmUubGFiZWw+O1xudHlwZSBQcmltaXRpdmVMYWJlbFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBQcmltaXRpdmUubGFiZWw+O1xuaW50ZXJmYWNlIExhYmVsUHJvcHMgZXh0ZW5kcyBQcmltaXRpdmVMYWJlbFByb3BzIHt9XG5cbmNvbnN0IExhYmVsID0gUmVhY3QuZm9yd2FyZFJlZjxMYWJlbEVsZW1lbnQsIExhYmVsUHJvcHM+KChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFByaW1pdGl2ZS5sYWJlbFxuICAgICAgey4uLnByb3BzfVxuICAgICAgcmVmPXtmb3J3YXJkZWRSZWZ9XG4gICAgICBvbk1vdXNlRG93bj17KGV2ZW50KSA9PiB7XG4gICAgICAgIC8vIG9ubHkgcHJldmVudCB0ZXh0IHNlbGVjdGlvbiBpZiBjbGlja2luZyBpbnNpZGUgdGhlIGxhYmVsIGl0c2VsZlxuICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICAgIGlmICh0YXJnZXQuY2xvc2VzdCgnYnV0dG9uLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYScpKSByZXR1cm47XG5cbiAgICAgICAgcHJvcHMub25Nb3VzZURvd24/LihldmVudCk7XG4gICAgICAgIC8vIHByZXZlbnQgdGV4dCBzZWxlY3Rpb24gd2hlbiBkb3VibGUgY2xpY2tpbmcgbGFiZWxcbiAgICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIGV2ZW50LmRldGFpbCA+IDEpIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59KTtcblxuTGFiZWwuZGlzcGxheU5hbWUgPSBOQU1FO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmNvbnN0IFJvb3QgPSBMYWJlbDtcblxuZXhwb3J0IHtcbiAgTGFiZWwsXG4gIC8vXG4gIFJvb3QsXG59O1xuZXhwb3J0IHR5cGUgeyBMYWJlbFByb3BzIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-label/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@radix-ui/react-primitive/dist/index.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Primitive: () => (/* binding */ Primitive),\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   dispatchDiscreteCustomEvent: () => (/* binding */ dispatchDiscreteCustomEvent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// src/primitive.tsx\n\n\n\n\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = (0,_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_3__.createSlot)(`Primitive.${node}`);\n  const Node = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUNPO0FBQ1k7QUFDVjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnRUFBVSxjQUFjLEtBQUs7QUFDNUMsZUFBZSw2Q0FBZ0I7QUFDL0IsWUFBWSw2QkFBNkI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsc0RBQUcsU0FBUyxzQ0FBc0M7QUFDN0UsR0FBRztBQUNILGtDQUFrQyxLQUFLO0FBQ3ZDLFdBQVc7QUFDWCxDQUFDLElBQUk7QUFDTDtBQUNBLGNBQWMsZ0RBQWtCO0FBQ2hDO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtcHJpbWl0aXZlL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9wcmltaXRpdmUudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcbmltcG9ydCB7IGNyZWF0ZVNsb3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXNsb3RcIjtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIE5PREVTID0gW1xuICBcImFcIixcbiAgXCJidXR0b25cIixcbiAgXCJkaXZcIixcbiAgXCJmb3JtXCIsXG4gIFwiaDJcIixcbiAgXCJoM1wiLFxuICBcImltZ1wiLFxuICBcImlucHV0XCIsXG4gIFwibGFiZWxcIixcbiAgXCJsaVwiLFxuICBcIm5hdlwiLFxuICBcIm9sXCIsXG4gIFwicFwiLFxuICBcInNlbGVjdFwiLFxuICBcInNwYW5cIixcbiAgXCJzdmdcIixcbiAgXCJ1bFwiXG5dO1xudmFyIFByaW1pdGl2ZSA9IE5PREVTLnJlZHVjZSgocHJpbWl0aXZlLCBub2RlKSA9PiB7XG4gIGNvbnN0IFNsb3QgPSBjcmVhdGVTbG90KGBQcmltaXRpdmUuJHtub2RlfWApO1xuICBjb25zdCBOb2RlID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICAgIGNvbnN0IHsgYXNDaGlsZCwgLi4ucHJpbWl0aXZlUHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6IG5vZGU7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHdpbmRvd1tTeW1ib2wuZm9yKFwicmFkaXgtdWlcIildID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goQ29tcCwgeyAuLi5wcmltaXRpdmVQcm9wcywgcmVmOiBmb3J3YXJkZWRSZWYgfSk7XG4gIH0pO1xuICBOb2RlLmRpc3BsYXlOYW1lID0gYFByaW1pdGl2ZS4ke25vZGV9YDtcbiAgcmV0dXJuIHsgLi4ucHJpbWl0aXZlLCBbbm9kZV06IE5vZGUgfTtcbn0sIHt9KTtcbmZ1bmN0aW9uIGRpc3BhdGNoRGlzY3JldGVDdXN0b21FdmVudCh0YXJnZXQsIGV2ZW50KSB7XG4gIGlmICh0YXJnZXQpIFJlYWN0RE9NLmZsdXNoU3luYygoKSA9PiB0YXJnZXQuZGlzcGF0Y2hFdmVudChldmVudCkpO1xufVxudmFyIFJvb3QgPSBQcmltaXRpdmU7XG5leHBvcnQge1xuICBQcmltaXRpdmUsXG4gIFJvb3QsXG4gIGRpc3BhdGNoRGlzY3JldGVDdXN0b21FdmVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-primitive/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@radix-ui/react-slot/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: () => (/* binding */ Slot),\n/* harmony export */   Slot: () => (/* binding */ Slot),\n/* harmony export */   Slottable: () => (/* binding */ Slottable),\n/* harmony export */   createSlot: () => (/* binding */ createSlot),\n/* harmony export */   createSlottable: () => (/* binding */ createSlottable)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-compose-refs */ \"(app-pages-browser)/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// src/slot.tsx\n\n\n\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(newElement) > 1) return react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null);\n          return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(newElement) ? react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== react__WEBPACK_IMPORTED_MODULE_0__.Fragment) {\n        props2.ref = forwardedRef ? (0,_radix_ui_react_compose_refs__WEBPACK_IMPORTED_MODULE_2__.composeRefs)(forwardedRef, childrenRef) : childrenRef;\n      }\n      return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(children, props2);\n    }\n    return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1 ? react__WEBPACK_IMPORTED_MODULE_0__.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3Qtc2xvdC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQytCO0FBQzRCO0FBQ0k7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZDQUFnQjtBQUNoQyxZQUFZLHlCQUF5QjtBQUNyQywwQkFBMEIsMkNBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMkNBQWMsK0JBQStCLDJDQUFjO0FBQ3pFLGlCQUFpQixpREFBb0I7QUFDckMsVUFBVTtBQUNWO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsNkJBQTZCLHNEQUFHLGNBQWMsMkNBQTJDLGlEQUFvQixlQUFlLCtDQUFrQiwwQ0FBMEM7QUFDeEw7QUFDQSwyQkFBMkIsc0RBQUcsY0FBYywyQ0FBMkM7QUFDdkYsR0FBRztBQUNILHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNkNBQWdCO0FBQ3BDLFlBQVkseUJBQXlCO0FBQ3JDLFFBQVEsaURBQW9CO0FBQzVCO0FBQ0E7QUFDQSw0QkFBNEIsMkNBQWM7QUFDMUMsb0NBQW9DLHlFQUFXO0FBQy9DO0FBQ0EsYUFBYSwrQ0FBa0I7QUFDL0I7QUFDQSxXQUFXLDJDQUFjLHVCQUF1QiwyQ0FBYztBQUM5RCxHQUFHO0FBQ0gsNkJBQTZCLFVBQVU7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixVQUFVO0FBQ2xDLDJCQUEyQixzREFBRyxDQUFDLHVEQUFTLElBQUksVUFBVTtBQUN0RDtBQUNBLDhCQUE4QixVQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlEQUFvQjtBQUM3QjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTixrQ0FBa0M7QUFDbEMsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0U7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXNsb3QvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3Nsb3QudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbXBvc2VSZWZzIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1jb21wb3NlLXJlZnNcIjtcbmltcG9ydCB7IEZyYWdtZW50IGFzIEZyYWdtZW50MiwganN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG4vLyBAX19OT19TSURFX0VGRkVDVFNfX1xuZnVuY3Rpb24gY3JlYXRlU2xvdChvd25lck5hbWUpIHtcbiAgY29uc3QgU2xvdENsb25lID0gLyogQF9fUFVSRV9fICovIGNyZWF0ZVNsb3RDbG9uZShvd25lck5hbWUpO1xuICBjb25zdCBTbG90MiA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCAuLi5zbG90UHJvcHMgfSA9IHByb3BzO1xuICAgIGNvbnN0IGNoaWxkcmVuQXJyYXkgPSBSZWFjdC5DaGlsZHJlbi50b0FycmF5KGNoaWxkcmVuKTtcbiAgICBjb25zdCBzbG90dGFibGUgPSBjaGlsZHJlbkFycmF5LmZpbmQoaXNTbG90dGFibGUpO1xuICAgIGlmIChzbG90dGFibGUpIHtcbiAgICAgIGNvbnN0IG5ld0VsZW1lbnQgPSBzbG90dGFibGUucHJvcHMuY2hpbGRyZW47XG4gICAgICBjb25zdCBuZXdDaGlsZHJlbiA9IGNoaWxkcmVuQXJyYXkubWFwKChjaGlsZCkgPT4ge1xuICAgICAgICBpZiAoY2hpbGQgPT09IHNsb3R0YWJsZSkge1xuICAgICAgICAgIGlmIChSZWFjdC5DaGlsZHJlbi5jb3VudChuZXdFbGVtZW50KSA+IDEpIHJldHVybiBSZWFjdC5DaGlsZHJlbi5vbmx5KG51bGwpO1xuICAgICAgICAgIHJldHVybiBSZWFjdC5pc1ZhbGlkRWxlbWVudChuZXdFbGVtZW50KSA/IG5ld0VsZW1lbnQucHJvcHMuY2hpbGRyZW4gOiBudWxsO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBjaGlsZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChTbG90Q2xvbmUsIHsgLi4uc2xvdFByb3BzLCByZWY6IGZvcndhcmRlZFJlZiwgY2hpbGRyZW46IFJlYWN0LmlzVmFsaWRFbGVtZW50KG5ld0VsZW1lbnQpID8gUmVhY3QuY2xvbmVFbGVtZW50KG5ld0VsZW1lbnQsIHZvaWQgMCwgbmV3Q2hpbGRyZW4pIDogbnVsbCB9KTtcbiAgICB9XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goU2xvdENsb25lLCB7IC4uLnNsb3RQcm9wcywgcmVmOiBmb3J3YXJkZWRSZWYsIGNoaWxkcmVuIH0pO1xuICB9KTtcbiAgU2xvdDIuZGlzcGxheU5hbWUgPSBgJHtvd25lck5hbWV9LlNsb3RgO1xuICByZXR1cm4gU2xvdDI7XG59XG52YXIgU2xvdCA9IC8qIEBfX1BVUkVfXyAqLyBjcmVhdGVTbG90KFwiU2xvdFwiKTtcbi8vIEBfX05PX1NJREVfRUZGRUNUU19fXG5mdW5jdGlvbiBjcmVhdGVTbG90Q2xvbmUob3duZXJOYW1lKSB7XG4gIGNvbnN0IFNsb3RDbG9uZSA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCAuLi5zbG90UHJvcHMgfSA9IHByb3BzO1xuICAgIGlmIChSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZHJlbikpIHtcbiAgICAgIGNvbnN0IGNoaWxkcmVuUmVmID0gZ2V0RWxlbWVudFJlZihjaGlsZHJlbik7XG4gICAgICBjb25zdCBwcm9wczIgPSBtZXJnZVByb3BzKHNsb3RQcm9wcywgY2hpbGRyZW4ucHJvcHMpO1xuICAgICAgaWYgKGNoaWxkcmVuLnR5cGUgIT09IFJlYWN0LkZyYWdtZW50KSB7XG4gICAgICAgIHByb3BzMi5yZWYgPSBmb3J3YXJkZWRSZWYgPyBjb21wb3NlUmVmcyhmb3J3YXJkZWRSZWYsIGNoaWxkcmVuUmVmKSA6IGNoaWxkcmVuUmVmO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZHJlbiwgcHJvcHMyKTtcbiAgICB9XG4gICAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA+IDEgPyBSZWFjdC5DaGlsZHJlbi5vbmx5KG51bGwpIDogbnVsbDtcbiAgfSk7XG4gIFNsb3RDbG9uZS5kaXNwbGF5TmFtZSA9IGAke293bmVyTmFtZX0uU2xvdENsb25lYDtcbiAgcmV0dXJuIFNsb3RDbG9uZTtcbn1cbnZhciBTTE9UVEFCTEVfSURFTlRJRklFUiA9IFN5bWJvbChcInJhZGl4LnNsb3R0YWJsZVwiKTtcbi8vIEBfX05PX1NJREVfRUZGRUNUU19fXG5mdW5jdGlvbiBjcmVhdGVTbG90dGFibGUob3duZXJOYW1lKSB7XG4gIGNvbnN0IFNsb3R0YWJsZTIgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goRnJhZ21lbnQyLCB7IGNoaWxkcmVuIH0pO1xuICB9O1xuICBTbG90dGFibGUyLmRpc3BsYXlOYW1lID0gYCR7b3duZXJOYW1lfS5TbG90dGFibGVgO1xuICBTbG90dGFibGUyLl9fcmFkaXhJZCA9IFNMT1RUQUJMRV9JREVOVElGSUVSO1xuICByZXR1cm4gU2xvdHRhYmxlMjtcbn1cbnZhciBTbG90dGFibGUgPSAvKiBAX19QVVJFX18gKi8gY3JlYXRlU2xvdHRhYmxlKFwiU2xvdHRhYmxlXCIpO1xuZnVuY3Rpb24gaXNTbG90dGFibGUoY2hpbGQpIHtcbiAgcmV0dXJuIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSAmJiB0eXBlb2YgY2hpbGQudHlwZSA9PT0gXCJmdW5jdGlvblwiICYmIFwiX19yYWRpeElkXCIgaW4gY2hpbGQudHlwZSAmJiBjaGlsZC50eXBlLl9fcmFkaXhJZCA9PT0gU0xPVFRBQkxFX0lERU5USUZJRVI7XG59XG5mdW5jdGlvbiBtZXJnZVByb3BzKHNsb3RQcm9wcywgY2hpbGRQcm9wcykge1xuICBjb25zdCBvdmVycmlkZVByb3BzID0geyAuLi5jaGlsZFByb3BzIH07XG4gIGZvciAoY29uc3QgcHJvcE5hbWUgaW4gY2hpbGRQcm9wcykge1xuICAgIGNvbnN0IHNsb3RQcm9wVmFsdWUgPSBzbG90UHJvcHNbcHJvcE5hbWVdO1xuICAgIGNvbnN0IGNoaWxkUHJvcFZhbHVlID0gY2hpbGRQcm9wc1twcm9wTmFtZV07XG4gICAgY29uc3QgaXNIYW5kbGVyID0gL15vbltBLVpdLy50ZXN0KHByb3BOYW1lKTtcbiAgICBpZiAoaXNIYW5kbGVyKSB7XG4gICAgICBpZiAoc2xvdFByb3BWYWx1ZSAmJiBjaGlsZFByb3BWYWx1ZSkge1xuICAgICAgICBvdmVycmlkZVByb3BzW3Byb3BOYW1lXSA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gY2hpbGRQcm9wVmFsdWUoLi4uYXJncyk7XG4gICAgICAgICAgc2xvdFByb3BWYWx1ZSguLi5hcmdzKTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIGlmIChzbG90UHJvcFZhbHVlKSB7XG4gICAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gc2xvdFByb3BWYWx1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHByb3BOYW1lID09PSBcInN0eWxlXCIpIHtcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0geyAuLi5zbG90UHJvcFZhbHVlLCAuLi5jaGlsZFByb3BWYWx1ZSB9O1xuICAgIH0gZWxzZSBpZiAocHJvcE5hbWUgPT09IFwiY2xhc3NOYW1lXCIpIHtcbiAgICAgIG92ZXJyaWRlUHJvcHNbcHJvcE5hbWVdID0gW3Nsb3RQcm9wVmFsdWUsIGNoaWxkUHJvcFZhbHVlXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gICAgfVxuICB9XG4gIHJldHVybiB7IC4uLnNsb3RQcm9wcywgLi4ub3ZlcnJpZGVQcm9wcyB9O1xufVxuZnVuY3Rpb24gZ2V0RWxlbWVudFJlZihlbGVtZW50KSB7XG4gIGxldCBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQucHJvcHMsIFwicmVmXCIpPy5nZXQ7XG4gIGxldCBtYXlXYXJuID0gZ2V0dGVyICYmIFwiaXNSZWFjdFdhcm5pbmdcIiBpbiBnZXR0ZXIgJiYgZ2V0dGVyLmlzUmVhY3RXYXJuaW5nO1xuICBpZiAobWF5V2Fybikge1xuICAgIHJldHVybiBlbGVtZW50LnJlZjtcbiAgfVxuICBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGVsZW1lbnQsIFwicmVmXCIpPy5nZXQ7XG4gIG1heVdhcm4gPSBnZXR0ZXIgJiYgXCJpc1JlYWN0V2FybmluZ1wiIGluIGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmc7XG4gIGlmIChtYXlXYXJuKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQucHJvcHMucmVmO1xuICB9XG4gIHJldHVybiBlbGVtZW50LnByb3BzLnJlZiB8fCBlbGVtZW50LnJlZjtcbn1cbmV4cG9ydCB7XG4gIFNsb3QgYXMgUm9vdCxcbiAgU2xvdCxcbiAgU2xvdHRhYmxlLFxuICBjcmVhdGVTbG90LFxuICBjcmVhdGVTbG90dGFibGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-slot/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLayoutEffect: () => (/* binding */ useLayoutEffect2)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n// packages/react/use-layout-effect/src/use-layout-effect.tsx\n\nvar useLayoutEffect2 = globalThis?.document ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : () => {\n};\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtdXNlLWxheW91dC1lZmZlY3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUMrQjtBQUMvQiw4Q0FBOEMsa0RBQXFCO0FBQ25FO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LXVzZS1sYXlvdXQtZWZmZWN0L2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3JlYWN0L3VzZS1sYXlvdXQtZWZmZWN0L3NyYy91c2UtbGF5b3V0LWVmZmVjdC50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZUxheW91dEVmZmVjdDIgPSBnbG9iYWxUaGlzPy5kb2N1bWVudCA/IFJlYWN0LnVzZUxheW91dEVmZmVjdCA6ICgpID0+IHtcbn07XG5leHBvcnQge1xuICB1c2VMYXlvdXRFZmZlY3QyIGFzIHVzZUxheW91dEVmZmVjdFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@xstate/react/dist/xstate-react.development.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@xstate/react/dist/xstate-react.development.esm.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createActorContext: () => (/* binding */ createActorContext),\n/* harmony export */   shallowEqual: () => (/* binding */ shallowEqual),\n/* harmony export */   useActor: () => (/* binding */ useActor),\n/* harmony export */   useActorRef: () => (/* binding */ useActorRef),\n/* harmony export */   useMachine: () => (/* binding */ useMachine),\n/* harmony export */   useSelector: () => (/* binding */ useSelector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-isomorphic-layout-effect */ \"(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-59549771.development.esm.js\");\n/* harmony import */ var use_sync_external_store_shim_with_selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/with-selector */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\");\n/* harmony import */ var use_sync_external_store_shim__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-sync-external-store/shim */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n\n\n\n\n\n\n\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscribers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = actorRef.system.getSnapshot?.();\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(([ref, snapshot]) => {\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\n\nfunction useIdleActorRef(logic, ...[options]) {\n  let [[currentConfig, actorRef], setCurrent] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n    const actorRef = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.A)(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.A)(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  (0,use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine, ...[options, observerOrListener]) {\n  const actorRef = useIdleActorRef(machine, options);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    const sub = actorRef.subscribe((0,xstate__WEBPACK_IMPORTED_MODULE_4__.L)(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector, compare = defaultCompare) {\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => actor?.getSnapshot(), [actor]);\n  const selectedSnapshot = (0,use_sync_external_store_shim_with_selector__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStoreWithSelector)(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\n\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({\n    children,\n    logic: providedLogic = actorLogic,\n    machine,\n    options: providedOptions\n  }) {\n    if (machine) {\n      throw new Error(`The \"machine\" prop has been deprecated. Please use \"logic\" instead.`);\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = `ActorProvider`;\n  function useContext() {\n    const actor = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(`You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}> component.`);\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction useActor(logic, ...[options]) {\n  if (!!logic && 'send' in logic && typeof logic.send === 'function') {\n    throw new Error(`useActor() expects actor logic (e.g. a machine), but received an ActorRef. Use the useSelector(actorRef, ...) hook instead to read the ActorRef's snapshot.`);\n  }\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = (0,use_sync_external_store_shim__WEBPACK_IMPORTED_MODULE_3__.useSyncExternalStore)(subscribe, getSnapshot, getSnapshot);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\n\n/** @alias useActor */\nfunction useMachine(machine, ...[options]) {\n  return useActor(machine, options);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@xstate/react/dist/xstate-react.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/dequal/dist/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/dequal/dist/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dequal: () => (/* binding */ dequal)\n/* harmony export */ });\nvar has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nfunction dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kZXF1YWwvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL2RlcXVhbC9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZmluZChpdGVyLCB0YXIsIGtleSkge1xuXHRmb3IgKGtleSBvZiBpdGVyLmtleXMoKSkge1xuXHRcdGlmIChkZXF1YWwoa2V5LCB0YXIpKSByZXR1cm4ga2V5O1xuXHR9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZXF1YWwoZm9vLCBiYXIpIHtcblx0dmFyIGN0b3IsIGxlbiwgdG1wO1xuXHRpZiAoZm9vID09PSBiYXIpIHJldHVybiB0cnVlO1xuXG5cdGlmIChmb28gJiYgYmFyICYmIChjdG9yPWZvby5jb25zdHJ1Y3RvcikgPT09IGJhci5jb25zdHJ1Y3Rvcikge1xuXHRcdGlmIChjdG9yID09PSBEYXRlKSByZXR1cm4gZm9vLmdldFRpbWUoKSA9PT0gYmFyLmdldFRpbWUoKTtcblx0XHRpZiAoY3RvciA9PT0gUmVnRXhwKSByZXR1cm4gZm9vLnRvU3RyaW5nKCkgPT09IGJhci50b1N0cmluZygpO1xuXG5cdFx0aWYgKGN0b3IgPT09IEFycmF5KSB7XG5cdFx0XHRpZiAoKGxlbj1mb28ubGVuZ3RoKSA9PT0gYmFyLmxlbmd0aCkge1xuXHRcdFx0XHR3aGlsZSAobGVuLS0gJiYgZGVxdWFsKGZvb1tsZW5dLCBiYXJbbGVuXSkpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGxlbiA9PT0gLTE7XG5cdFx0fVxuXG5cdFx0aWYgKGN0b3IgPT09IFNldCkge1xuXHRcdFx0aWYgKGZvby5zaXplICE9PSBiYXIuc2l6ZSkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKGxlbiBvZiBmb28pIHtcblx0XHRcdFx0dG1wID0gbGVuO1xuXHRcdFx0XHRpZiAodG1wICYmIHR5cGVvZiB0bXAgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdFx0dG1wID0gZmluZChiYXIsIHRtcCk7XG5cdFx0XHRcdFx0aWYgKCF0bXApIHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIWJhci5oYXModG1wKSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKGN0b3IgPT09IE1hcCkge1xuXHRcdFx0aWYgKGZvby5zaXplICE9PSBiYXIuc2l6ZSkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKGxlbiBvZiBmb28pIHtcblx0XHRcdFx0dG1wID0gbGVuWzBdO1xuXHRcdFx0XHRpZiAodG1wICYmIHR5cGVvZiB0bXAgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdFx0dG1wID0gZmluZChiYXIsIHRtcCk7XG5cdFx0XHRcdFx0aWYgKCF0bXApIHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIWRlcXVhbChsZW5bMV0sIGJhci5nZXQodG1wKSkpIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdGlmIChjdG9yID09PSBBcnJheUJ1ZmZlcikge1xuXHRcdFx0Zm9vID0gbmV3IFVpbnQ4QXJyYXkoZm9vKTtcblx0XHRcdGJhciA9IG5ldyBVaW50OEFycmF5KGJhcik7XG5cdFx0fSBlbHNlIGlmIChjdG9yID09PSBEYXRhVmlldykge1xuXHRcdFx0aWYgKChsZW49Zm9vLmJ5dGVMZW5ndGgpID09PSBiYXIuYnl0ZUxlbmd0aCkge1xuXHRcdFx0XHR3aGlsZSAobGVuLS0gJiYgZm9vLmdldEludDgobGVuKSA9PT0gYmFyLmdldEludDgobGVuKSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbGVuID09PSAtMTtcblx0XHR9XG5cblx0XHRpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KGZvbykpIHtcblx0XHRcdGlmICgobGVuPWZvby5ieXRlTGVuZ3RoKSA9PT0gYmFyLmJ5dGVMZW5ndGgpIHtcblx0XHRcdFx0d2hpbGUgKGxlbi0tICYmIGZvb1tsZW5dID09PSBiYXJbbGVuXSk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbGVuID09PSAtMTtcblx0XHR9XG5cblx0XHRpZiAoIWN0b3IgfHwgdHlwZW9mIGZvbyA9PT0gJ29iamVjdCcpIHtcblx0XHRcdGxlbiA9IDA7XG5cdFx0XHRmb3IgKGN0b3IgaW4gZm9vKSB7XG5cdFx0XHRcdGlmIChoYXMuY2FsbChmb28sIGN0b3IpICYmICsrbGVuICYmICFoYXMuY2FsbChiYXIsIGN0b3IpKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlmICghKGN0b3IgaW4gYmFyKSB8fCAhZGVxdWFsKGZvb1tjdG9yXSwgYmFyW2N0b3JdKSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIE9iamVjdC5rZXlzKGJhcikubGVuZ3RoID09PSBsZW47XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGZvbyAhPT0gZm9vICYmIGJhciAhPT0gYmFyO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/dequal/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/dequal/lite/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/dequal/lite/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dequal: () => (/* binding */ dequal)\n/* harmony export */ });\nvar has = Object.prototype.hasOwnProperty;\n\nfunction dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kZXF1YWwvbGl0ZS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9kZXF1YWwvbGl0ZS9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmV4cG9ydCBmdW5jdGlvbiBkZXF1YWwoZm9vLCBiYXIpIHtcblx0dmFyIGN0b3IsIGxlbjtcblx0aWYgKGZvbyA9PT0gYmFyKSByZXR1cm4gdHJ1ZTtcblxuXHRpZiAoZm9vICYmIGJhciAmJiAoY3Rvcj1mb28uY29uc3RydWN0b3IpID09PSBiYXIuY29uc3RydWN0b3IpIHtcblx0XHRpZiAoY3RvciA9PT0gRGF0ZSkgcmV0dXJuIGZvby5nZXRUaW1lKCkgPT09IGJhci5nZXRUaW1lKCk7XG5cdFx0aWYgKGN0b3IgPT09IFJlZ0V4cCkgcmV0dXJuIGZvby50b1N0cmluZygpID09PSBiYXIudG9TdHJpbmcoKTtcblxuXHRcdGlmIChjdG9yID09PSBBcnJheSkge1xuXHRcdFx0aWYgKChsZW49Zm9vLmxlbmd0aCkgPT09IGJhci5sZW5ndGgpIHtcblx0XHRcdFx0d2hpbGUgKGxlbi0tICYmIGRlcXVhbChmb29bbGVuXSwgYmFyW2xlbl0pKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBsZW4gPT09IC0xO1xuXHRcdH1cblxuXHRcdGlmICghY3RvciB8fCB0eXBlb2YgZm9vID09PSAnb2JqZWN0Jykge1xuXHRcdFx0bGVuID0gMDtcblx0XHRcdGZvciAoY3RvciBpbiBmb28pIHtcblx0XHRcdFx0aWYgKGhhcy5jYWxsKGZvbywgY3RvcikgJiYgKytsZW4gJiYgIWhhcy5jYWxsKGJhciwgY3RvcikpIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWYgKCEoY3RvciBpbiBiYXIpIHx8ICFkZXF1YWwoZm9vW2N0b3JdLCBiYXJbY3Rvcl0pKSByZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gT2JqZWN0LmtleXMoYmFyKS5sZW5ndGggPT09IGxlbjtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZm9vICE9PSBmb28gJiYgYmFyICE9PSBiYXI7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/dequal/lite/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/compat/router.js":
/*!********************************************!*\
  !*** ./node_modules/next/compat/router.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ../dist/client/compat/router */ \"(app-pages-browser)/./node_modules/next/dist/client/compat/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2NvbXBhdC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0pBQXdEIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9uZXh0L2NvbXBhdC9yb3V0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9kaXN0L2NsaWVudC9jb21wYXQvcm91dGVyJylcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/compat/router.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb24nO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1uYXZpZ2F0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fempty%2FCode%2FVYS%2Fvys-app%2Fsrc%2Fapp%2Fsign-up%2F%5B%5B...sign-up%5D%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fempty%2FCode%2FVYS%2Fvys-app%2Fsrc%2Fapp%2Fsign-up%2F%5B%5B...sign-up%5D%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/sign-up/[[...sign-up]]/page.tsx */ \"(app-pages-browser)/./src/app/sign-up/[[...sign-up]]/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmVtcHR5JTJGQ29kZSUyRlZZUyUyRnZ5cy1hcHAlMkZzcmMlMkZhcHAlMkZzaWduLXVwJTJGJTVCJTVCLi4uc2lnbi11cCU1RCU1RCUyRnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsNE1BQXlHIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL3NyYy9hcHAvc2lnbi11cC9bWy4uLnNpZ24tdXBdXS9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fempty%2FCode%2FVYS%2Fvys-app%2Fsrc%2Fapp%2Fsign-up%2F%5B%5B...sign-up%5D%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/app-dir/link.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    /**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */ default: function() {\n        return LinkComponent;\n    },\n    useLinkStatus: function() {\n        return useLinkStatus;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _formaturl = __webpack_require__(/*! ../../shared/lib/router/utils/format-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nconst _approutercontextsharedruntime = __webpack_require__(/*! ../../shared/lib/app-router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js\");\nconst _routerreducertypes = __webpack_require__(/*! ../components/router-reducer/router-reducer-types */ \"(app-pages-browser)/./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js\");\nconst _usemergedref = __webpack_require__(/*! ../use-merged-ref */ \"(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js\");\nconst _utils = __webpack_require__(/*! ../../shared/lib/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _addbasepath = __webpack_require__(/*! ../add-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/add-base-path.js\");\nconst _warnonce = __webpack_require__(/*! ../../shared/lib/utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _links = __webpack_require__(/*! ../components/links */ \"(app-pages-browser)/./node_modules/next/dist/client/components/links.js\");\nconst _islocalurl = __webpack_require__(/*! ../../shared/lib/router/utils/is-local-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nconst _approuterinstance = __webpack_require__(/*! ../components/app-router-instance */ \"(app-pages-browser)/./node_modules/next/dist/client/components/app-router-instance.js\");\nconst _erroronce = __webpack_require__(/*! ../../shared/lib/utils/error-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js\");\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute('target');\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n    if (isAnchorNodeName && isModifiedEvent(e) || e.currentTarget.hasAttribute('download')) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    if (!(0, _islocalurl.isLocalURL)(href)) {\n        if (replace) {\n            // browser default behavior does not replace the history state\n            // so we need to do it manually\n            e.preventDefault();\n            location.replace(href);\n        }\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        if (onNavigate) {\n            let isDefaultPrevented = false;\n            onNavigate({\n                preventDefault: ()=>{\n                    isDefaultPrevented = true;\n                }\n            });\n            if (isDefaultPrevented) {\n                return;\n            }\n        }\n        (0, _approuterinstance.dispatchNavigateAction)(as || href, replace ? 'replace' : 'push', scroll != null ? scroll : true, linkInstanceRef.current);\n    };\n    _react.default.startTransition(navigate);\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === 'string') {\n        return urlObjOrString;\n    }\n    return (0, _formaturl.formatUrl)(urlObjOrString);\n}\nfunction LinkComponent(props) {\n    _s();\n    const [linkStatus, setOptimisticLinkStatus] = (0, _react.useOptimistic)(_links.IDLE_LINK_STATUS);\n    let children;\n    const linkInstanceRef = (0, _react.useRef)(null);\n    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, onClick, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, onNavigate, ref: forwardedRef, unstable_dynamicOnHover, ...restProps } = props;\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {\n        children = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            children: children\n        });\n    }\n    const router = _react.default.useContext(_approutercontextsharedruntime.AppRouterContext);\n    const prefetchEnabled = prefetchProp !== false;\n    /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   * - 'unstable_dynamicOnHover': this starts in \"auto\" mode, but switches to \"full\" when the link is hovered\n   */ const appPrefetchKind = prefetchProp === null ? _routerreducertypes.PrefetchKind.AUTO : _routerreducertypes.PrefetchKind.FULL;\n    if (true) {\n        function createPropError(args) {\n            return Object.defineProperty(new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0)), \"__NEXT_ERROR_CODE\", {\n                value: \"E319\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === 'href') {\n                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: props[key] === null ? 'null' : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            unstable_dynamicOnHover: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true,\n            onNavigate: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === 'as') {\n                if (props[key] && valType !== 'string' && valType !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart' || key === 'onNavigate') {\n                if (props[key] && valType !== 'function') {\n                    throw createPropError({\n                        key,\n                        expected: '`function`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch' || key === 'legacyBehavior' || key === 'unstable_dynamicOnHover') {\n                if (props[key] != null && valType !== 'boolean') {\n                    throw createPropError({\n                        key,\n                        expected: '`boolean`',\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n    }\n    if (true) {\n        if (props.locale) {\n            (0, _warnonce.warnOnce)('The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization');\n        }\n        if (!asProp) {\n            let href;\n            if (typeof hrefProp === 'string') {\n                href = hrefProp;\n            } else if (typeof hrefProp === 'object' && typeof hrefProp.pathname === 'string') {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split('/').some((segment)=>segment.startsWith('[') && segment.endsWith(']'));\n                if (hasDynamicSegment) {\n                    throw Object.defineProperty(new Error(\"Dynamic href `\" + href + \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\"), \"__NEXT_ERROR_CODE\", {\n                        value: \"E267\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            }\n        }\n    }\n    const { href, as } = _react.default.useMemo({\n        \"LinkComponent.useMemo\": ()=>{\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n    }[\"LinkComponent.useMemo\"], [\n        hrefProp,\n        asProp\n    ]);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw Object.defineProperty(new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\"), \"__NEXT_ERROR_CODE\", {\n                        value: \"E320\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                throw Object.defineProperty(new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0)), \"__NEXT_ERROR_CODE\", {\n                    value: \"E266\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        } else {}\n    } else {\n        if (true) {\n            if ((children == null ? void 0 : children.type) === 'a') {\n                throw Object.defineProperty(new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E209\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;\n    // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n    // mount. In the future we will also use this to keep track of all the\n    // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n    // a revalidation or refresh.\n    const observeLinkVisibilityOnMount = _react.default.useCallback({\n        \"LinkComponent.useCallback[observeLinkVisibilityOnMount]\": (element)=>{\n            if (router !== null) {\n                linkInstanceRef.current = (0, _links.mountLinkInstance)(element, href, router, appPrefetchKind, prefetchEnabled, setOptimisticLinkStatus);\n            }\n            return ({\n                \"LinkComponent.useCallback[observeLinkVisibilityOnMount]\": ()=>{\n                    if (linkInstanceRef.current) {\n                        (0, _links.unmountLinkForCurrentNavigation)(linkInstanceRef.current);\n                        linkInstanceRef.current = null;\n                    }\n                    (0, _links.unmountPrefetchableInstance)(element);\n                }\n            })[\"LinkComponent.useCallback[observeLinkVisibilityOnMount]\"];\n        }\n    }[\"LinkComponent.useCallback[observeLinkVisibilityOnMount]\"], [\n        prefetchEnabled,\n        href,\n        router,\n        appPrefetchKind,\n        setOptimisticLinkStatus\n    ]);\n    const mergedRef = (0, _usemergedref.useMergedRef)(observeLinkVisibilityOnMount, childRef);\n    const childProps = {\n        ref: mergedRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw Object.defineProperty(new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E312\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            }\n            if (!legacyBehavior && typeof onClick === 'function') {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled || \"development\" === 'development') {\n                return;\n            }\n            const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true;\n            (0, _links.onNavigationIntent)(e.currentTarget, upgradeToDynamicPrefetch);\n        },\n        onTouchStart:  false ? 0 : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled) {\n                return;\n            }\n            const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true;\n            (0, _links.onNavigationIntent)(e.currentTarget, upgradeToDynamicPrefetch);\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the basePath.\n    if ((0, _utils.isAbsoluteUrl)(as)) {\n        childProps.href = as;\n    } else if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {\n        childProps.href = (0, _addbasepath.addBasePath)(as);\n    }\n    let link;\n    if (legacyBehavior) {\n        if (true) {\n            (0, _erroronce.errorOnce)('`legacyBehavior` is deprecated and will be removed in a future ' + 'release. A codemod is available to upgrade your components:\\n\\n' + 'npx @next/codemod@latest new-link .\\n\\n' + 'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components');\n        }\n        link = /*#__PURE__*/ _react.default.cloneElement(child, childProps);\n    } else {\n        link = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            ...restProps,\n            ...childProps,\n            children: children\n        });\n    }\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(LinkStatusContext.Provider, {\n        value: linkStatus,\n        children: link\n    });\n}\n_s(LinkComponent, \"MNV6IdWv8Lu3MKc7Fm4v59uGRY0=\");\n_c = LinkComponent;\nconst LinkStatusContext = /*#__PURE__*/ (0, _react.createContext)(_links.IDLE_LINK_STATUS);\nconst useLinkStatus = ()=>{\n    return (0, _react.useContext)(LinkStatusContext);\n};\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\nvar _c;\n$RefreshReg$(_c, \"LinkComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2FwcC1kaXIvbGluay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztJQW1UQTs7Ozs7Ozs7O0NBU0MsR0FDRCxPQXlaQztlQXpadUJBOztJQStaWEMsYUFBYTtlQUFiQTs7Ozs7NkVBMXRCMkQ7dUNBRTlDOzJEQUNPO2dEQUNKOzBDQUNBO21DQUNDO3lDQUNGO3NDQUNIO21DQVNsQjt3Q0FDb0I7K0NBQ1k7dUNBQ2I7QUEwTTFCLFNBQVNDLGdCQUFnQkMsS0FBdUI7SUFDOUMsTUFBTUMsY0FBY0QsTUFBTUUsYUFBYTtJQUN2QyxNQUFNQyxTQUFTRixZQUFZRyxZQUFZLENBQUM7SUFDeEMsT0FDR0QsVUFBVUEsV0FBVyxXQUN0QkgsTUFBTUssT0FBTyxJQUNiTCxNQUFNTSxPQUFPLElBQ2JOLE1BQU1PLFFBQVEsSUFDZFAsTUFBTVEsTUFBTSxJQUFJLDZCQUE2QjtJQUM1Q1IsTUFBTVMsV0FBVyxJQUFJVCxNQUFNUyxXQUFXLENBQUNDLEtBQUssS0FBSztBQUV0RDtBQUVBLFNBQVNDLFlBQ1BDLENBQW1CLEVBQ25CQyxJQUFZLEVBQ1pDLEVBQVUsRUFDVkMsZUFBcUQsRUFDckRDLE9BQWlCLEVBQ2pCQyxNQUFnQixFQUNoQkMsVUFBbUM7SUFFbkMsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR1AsRUFBRVYsYUFBYTtJQUVwQyxrREFBa0Q7SUFDbEQsTUFBTWtCLG1CQUFtQkQsU0FBU0UsV0FBVyxPQUFPO0lBRXBELElBQ0dELG9CQUFvQnJCLGdCQUFnQmEsTUFDckNBLEVBQUVWLGFBQWEsQ0FBQ29CLFlBQVksQ0FBQyxhQUM3QjtRQUNBLDhDQUE4QztRQUM5QztJQUNGO0lBRUEsSUFBSSxDQUFDQyxDQUFBQSxHQUFBQSxZQUFBQSxVQUFBQSxFQUFXVixPQUFPO1FBQ3JCLElBQUlHLFNBQVM7WUFDWCw4REFBOEQ7WUFDOUQsK0JBQStCO1lBQy9CSixFQUFFWSxjQUFjO1lBQ2hCQyxTQUFTVCxPQUFPLENBQUNIO1FBQ25CO1FBRUEsOENBQThDO1FBQzlDO0lBQ0Y7SUFFQUQsRUFBRVksY0FBYztJQUVoQixNQUFNRSxXQUFXO1FBQ2YsSUFBSVIsWUFBWTtZQUNkLElBQUlTLHFCQUFxQjtZQUV6QlQsV0FBVztnQkFDVE0sZ0JBQWdCO29CQUNkRyxxQkFBcUI7Z0JBQ3ZCO1lBQ0Y7WUFFQSxJQUFJQSxvQkFBb0I7Z0JBQ3RCO1lBQ0Y7UUFDRjtRQUVBQyxDQUFBQSxHQUFBQSxtQkFBQUEsc0JBQUFBLEVBQ0VkLE1BQU1ELE1BQ05HLFVBQVUsWUFBWSxRQUN0QkMsVUFBQUEsT0FBQUEsU0FBVSxNQUNWRixnQkFBZ0JjLE9BQU87SUFFM0I7SUFFQUMsT0FBQUEsT0FBSyxDQUFDQyxlQUFlLENBQUNMO0FBQ3hCO0FBRUEsU0FBU00sa0JBQWtCQyxjQUFrQztJQUMzRCxJQUFJLE9BQU9BLG1CQUFtQixVQUFVO1FBQ3RDLE9BQU9BO0lBQ1Q7SUFFQSxPQUFPQyxDQUFBQSxHQUFBQSxXQUFBQSxTQUFBQSxFQUFVRDtBQUNuQjtBQVllLHVCQUNiRSxLQUdDOztJQUVELE1BQU0sQ0FBQ0MsWUFBWUMsd0JBQXdCLEdBQUdDLENBQUFBLEdBQUFBLE9BQUFBLGFBQUFBLEVBQWNDLE9BQUFBLGdCQUFnQjtJQUU1RSxJQUFJQztJQUVKLE1BQU16QixrQkFBa0IwQixDQUFBQSxHQUFBQSxPQUFBQSxNQUFBQSxFQUE0QjtJQUVwRCxNQUFNLEVBQ0o1QixNQUFNNkIsUUFBUSxFQUNkNUIsSUFBSTZCLE1BQU0sRUFDVkgsVUFBVUksWUFBWSxFQUN0QkMsVUFBVUMsZUFBZSxJQUFJLEVBQzdCQyxRQUFRLEVBQ1IvQixPQUFPLEVBQ1BnQyxPQUFPLEVBQ1AvQixNQUFNLEVBQ05nQyxPQUFPLEVBQ1BDLGNBQWNDLGdCQUFnQixFQUM5QkMsY0FBY0MsZ0JBQWdCLEVBQzlCQyxpQkFBaUIsS0FBSyxFQUN0QnBDLFVBQVUsRUFDVnFDLEtBQUtDLFlBQVksRUFDakJDLHVCQUF1QixFQUN2QixHQUFHQyxXQUNKLEdBQUd2QjtJQUVKSyxXQUFXSTtJQUVYLElBQ0VVLGtCQUNDLFFBQU9kLGFBQWEsWUFBWSxPQUFPQSxhQUFhLFNBQU8sRUFDNUQ7UUFDQUEsV0FBQUEsV0FBQUEsR0FBVyxxQkFBQ21CLEtBQUFBO3NCQUFHbkI7O0lBQ2pCO0lBRUEsTUFBTW9CLFNBQVM5QixPQUFBQSxPQUFLLENBQUMrQixVQUFVLENBQUNDLCtCQUFBQSxnQkFBZ0I7SUFFaEQsTUFBTUMsa0JBQWtCakIsaUJBQWlCO0lBQ3pDOzs7Ozs7R0FNQyxHQUNELE1BQU1rQixrQkFDSmxCLGlCQUFpQixPQUFPbUIsb0JBQUFBLFlBQVksQ0FBQ0MsSUFBSSxHQUFHRCxvQkFBQUEsWUFBWSxDQUFDRSxJQUFJO0lBRS9ELElBQUlDLElBQW9CLEVBQW1CO1FBQ3pDLFNBQVNHLGdCQUFnQkMsSUFJeEI7WUFDQyxPQUFPLHFCQUtOLENBTE0sSUFBSUMsTUFDUixpQ0FBK0JELEtBQUtFLEdBQUcsR0FBQyxpQkFBZUYsS0FBS0csUUFBUSxHQUFDLDRCQUE0QkgsS0FBS0ksTUFBTSxHQUFDLGVBQzNHLE1BQTZCLEdBQzFCLHFFQUNBLEVBQUMsR0FKRjt1QkFBQTs0QkFBQTs4QkFBQTtZQUtQO1FBQ0Y7UUFFQSxzQ0FBc0M7UUFDdEMsTUFBTUUscUJBQXNEO1lBQzFEakUsTUFBTTtRQUNSO1FBQ0EsTUFBTWtFLGdCQUFxQ0MsT0FBT0MsSUFBSSxDQUNwREg7UUFFRkMsY0FBY0csT0FBTyxDQUFDLENBQUNSO1lBQ3JCLElBQUlBLFFBQVEsUUFBUTtnQkFDbEIsSUFDRXZDLEtBQUssQ0FBQ3VDLElBQUksSUFBSSxRQUNiLE9BQU92QyxLQUFLLENBQUN1QyxJQUFJLEtBQUssWUFBWSxPQUFPdkMsS0FBSyxDQUFDdUMsSUFBSSxLQUFLLFVBQ3pEO29CQUNBLE1BQU1ILGdCQUFnQjt3QkFDcEJHO3dCQUNBQyxVQUFVO3dCQUNWQyxRQUFRekMsS0FBSyxDQUFDdUMsSUFBSSxLQUFLLE9BQU8sU0FBUyxPQUFPdkMsS0FBSyxDQUFDdUMsSUFBSTtvQkFDMUQ7Z0JBQ0Y7WUFDRixPQUFPO2dCQUNMLHNDQUFzQztnQkFDdEMsNkRBQTZEO2dCQUM3RCxNQUFNUyxJQUFXVDtZQUNuQjtRQUNGO1FBRUEsc0NBQXNDO1FBQ3RDLE1BQU1VLHFCQUFzRDtZQUMxRHRFLElBQUk7WUFDSkUsU0FBUztZQUNUQyxRQUFRO1lBQ1IrQixTQUFTO1lBQ1RELFVBQVU7WUFDVkYsVUFBVTtZQUNWWSx5QkFBeUI7WUFDekJSLFNBQVM7WUFDVEMsY0FBYztZQUNkRSxjQUFjO1lBQ2RFLGdCQUFnQjtZQUNoQnBDLFlBQVk7UUFDZDtRQUNBLE1BQU1tRSxnQkFBcUNMLE9BQU9DLElBQUksQ0FDcERHO1FBRUZDLGNBQWNILE9BQU8sQ0FBQyxDQUFDUjtZQUNyQixNQUFNWSxVQUFVLE9BQU9uRCxLQUFLLENBQUN1QyxJQUFJO1lBRWpDLElBQUlBLFFBQVEsTUFBTTtnQkFDaEIsSUFBSXZDLEtBQUssQ0FBQ3VDLElBQUksSUFBSVksWUFBWSxZQUFZQSxZQUFZLFVBQVU7b0JBQzlELE1BQU1mLGdCQUFnQjt3QkFDcEJHO3dCQUNBQyxVQUFVO3dCQUNWQyxRQUFRVTtvQkFDVjtnQkFDRjtZQUNGLE9BQU8sSUFDTFosUUFBUSxhQUNSQSxRQUFRLGtCQUNSQSxRQUFRLGtCQUNSQSxRQUFRLGNBQ1I7Z0JBQ0EsSUFBSXZDLEtBQUssQ0FBQ3VDLElBQUksSUFBSVksWUFBWSxZQUFZO29CQUN4QyxNQUFNZixnQkFBZ0I7d0JBQ3BCRzt3QkFDQUMsVUFBVTt3QkFDVkMsUUFBUVU7b0JBQ1Y7Z0JBQ0Y7WUFDRixPQUFPLElBQ0xaLFFBQVEsYUFDUkEsUUFBUSxZQUNSQSxRQUFRLGFBQ1JBLFFBQVEsY0FDUkEsUUFBUSxjQUNSQSxRQUFRLG9CQUNSQSxRQUFRLDJCQUNSO2dCQUNBLElBQUl2QyxLQUFLLENBQUN1QyxJQUFJLElBQUksUUFBUVksWUFBWSxXQUFXO29CQUMvQyxNQUFNZixnQkFBZ0I7d0JBQ3BCRzt3QkFDQUMsVUFBVTt3QkFDVkMsUUFBUVU7b0JBQ1Y7Z0JBQ0Y7WUFDRixPQUFPO2dCQUNMLHNDQUFzQztnQkFDdEMsNkRBQTZEO2dCQUM3RCxNQUFNSCxJQUFXVDtZQUNuQjtRQUNGO0lBQ0Y7SUFFQSxJQUFJTixJQUFvQixFQUFtQjtRQUN6QyxJQUFJakMsTUFBTW9ELE1BQU0sRUFBRTtZQUNoQkMsQ0FBQUEsR0FBQUEsVUFBQUEsUUFBQUEsRUFDRTtRQUVKO1FBQ0EsSUFBSSxDQUFDN0MsUUFBUTtZQUNYLElBQUk5QjtZQUNKLElBQUksT0FBTzZCLGFBQWEsVUFBVTtnQkFDaEM3QixPQUFPNkI7WUFDVCxPQUFPLElBQ0wsT0FBT0EsYUFBYSxZQUNwQixPQUFPQSxTQUFTK0MsUUFBUSxLQUFLLFVBQzdCO2dCQUNBNUUsT0FBTzZCLFNBQVMrQyxRQUFRO1lBQzFCO1lBRUEsSUFBSTVFLE1BQU07Z0JBQ1IsTUFBTTZFLG9CQUFvQjdFLEtBQ3ZCOEUsS0FBSyxDQUFDLEtBQ05DLElBQUksQ0FBQyxDQUFDQyxVQUFZQSxRQUFRQyxVQUFVLENBQUMsUUFBUUQsUUFBUUUsUUFBUSxDQUFDO2dCQUVqRSxJQUFJTCxtQkFBbUI7b0JBQ3JCLE1BQU0scUJBRUwsQ0FGSyxJQUFJakIsTUFDUCxtQkFBaUI1RCxPQUFLLDZJQURuQjsrQkFBQTtvQ0FBQTtzQ0FBQTtvQkFFTjtnQkFDRjtZQUNGO1FBQ0Y7SUFDRjtJQUVBLE1BQU0sRUFBRUEsSUFBSSxFQUFFQyxFQUFFLEVBQUUsR0FBR2dCLE9BQUFBLE9BQUssQ0FBQ2tFLE9BQU87aUNBQUM7WUFDakMsTUFBTUMsZUFBZWpFLGtCQUFrQlU7WUFDdkMsT0FBTztnQkFDTDdCLE1BQU1vRjtnQkFDTm5GLElBQUk2QixTQUFTWCxrQkFBa0JXLFVBQVVzRDtZQUMzQztRQUNGO2dDQUFHO1FBQUN2RDtRQUFVQztLQUFPO0lBRXJCLG9GQUFvRjtJQUNwRixJQUFJdUQ7SUFDSixJQUFJNUMsZ0JBQWdCO1FBQ2xCLElBQUljLElBQW9CLEVBQW9CO1lBQzFDLElBQUluQixTQUFTO2dCQUNYa0QsUUFBUUMsSUFBSSxDQUNULG9EQUFvRDFELFdBQVM7WUFFbEU7WUFDQSxJQUFJUyxrQkFBa0I7Z0JBQ3BCZ0QsUUFBUUMsSUFBSSxDQUNULHlEQUF5RDFELFdBQVM7WUFFdkU7WUFDQSxJQUFJO2dCQUNGd0QsUUFBUXBFLE9BQUFBLE9BQUssQ0FBQ3VFLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDOUQ7WUFDOUIsRUFBRSxPQUFPK0QsS0FBSztnQkFDWixJQUFJLENBQUMvRCxVQUFVO29CQUNiLE1BQU0scUJBRUwsQ0FGSyxJQUFJaUMsTUFDUCx1REFBdUQvQixXQUFTLGtGQUQ3RDsrQkFBQTtvQ0FBQTtzQ0FBQTtvQkFFTjtnQkFDRjtnQkFDQSxNQUFNLHFCQUtMLENBTEssSUFBSStCLE1BQ1AsNkRBQTZEL0IsV0FBUyw4RkFDcEUsTUFBNkIsR0FDMUIsc0VBQ0EsRUFBQyxHQUpIOzJCQUFBO2dDQUFBO2tDQUFBO2dCQUtOO1lBQ0Y7UUFDRixPQUFPLEVBRU47SUFDSCxPQUFPO1FBQ0wsSUFBSTBCLElBQW9CLEVBQW9CO1lBQzFDLElBQUksQ0FBQzVCLFlBQUFBLE9BQUFBLEtBQUFBLElBQUFBLFNBQWtCZ0UsSUFBQUEsTUFBUyxLQUFLO2dCQUNuQyxNQUFNLHFCQUVMLENBRkssSUFBSS9CLE1BQ1Isb0tBREk7MkJBQUE7Z0NBQUE7a0NBQUE7Z0JBRU47WUFDRjtRQUNGO0lBQ0Y7SUFFQSxNQUFNZ0MsV0FBZ0JuRCxpQkFDbEI0QyxTQUFTLE9BQU9BLFVBQVUsWUFBWUEsTUFBTTNDLEdBQUcsR0FDL0NDO0lBRUosNEVBQTRFO0lBQzVFLHNFQUFzRTtJQUN0RSw0RUFBNEU7SUFDNUUsNkJBQTZCO0lBQzdCLE1BQU1rRCwrQkFBK0I1RSxPQUFBQSxPQUFLLENBQUM2RSxXQUFXO21FQUNwRCxDQUFDQztZQUNDLElBQUloRCxXQUFXLE1BQU07Z0JBQ25CN0MsZ0JBQWdCYyxPQUFPLEdBQUdnRixDQUFBQSxHQUFBQSxPQUFBQSxpQkFBQUEsRUFDeEJELFNBQ0EvRixNQUNBK0MsUUFDQUksaUJBQ0FELGlCQUNBMUI7WUFFSjtZQUVBOzJFQUFPO29CQUNMLElBQUl0QixnQkFBZ0JjLE9BQU8sRUFBRTt3QkFDM0JpRixDQUFBQSxHQUFBQSxPQUFBQSwrQkFBK0IsRUFBQy9GLGdCQUFnQmMsT0FBTzt3QkFDdkRkLGdCQUFnQmMsT0FBTyxHQUFHO29CQUM1QjtvQkFDQWtGLENBQUFBLEdBQUFBLE9BQUFBLDJCQUFBQSxFQUE0Qkg7Z0JBQzlCOztRQUNGO2tFQUNBO1FBQUM3QztRQUFpQmxEO1FBQU0rQztRQUFRSTtRQUFpQjNCO0tBQXdCO0lBRzNFLE1BQU0yRSxZQUFZQyxDQUFBQSxHQUFBQSxjQUFBQSxZQUFBQSxFQUFhUCw4QkFBOEJEO0lBRTdELE1BQU1TLGFBTUY7UUFDRjNELEtBQUt5RDtRQUNML0QsU0FBUXJDLENBQUM7WUFDUCxJQUFJd0QsSUFBb0IsRUFBbUI7Z0JBQ3pDLElBQUksQ0FBQ3hELEdBQUc7b0JBQ04sTUFBTSxxQkFFTCxDQUZLLElBQUk2RCxNQUNQLG1GQURHOytCQUFBO29DQUFBO3NDQUFBO29CQUVOO2dCQUNGO1lBQ0Y7WUFFQSxJQUFJLENBQUNuQixrQkFBa0IsT0FBT0wsWUFBWSxZQUFZO2dCQUNwREEsUUFBUXJDO1lBQ1Y7WUFFQSxJQUNFMEMsa0JBQ0E0QyxNQUFNL0QsS0FBSyxJQUNYLE9BQU8rRCxNQUFNL0QsS0FBSyxDQUFDYyxPQUFPLEtBQUssWUFDL0I7Z0JBQ0FpRCxNQUFNL0QsS0FBSyxDQUFDYyxPQUFPLENBQUNyQztZQUN0QjtZQUVBLElBQUksQ0FBQ2dELFFBQVE7Z0JBQ1g7WUFDRjtZQUVBLElBQUloRCxFQUFFdUcsZ0JBQWdCLEVBQUU7Z0JBQ3RCO1lBQ0Y7WUFFQXhHLFlBQVlDLEdBQUdDLE1BQU1DLElBQUlDLGlCQUFpQkMsU0FBU0MsUUFBUUM7UUFDN0Q7UUFDQWdDLGNBQWF0QyxDQUFDO1lBQ1osSUFBSSxDQUFDMEMsa0JBQWtCLE9BQU9ILHFCQUFxQixZQUFZO2dCQUM3REEsaUJBQWlCdkM7WUFDbkI7WUFFQSxJQUNFMEMsa0JBQ0E0QyxNQUFNL0QsS0FBSyxJQUNYLE9BQU8rRCxNQUFNL0QsS0FBSyxDQUFDZSxZQUFZLEtBQUssWUFDcEM7Z0JBQ0FnRCxNQUFNL0QsS0FBSyxDQUFDZSxZQUFZLENBQUN0QztZQUMzQjtZQUVBLElBQUksQ0FBQ2dELFFBQVE7Z0JBQ1g7WUFDRjtZQUVBLElBQUksQ0FBQ0csbUJBQW1CSyxRQUFRQyxHQUFHLENBQUNDLE1BQWEsRUFBTCxhQUFvQjtnQkFDOUQ7WUFDRjtZQUVBLE1BQU04QywyQkFBMkIzRCw0QkFBNEI7WUFDN0Q0RCxDQUFBQSxHQUFBQSxPQUFBQSxrQkFBQUEsRUFDRXpHLEVBQUVWLGFBQWEsRUFDZmtIO1FBRUo7UUFDQWhFLGNBQWNnQixNQUFzQyxHQUNoRG1ELENBQVNBLEdBQ1QsU0FBU25FLGFBQWF4QyxDQUFDO1lBQ3JCLElBQUksQ0FBQzBDLGtCQUFrQixPQUFPRCxxQkFBcUIsWUFBWTtnQkFDN0RBLGlCQUFpQnpDO1lBQ25CO1lBRUEsSUFDRTBDLGtCQUNBNEMsTUFBTS9ELEtBQUssSUFDWCxPQUFPK0QsTUFBTS9ELEtBQUssQ0FBQ2lCLFlBQVksS0FBSyxZQUNwQztnQkFDQThDLE1BQU0vRCxLQUFLLENBQUNpQixZQUFZLENBQUN4QztZQUMzQjtZQUVBLElBQUksQ0FBQ2dELFFBQVE7Z0JBQ1g7WUFDRjtZQUVBLElBQUksQ0FBQ0csaUJBQWlCO2dCQUNwQjtZQUNGO1lBRUEsTUFBTXFELDJCQUEyQjNELDRCQUE0QjtZQUM3RDRELENBQUFBLEdBQUFBLE9BQUFBLGtCQUFBQSxFQUNFekcsRUFBRVYsYUFBYSxFQUNma0g7UUFFSjtJQUNOO0lBRUEsNkZBQTZGO0lBQzdGLHdGQUF3RjtJQUN4RiwyRUFBMkU7SUFDM0UsSUFBSUksQ0FBQUEsR0FBQUEsT0FBQUEsYUFBQUEsRUFBYzFHLEtBQUs7UUFDckJvRyxXQUFXckcsSUFBSSxHQUFHQztJQUNwQixPQUFPLElBQ0wsQ0FBQ3dDLGtCQUNEUCxZQUNDbUQsTUFBTU0sSUFBSSxLQUFLLE9BQU8sQ0FBRSxXQUFVTixNQUFNL0QsS0FBQUEsR0FDekM7UUFDQStFLFdBQVdyRyxJQUFJLEdBQUc0RyxDQUFBQSxHQUFBQSxhQUFBQSxXQUFBQSxFQUFZM0c7SUFDaEM7SUFFQSxJQUFJNEc7SUFFSixJQUFJcEUsZ0JBQWdCO1FBQ2xCLElBQUljLElBQW9CLEVBQW9CO1lBQzFDdUQsQ0FBQUEsR0FBQUEsV0FBQUEsU0FBQUEsRUFDRSxvRUFDRSxvRUFDQSw0Q0FDQTtRQUVOO1FBQ0FELE9BQUFBLFdBQUFBLEdBQU81RixPQUFBQSxPQUFLLENBQUM4RixZQUFZLENBQUMxQixPQUFPZ0I7SUFDbkMsT0FBTztRQUNMUSxPQUFBQSxXQUFBQSxHQUNFLHFCQUFDL0QsS0FBQUE7WUFBRyxHQUFHRCxTQUFTO1lBQUcsR0FBR3dELFVBQVU7c0JBQzdCMUU7O0lBR1A7SUFFQSxxQkFDRSxxQkFBQ3FGLGtCQUFrQkMsUUFBUTtRQUFDQyxPQUFPM0Y7a0JBQ2hDc0Y7O0FBR1A7O0tBelp3QjdIO0FBMlp4QixNQUFNZ0ksb0JBQUFBLFdBQUFBLEdBQW9CRyxDQUFBQSxHQUFBQSxPQUFBQSxhQUFBQSxFQUV4QnpGLE9BQUFBLGdCQUFnQjtBQUVYLE1BQU16QyxnQkFBZ0I7SUFDM0IsT0FBTytELENBQUFBLEdBQUFBLE9BQUFBLFVBQUFBLEVBQVdnRTtBQUNwQiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvc3JjL2NsaWVudC9hcHAtZGlyL2xpbmsudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlT3B0aW1pc3RpYywgdXNlUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgdHlwZSB7IFVybE9iamVjdCB9IGZyb20gJ3VybCdcbmltcG9ydCB7IGZvcm1hdFVybCB9IGZyb20gJy4uLy4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC11cmwnXG5pbXBvcnQgeyBBcHBSb3V0ZXJDb250ZXh0IH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUnXG5pbXBvcnQgeyBQcmVmZXRjaEtpbmQgfSBmcm9tICcuLi9jb21wb25lbnRzL3JvdXRlci1yZWR1Y2VyL3JvdXRlci1yZWR1Y2VyLXR5cGVzJ1xuaW1wb3J0IHsgdXNlTWVyZ2VkUmVmIH0gZnJvbSAnLi4vdXNlLW1lcmdlZC1yZWYnXG5pbXBvcnQgeyBpc0Fic29sdXRlVXJsIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xpYi91dGlscydcbmltcG9ydCB7IGFkZEJhc2VQYXRoIH0gZnJvbSAnLi4vYWRkLWJhc2UtcGF0aCdcbmltcG9ydCB7IHdhcm5PbmNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xpYi91dGlscy93YXJuLW9uY2UnXG5pbXBvcnQgdHlwZSB7IFBFTkRJTkdfTElOS19TVEFUVVMgfSBmcm9tICcuLi9jb21wb25lbnRzL2xpbmtzJ1xuaW1wb3J0IHtcbiAgSURMRV9MSU5LX1NUQVRVUyxcbiAgbW91bnRMaW5rSW5zdGFuY2UsXG4gIG9uTmF2aWdhdGlvbkludGVudCxcbiAgdW5tb3VudExpbmtGb3JDdXJyZW50TmF2aWdhdGlvbixcbiAgdW5tb3VudFByZWZldGNoYWJsZUluc3RhbmNlLFxuICB0eXBlIExpbmtJbnN0YW5jZSxcbn0gZnJvbSAnLi4vY29tcG9uZW50cy9saW5rcydcbmltcG9ydCB7IGlzTG9jYWxVUkwgfSBmcm9tICcuLi8uLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9pcy1sb2NhbC11cmwnXG5pbXBvcnQgeyBkaXNwYXRjaE5hdmlnYXRlQWN0aW9uIH0gZnJvbSAnLi4vY29tcG9uZW50cy9hcHAtcm91dGVyLWluc3RhbmNlJ1xuaW1wb3J0IHsgZXJyb3JPbmNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xpYi91dGlscy9lcnJvci1vbmNlJ1xuXG50eXBlIFVybCA9IHN0cmluZyB8IFVybE9iamVjdFxudHlwZSBSZXF1aXJlZEtleXM8VD4gPSB7XG4gIFtLIGluIGtleW9mIFRdLT86IHt9IGV4dGVuZHMgUGljazxULCBLPiA/IG5ldmVyIDogS1xufVtrZXlvZiBUXVxudHlwZSBPcHRpb25hbEtleXM8VD4gPSB7XG4gIFtLIGluIGtleW9mIFRdLT86IHt9IGV4dGVuZHMgUGljazxULCBLPiA/IEsgOiBuZXZlclxufVtrZXlvZiBUXVxuXG50eXBlIE9uTmF2aWdhdGVFdmVudEhhbmRsZXIgPSAoZXZlbnQ6IHsgcHJldmVudERlZmF1bHQ6ICgpID0+IHZvaWQgfSkgPT4gdm9pZFxuXG50eXBlIEludGVybmFsTGlua1Byb3BzID0ge1xuICAvKipcbiAgICogKipSZXF1aXJlZCoqLiBUaGUgcGF0aCBvciBVUkwgdG8gbmF2aWdhdGUgdG8uIEl0IGNhbiBhbHNvIGJlIGFuIG9iamVjdCAoc2ltaWxhciB0byBgVVJMYCkuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHRzeFxuICAgKiAvLyBOYXZpZ2F0ZSB0byAvZGFzaGJvYXJkOlxuICAgKiA8TGluayBocmVmPVwiL2Rhc2hib2FyZFwiPkRhc2hib2FyZDwvTGluaz5cbiAgICpcbiAgICogLy8gTmF2aWdhdGUgdG8gL2Fib3V0P25hbWU9dGVzdDpcbiAgICogPExpbmsgaHJlZj17eyBwYXRobmFtZTogJy9hYm91dCcsIHF1ZXJ5OiB7IG5hbWU6ICd0ZXN0JyB9IH19PlxuICAgKiAgIEFib3V0XG4gICAqIDwvTGluaz5cbiAgICogYGBgXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqIC0gRm9yIGV4dGVybmFsIFVSTHMsIHVzZSBhIGZ1bGx5IHF1YWxpZmllZCBVUkwgc3VjaCBhcyBgaHR0cHM6Ly8uLi5gLlxuICAgKiAtIEluIHRoZSBBcHAgUm91dGVyLCBkeW5hbWljIHJvdXRlcyBtdXN0IG5vdCBpbmNsdWRlIGJyYWNrZXRlZCBzZWdtZW50cyBpbiBgaHJlZmAuXG4gICAqL1xuICBocmVmOiBVcmxcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgdjEwLjAuMDogYGhyZWZgIHByb3BzIHBvaW50aW5nIHRvIGEgZHluYW1pYyByb3V0ZSBhcmVcbiAgICogYXV0b21hdGljYWxseSByZXNvbHZlZCBhbmQgbm8gbG9uZ2VyIHJlcXVpcmUgdGhlIGBhc2AgcHJvcC5cbiAgICovXG4gIGFzPzogVXJsXG5cbiAgLyoqXG4gICAqIFJlcGxhY2UgdGhlIGN1cnJlbnQgYGhpc3RvcnlgIHN0YXRlIGluc3RlYWQgb2YgYWRkaW5nIGEgbmV3IFVSTCBpbnRvIHRoZSBzdGFjay5cbiAgICpcbiAgICogQGRlZmF1bHRWYWx1ZSBgZmFsc2VgXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHRzeFxuICAgKiA8TGluayBocmVmPVwiL2Fib3V0XCIgcmVwbGFjZT5cbiAgICogICBBYm91dCAocmVwbGFjZXMgdGhlIGhpc3Rvcnkgc3RhdGUpXG4gICAqIDwvTGluaz5cbiAgICogYGBgXG4gICAqL1xuICByZXBsYWNlPzogYm9vbGVhblxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IHNjcm9sbCBiZWhhdmlvci4gSWYgYHRydWVgLCBOZXh0LmpzIGF0dGVtcHRzIHRvIG1haW50YWluXG4gICAqIHRoZSBzY3JvbGwgcG9zaXRpb24gaWYgdGhlIG5ld2x5IG5hdmlnYXRlZCBwYWdlIGlzIHN0aWxsIHZpc2libGUuIElmIG5vdCwgaXQgc2Nyb2xscyB0byB0aGUgdG9wLlxuICAgKlxuICAgKiBJZiBgZmFsc2VgLCBOZXh0LmpzIHdpbGwgbm90IG1vZGlmeSB0aGUgc2Nyb2xsIGJlaGF2aW9yIGF0IGFsbC5cbiAgICpcbiAgICogQGRlZmF1bHRWYWx1ZSBgdHJ1ZWBcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgdHN4XG4gICAqIDxMaW5rIGhyZWY9XCIvZGFzaGJvYXJkXCIgc2Nyb2xsPXtmYWxzZX0+XG4gICAqICAgTm8gYXV0byBzY3JvbGxcbiAgICogPC9MaW5rPlxuICAgKiBgYGBcbiAgICovXG4gIHNjcm9sbD86IGJvb2xlYW5cblxuICAvKipcbiAgICogVXBkYXRlIHRoZSBwYXRoIG9mIHRoZSBjdXJyZW50IHBhZ2Ugd2l0aG91dCByZXJ1bm5pbmcgZGF0YSBmZXRjaGluZyBtZXRob2RzXG4gICAqIGxpa2UgYGdldFN0YXRpY1Byb3BzYCwgYGdldFNlcnZlclNpZGVQcm9wc2AsIG9yIGBnZXRJbml0aWFsUHJvcHNgLlxuICAgKlxuICAgKiBAcmVtYXJrc1xuICAgKiBgc2hhbGxvd2Agb25seSBhcHBsaWVzIHRvIHRoZSBQYWdlcyBSb3V0ZXIuIEZvciB0aGUgQXBwIFJvdXRlciwgc2VlIHRoZVxuICAgKiBbZm9sbG93aW5nIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3JvdXRpbmcvbGlua2luZy1hbmQtbmF2aWdhdGluZyN1c2luZy10aGUtbmF0aXZlLWhpc3RvcnktYXBpKS5cbiAgICpcbiAgICogQGRlZmF1bHRWYWx1ZSBgZmFsc2VgXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHRzeFxuICAgKiA8TGluayBocmVmPVwiL2Jsb2dcIiBzaGFsbG93PlxuICAgKiAgIFNoYWxsb3cgbmF2aWdhdGlvblxuICAgKiA8L0xpbms+XG4gICAqIGBgYFxuICAgKi9cbiAgc2hhbGxvdz86IGJvb2xlYW5cblxuICAvKipcbiAgICogRm9yY2VzIGBMaW5rYCB0byBwYXNzIGl0cyBgaHJlZmAgdG8gdGhlIGNoaWxkIGNvbXBvbmVudC4gVXNlZnVsIGlmIHRoZSBjaGlsZCBpcyBhIGN1c3RvbVxuICAgKiBjb21wb25lbnQgdGhhdCB3cmFwcyBhbiBgPGE+YCB0YWcsIG9yIGlmIHlvdSdyZSB1c2luZyBjZXJ0YWluIHN0eWxpbmcgbGlicmFyaWVzLlxuICAgKlxuICAgKiBAZGVmYXVsdFZhbHVlIGBmYWxzZWBcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogYGBgdHN4XG4gICAqIDxMaW5rIGhyZWY9XCIvZGFzaGJvYXJkXCIgcGFzc0hyZWY+XG4gICAqICAgPE15U3R5bGVkQW5jaG9yPkRhc2hib2FyZDwvTXlTdHlsZWRBbmNob3I+XG4gICAqIDwvTGluaz5cbiAgICogYGBgXG4gICAqL1xuICBwYXNzSHJlZj86IGJvb2xlYW5cblxuICAvKipcbiAgICogUHJlZmV0Y2ggdGhlIHBhZ2UgaW4gdGhlIGJhY2tncm91bmQuXG4gICAqIEFueSBgPExpbmsgLz5gIHRoYXQgaXMgaW4gdGhlIHZpZXdwb3J0IChpbml0aWFsbHkgb3IgdGhyb3VnaCBzY3JvbGwpIHdpbGwgYmUgcHJlZmV0Y2hlZC5cbiAgICogUHJlZmV0Y2ggY2FuIGJlIGRpc2FibGVkIGJ5IHBhc3NpbmcgYHByZWZldGNoPXtmYWxzZX1gLlxuICAgKlxuICAgKiBAcmVtYXJrc1xuICAgKiBQcmVmZXRjaGluZyBpcyBvbmx5IGVuYWJsZWQgaW4gcHJvZHVjdGlvbi5cbiAgICpcbiAgICogLSBJbiB0aGUgKipBcHAgUm91dGVyKio6XG4gICAqICAgLSBgbnVsbGAgKGRlZmF1bHQpOiBQcmVmZXRjaCBiZWhhdmlvciBkZXBlbmRzIG9uIHN0YXRpYyB2cyBkeW5hbWljIHJvdXRlczpcbiAgICogICAgIC0gU3RhdGljIHJvdXRlczogZnVsbHkgcHJlZmV0Y2hlZFxuICAgKiAgICAgLSBEeW5hbWljIHJvdXRlczogcGFydGlhbCBwcmVmZXRjaCB0byB0aGUgbmVhcmVzdCBzZWdtZW50IHdpdGggYSBgbG9hZGluZy5qc2BcbiAgICogICAtIGB0cnVlYDogQWx3YXlzIHByZWZldGNoIHRoZSBmdWxsIHJvdXRlIGFuZCBkYXRhLlxuICAgKiAgIC0gYGZhbHNlYDogRGlzYWJsZSBwcmVmZXRjaGluZyBvbiBib3RoIHZpZXdwb3J0IGFuZCBob3Zlci5cbiAgICogLSBJbiB0aGUgKipQYWdlcyBSb3V0ZXIqKjpcbiAgICogICAtIGB0cnVlYCAoZGVmYXVsdCk6IFByZWZldGNoZXMgdGhlIHJvdXRlIGFuZCBkYXRhIGluIHRoZSBiYWNrZ3JvdW5kIG9uIHZpZXdwb3J0IG9yIGhvdmVyLlxuICAgKiAgIC0gYGZhbHNlYDogUHJlZmV0Y2ggb25seSBvbiBob3Zlciwgbm90IG9uIHZpZXdwb3J0LlxuICAgKlxuICAgKiBAZGVmYXVsdFZhbHVlIGB0cnVlYCAoUGFnZXMgUm91dGVyKSBvciBgbnVsbGAgKEFwcCBSb3V0ZXIpXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHRzeFxuICAgKiA8TGluayBocmVmPVwiL2Rhc2hib2FyZFwiIHByZWZldGNoPXtmYWxzZX0+XG4gICAqICAgRGFzaGJvYXJkXG4gICAqIDwvTGluaz5cbiAgICogYGBgXG4gICAqL1xuICBwcmVmZXRjaD86IGJvb2xlYW4gfCBudWxsXG5cbiAgLyoqXG4gICAqICh1bnN0YWJsZSkgU3dpdGNoIHRvIGEgZHluYW1pYyBwcmVmZXRjaCBvbiBob3Zlci4gRWZmZWN0aXZlbHkgdGhlIHNhbWUgYXNcbiAgICogdXBkYXRpbmcgdGhlIHByZWZldGNoIHByb3AgdG8gYHRydWVgIGluIGEgbW91c2UgZXZlbnQuXG4gICAqL1xuICB1bnN0YWJsZV9keW5hbWljT25Ib3Zlcj86IGJvb2xlYW5cblxuICAvKipcbiAgICogVGhlIGFjdGl2ZSBsb2NhbGUgaXMgYXV0b21hdGljYWxseSBwcmVwZW5kZWQgaW4gdGhlIFBhZ2VzIFJvdXRlci4gYGxvY2FsZWAgYWxsb3dzIGZvciBwcm92aWRpbmdcbiAgICogYSBkaWZmZXJlbnQgbG9jYWxlLCBvciBjYW4gYmUgc2V0IHRvIGBmYWxzZWAgdG8gb3B0IG91dCBvZiBhdXRvbWF0aWMgbG9jYWxlIGJlaGF2aW9yLlxuICAgKlxuICAgKiBAcmVtYXJrc1xuICAgKiBOb3RlOiBsb2NhbGUgb25seSBhcHBsaWVzIGluIHRoZSBQYWdlcyBSb3V0ZXIgYW5kIGlzIGlnbm9yZWQgaW4gdGhlIEFwcCBSb3V0ZXIuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYHRzeFxuICAgKiAvLyBVc2UgdGhlICdmcicgbG9jYWxlOlxuICAgKiA8TGluayBocmVmPVwiL2Fib3V0XCIgbG9jYWxlPVwiZnJcIj5cbiAgICogICBBYm91dCAoRnJlbmNoKVxuICAgKiA8L0xpbms+XG4gICAqXG4gICAqIC8vIERpc2FibGUgbG9jYWxlIHByZWZpeDpcbiAgICogPExpbmsgaHJlZj1cIi9hYm91dFwiIGxvY2FsZT17ZmFsc2V9PlxuICAgKiAgIEFib3V0IChubyBsb2NhbGUgcHJlZml4KVxuICAgKiA8L0xpbms+XG4gICAqIGBgYFxuICAgKi9cbiAgbG9jYWxlPzogc3RyaW5nIHwgZmFsc2VcblxuICAvKipcbiAgICogRW5hYmxlIGxlZ2FjeSBsaW5rIGJlaGF2aW9yLCByZXF1aXJpbmcgYW4gYDxhPmAgdGFnIHRvIHdyYXAgdGhlIGNoaWxkIGNvbnRlbnRcbiAgICogaWYgdGhlIGNoaWxkIGlzIGEgc3RyaW5nIG9yIG51bWJlci5cbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgVGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjE2XG4gICAqIEBkZWZhdWx0VmFsdWUgYGZhbHNlYFxuICAgKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9jb21taXQvNDg5ZTY1ZWQ5ODU0NGU2OWIwYWZkN2UwY2ZjM2Y5ZjZjMmI4MDNiN1xuICAgKi9cbiAgbGVnYWN5QmVoYXZpb3I/OiBib29sZWFuXG5cbiAgLyoqXG4gICAqIE9wdGlvbmFsIGV2ZW50IGhhbmRsZXIgZm9yIHdoZW4gdGhlIG1vdXNlIHBvaW50ZXIgaXMgbW92ZWQgb250byB0aGUgYDxMaW5rPmAuXG4gICAqL1xuICBvbk1vdXNlRW50ZXI/OiBSZWFjdC5Nb3VzZUV2ZW50SGFuZGxlcjxIVE1MQW5jaG9yRWxlbWVudD5cblxuICAvKipcbiAgICogT3B0aW9uYWwgZXZlbnQgaGFuZGxlciBmb3Igd2hlbiB0aGUgYDxMaW5rPmAgaXMgdG91Y2hlZC5cbiAgICovXG4gIG9uVG91Y2hTdGFydD86IFJlYWN0LlRvdWNoRXZlbnRIYW5kbGVyPEhUTUxBbmNob3JFbGVtZW50PlxuXG4gIC8qKlxuICAgKiBPcHRpb25hbCBldmVudCBoYW5kbGVyIGZvciB3aGVuIHRoZSBgPExpbms+YCBpcyBjbGlja2VkLlxuICAgKi9cbiAgb25DbGljaz86IFJlYWN0Lk1vdXNlRXZlbnRIYW5kbGVyPEhUTUxBbmNob3JFbGVtZW50PlxuXG4gIC8qKlxuICAgKiBPcHRpb25hbCBldmVudCBoYW5kbGVyIGZvciB3aGVuIHRoZSBgPExpbms+YCBpcyBuYXZpZ2F0ZWQuXG4gICAqL1xuICBvbk5hdmlnYXRlPzogT25OYXZpZ2F0ZUV2ZW50SGFuZGxlclxufVxuXG4vLyBUT0RPLUFQUDogSW5jbHVkZSB0aGUgZnVsbCBzZXQgb2YgQW5jaG9yIHByb3BzXG4vLyBhZGRpbmcgdGhpcyB0byB0aGUgcHVibGljbHkgZXhwb3J0ZWQgdHlwZSBjdXJyZW50bHkgYnJlYWtzIGV4aXN0aW5nIGFwcHNcblxuLy8gYFJvdXRlSW5mZXJUeXBlYCBpcyBhIHN0dWIgaGVyZSB0byBhdm9pZCBicmVha2luZyBgdHlwZWRSb3V0ZXNgIHdoZW4gdGhlIHR5cGVcbi8vIGlzbid0IGdlbmVyYXRlZCB5ZXQuIEl0IHdpbGwgYmUgcmVwbGFjZWQgd2hlbiB0aGUgd2VicGFjayBwbHVnaW4gcnVucy5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmV4cG9ydCB0eXBlIExpbmtQcm9wczxSb3V0ZUluZmVyVHlwZSA9IGFueT4gPSBJbnRlcm5hbExpbmtQcm9wc1xudHlwZSBMaW5rUHJvcHNSZXF1aXJlZCA9IFJlcXVpcmVkS2V5czxMaW5rUHJvcHM+XG50eXBlIExpbmtQcm9wc09wdGlvbmFsID0gT3B0aW9uYWxLZXlzPE9taXQ8SW50ZXJuYWxMaW5rUHJvcHMsICdsb2NhbGUnPj5cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50KTogYm9vbGVhbiB7XG4gIGNvbnN0IGV2ZW50VGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldCBhcyBIVE1MQW5jaG9yRWxlbWVudCB8IFNWR0FFbGVtZW50XG4gIGNvbnN0IHRhcmdldCA9IGV2ZW50VGFyZ2V0LmdldEF0dHJpYnV0ZSgndGFyZ2V0JylcbiAgcmV0dXJuIChcbiAgICAodGFyZ2V0ICYmIHRhcmdldCAhPT0gJ19zZWxmJykgfHxcbiAgICBldmVudC5tZXRhS2V5IHx8XG4gICAgZXZlbnQuY3RybEtleSB8fFxuICAgIGV2ZW50LnNoaWZ0S2V5IHx8XG4gICAgZXZlbnQuYWx0S2V5IHx8IC8vIHRyaWdnZXJzIHJlc291cmNlIGRvd25sb2FkXG4gICAgKGV2ZW50Lm5hdGl2ZUV2ZW50ICYmIGV2ZW50Lm5hdGl2ZUV2ZW50LndoaWNoID09PSAyKVxuICApXG59XG5cbmZ1bmN0aW9uIGxpbmtDbGlja2VkKFxuICBlOiBSZWFjdC5Nb3VzZUV2ZW50LFxuICBocmVmOiBzdHJpbmcsXG4gIGFzOiBzdHJpbmcsXG4gIGxpbmtJbnN0YW5jZVJlZjogUmVhY3QuUmVmT2JqZWN0PExpbmtJbnN0YW5jZSB8IG51bGw+LFxuICByZXBsYWNlPzogYm9vbGVhbixcbiAgc2Nyb2xsPzogYm9vbGVhbixcbiAgb25OYXZpZ2F0ZT86IE9uTmF2aWdhdGVFdmVudEhhbmRsZXJcbik6IHZvaWQge1xuICBjb25zdCB7IG5vZGVOYW1lIH0gPSBlLmN1cnJlbnRUYXJnZXRcblxuICAvLyBhbmNob3JzIGluc2lkZSBhbiBzdmcgaGF2ZSBhIGxvd2VyY2FzZSBub2RlTmFtZVxuICBjb25zdCBpc0FuY2hvck5vZGVOYW1lID0gbm9kZU5hbWUudG9VcHBlckNhc2UoKSA9PT0gJ0EnXG5cbiAgaWYgKFxuICAgIChpc0FuY2hvck5vZGVOYW1lICYmIGlzTW9kaWZpZWRFdmVudChlKSkgfHxcbiAgICBlLmN1cnJlbnRUYXJnZXQuaGFzQXR0cmlidXRlKCdkb3dubG9hZCcpXG4gICkge1xuICAgIC8vIGlnbm9yZSBjbGljayBmb3IgYnJvd3NlcuKAmXMgZGVmYXVsdCBiZWhhdmlvclxuICAgIHJldHVyblxuICB9XG5cbiAgaWYgKCFpc0xvY2FsVVJMKGhyZWYpKSB7XG4gICAgaWYgKHJlcGxhY2UpIHtcbiAgICAgIC8vIGJyb3dzZXIgZGVmYXVsdCBiZWhhdmlvciBkb2VzIG5vdCByZXBsYWNlIHRoZSBoaXN0b3J5IHN0YXRlXG4gICAgICAvLyBzbyB3ZSBuZWVkIHRvIGRvIGl0IG1hbnVhbGx5XG4gICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgIGxvY2F0aW9uLnJlcGxhY2UoaHJlZilcbiAgICB9XG5cbiAgICAvLyBpZ25vcmUgY2xpY2sgZm9yIGJyb3dzZXLigJlzIGRlZmF1bHQgYmVoYXZpb3JcbiAgICByZXR1cm5cbiAgfVxuXG4gIGUucHJldmVudERlZmF1bHQoKVxuXG4gIGNvbnN0IG5hdmlnYXRlID0gKCkgPT4ge1xuICAgIGlmIChvbk5hdmlnYXRlKSB7XG4gICAgICBsZXQgaXNEZWZhdWx0UHJldmVudGVkID0gZmFsc2VcblxuICAgICAgb25OYXZpZ2F0ZSh7XG4gICAgICAgIHByZXZlbnREZWZhdWx0OiAoKSA9PiB7XG4gICAgICAgICAgaXNEZWZhdWx0UHJldmVudGVkID0gdHJ1ZVxuICAgICAgICB9LFxuICAgICAgfSlcblxuICAgICAgaWYgKGlzRGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwYXRjaE5hdmlnYXRlQWN0aW9uKFxuICAgICAgYXMgfHwgaHJlZixcbiAgICAgIHJlcGxhY2UgPyAncmVwbGFjZScgOiAncHVzaCcsXG4gICAgICBzY3JvbGwgPz8gdHJ1ZSxcbiAgICAgIGxpbmtJbnN0YW5jZVJlZi5jdXJyZW50XG4gICAgKVxuICB9XG5cbiAgUmVhY3Quc3RhcnRUcmFuc2l0aW9uKG5hdmlnYXRlKVxufVxuXG5mdW5jdGlvbiBmb3JtYXRTdHJpbmdPclVybCh1cmxPYmpPclN0cmluZzogVXJsT2JqZWN0IHwgc3RyaW5nKTogc3RyaW5nIHtcbiAgaWYgKHR5cGVvZiB1cmxPYmpPclN0cmluZyA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdXJsT2JqT3JTdHJpbmdcbiAgfVxuXG4gIHJldHVybiBmb3JtYXRVcmwodXJsT2JqT3JTdHJpbmcpXG59XG5cbi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdGhhdCBleHRlbmRzIHRoZSBIVE1MIGA8YT5gIGVsZW1lbnQgdG8gcHJvdmlkZVxuICogW3ByZWZldGNoaW5nXShodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi9yb3V0aW5nL2xpbmtpbmctYW5kLW5hdmlnYXRpbmcjMi1wcmVmZXRjaGluZylcbiAqIGFuZCBjbGllbnQtc2lkZSBuYXZpZ2F0aW9uLiBUaGlzIGlzIHRoZSBwcmltYXJ5IHdheSB0byBuYXZpZ2F0ZSBiZXR3ZWVuIHJvdXRlcyBpbiBOZXh0LmpzLlxuICpcbiAqIEByZW1hcmtzXG4gKiAtIFByZWZldGNoaW5nIGlzIG9ubHkgZW5hYmxlZCBpbiBwcm9kdWN0aW9uLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2FwaS1yZWZlcmVuY2UvY29tcG9uZW50cy9saW5rXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExpbmtDb21wb25lbnQoXG4gIHByb3BzOiBMaW5rUHJvcHMgJiB7XG4gICAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVxuICAgIHJlZjogUmVhY3QuUmVmPEhUTUxBbmNob3JFbGVtZW50PlxuICB9XG4pIHtcbiAgY29uc3QgW2xpbmtTdGF0dXMsIHNldE9wdGltaXN0aWNMaW5rU3RhdHVzXSA9IHVzZU9wdGltaXN0aWMoSURMRV9MSU5LX1NUQVRVUylcblxuICBsZXQgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVxuXG4gIGNvbnN0IGxpbmtJbnN0YW5jZVJlZiA9IHVzZVJlZjxMaW5rSW5zdGFuY2UgfCBudWxsPihudWxsKVxuXG4gIGNvbnN0IHtcbiAgICBocmVmOiBocmVmUHJvcCxcbiAgICBhczogYXNQcm9wLFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlblByb3AsXG4gICAgcHJlZmV0Y2g6IHByZWZldGNoUHJvcCA9IG51bGwsXG4gICAgcGFzc0hyZWYsXG4gICAgcmVwbGFjZSxcbiAgICBzaGFsbG93LFxuICAgIHNjcm9sbCxcbiAgICBvbkNsaWNrLFxuICAgIG9uTW91c2VFbnRlcjogb25Nb3VzZUVudGVyUHJvcCxcbiAgICBvblRvdWNoU3RhcnQ6IG9uVG91Y2hTdGFydFByb3AsXG4gICAgbGVnYWN5QmVoYXZpb3IgPSBmYWxzZSxcbiAgICBvbk5hdmlnYXRlLFxuICAgIHJlZjogZm9yd2FyZGVkUmVmLFxuICAgIHVuc3RhYmxlX2R5bmFtaWNPbkhvdmVyLFxuICAgIC4uLnJlc3RQcm9wc1xuICB9ID0gcHJvcHNcblxuICBjaGlsZHJlbiA9IGNoaWxkcmVuUHJvcFxuXG4gIGlmIChcbiAgICBsZWdhY3lCZWhhdmlvciAmJlxuICAgICh0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBjaGlsZHJlbiA9PT0gJ251bWJlcicpXG4gICkge1xuICAgIGNoaWxkcmVuID0gPGE+e2NoaWxkcmVufTwvYT5cbiAgfVxuXG4gIGNvbnN0IHJvdXRlciA9IFJlYWN0LnVzZUNvbnRleHQoQXBwUm91dGVyQ29udGV4dClcblxuICBjb25zdCBwcmVmZXRjaEVuYWJsZWQgPSBwcmVmZXRjaFByb3AgIT09IGZhbHNlXG4gIC8qKlxuICAgKiBUaGUgcG9zc2libGUgc3RhdGVzIGZvciBwcmVmZXRjaCBhcmU6XG4gICAqIC0gbnVsbDogdGhpcyBpcyB0aGUgZGVmYXVsdCBcImF1dG9cIiBtb2RlLCB3aGVyZSB3ZSB3aWxsIHByZWZldGNoIHBhcnRpYWxseSBpZiB0aGUgbGluayBpcyBpbiB0aGUgdmlld3BvcnRcbiAgICogLSB0cnVlOiB3ZSB3aWxsIHByZWZldGNoIGlmIHRoZSBsaW5rIGlzIHZpc2libGUgYW5kIHByZWZldGNoIHRoZSBmdWxsIHBhZ2UsIG5vdCBqdXN0IHBhcnRpYWxseVxuICAgKiAtIGZhbHNlOiB3ZSB3aWxsIG5vdCBwcmVmZXRjaCBpZiBpbiB0aGUgdmlld3BvcnQgYXQgYWxsXG4gICAqIC0gJ3Vuc3RhYmxlX2R5bmFtaWNPbkhvdmVyJzogdGhpcyBzdGFydHMgaW4gXCJhdXRvXCIgbW9kZSwgYnV0IHN3aXRjaGVzIHRvIFwiZnVsbFwiIHdoZW4gdGhlIGxpbmsgaXMgaG92ZXJlZFxuICAgKi9cbiAgY29uc3QgYXBwUHJlZmV0Y2hLaW5kID1cbiAgICBwcmVmZXRjaFByb3AgPT09IG51bGwgPyBQcmVmZXRjaEtpbmQuQVVUTyA6IFByZWZldGNoS2luZC5GVUxMXG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBmdW5jdGlvbiBjcmVhdGVQcm9wRXJyb3IoYXJnczoge1xuICAgICAga2V5OiBzdHJpbmdcbiAgICAgIGV4cGVjdGVkOiBzdHJpbmdcbiAgICAgIGFjdHVhbDogc3RyaW5nXG4gICAgfSkge1xuICAgICAgcmV0dXJuIG5ldyBFcnJvcihcbiAgICAgICAgYEZhaWxlZCBwcm9wIHR5cGU6IFRoZSBwcm9wIFxcYCR7YXJncy5rZXl9XFxgIGV4cGVjdHMgYSAke2FyZ3MuZXhwZWN0ZWR9IGluIFxcYDxMaW5rPlxcYCwgYnV0IGdvdCBcXGAke2FyZ3MuYWN0dWFsfVxcYCBpbnN0ZWFkLmAgK1xuICAgICAgICAgICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgPyBcIlxcbk9wZW4geW91ciBicm93c2VyJ3MgY29uc29sZSB0byB2aWV3IHRoZSBDb21wb25lbnQgc3RhY2sgdHJhY2UuXCJcbiAgICAgICAgICAgIDogJycpXG4gICAgICApXG4gICAgfVxuXG4gICAgLy8gVHlwZVNjcmlwdCB0cmljayBmb3IgdHlwZS1ndWFyZGluZzpcbiAgICBjb25zdCByZXF1aXJlZFByb3BzR3VhcmQ6IFJlY29yZDxMaW5rUHJvcHNSZXF1aXJlZCwgdHJ1ZT4gPSB7XG4gICAgICBocmVmOiB0cnVlLFxuICAgIH0gYXMgY29uc3RcbiAgICBjb25zdCByZXF1aXJlZFByb3BzOiBMaW5rUHJvcHNSZXF1aXJlZFtdID0gT2JqZWN0LmtleXMoXG4gICAgICByZXF1aXJlZFByb3BzR3VhcmRcbiAgICApIGFzIExpbmtQcm9wc1JlcXVpcmVkW11cbiAgICByZXF1aXJlZFByb3BzLmZvckVhY2goKGtleTogTGlua1Byb3BzUmVxdWlyZWQpID0+IHtcbiAgICAgIGlmIChrZXkgPT09ICdocmVmJykge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgcHJvcHNba2V5XSA9PSBudWxsIHx8XG4gICAgICAgICAgKHR5cGVvZiBwcm9wc1trZXldICE9PSAnc3RyaW5nJyAmJiB0eXBlb2YgcHJvcHNba2V5XSAhPT0gJ29iamVjdCcpXG4gICAgICAgICkge1xuICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICBleHBlY3RlZDogJ2BzdHJpbmdgIG9yIGBvYmplY3RgJyxcbiAgICAgICAgICAgIGFjdHVhbDogcHJvcHNba2V5XSA9PT0gbnVsbCA/ICdudWxsJyA6IHR5cGVvZiBwcm9wc1trZXldLFxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFR5cGVTY3JpcHQgdHJpY2sgZm9yIHR5cGUtZ3VhcmRpbmc6XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICAgICAgY29uc3QgXzogbmV2ZXIgPSBrZXlcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgLy8gVHlwZVNjcmlwdCB0cmljayBmb3IgdHlwZS1ndWFyZGluZzpcbiAgICBjb25zdCBvcHRpb25hbFByb3BzR3VhcmQ6IFJlY29yZDxMaW5rUHJvcHNPcHRpb25hbCwgdHJ1ZT4gPSB7XG4gICAgICBhczogdHJ1ZSxcbiAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICBzY3JvbGw6IHRydWUsXG4gICAgICBzaGFsbG93OiB0cnVlLFxuICAgICAgcGFzc0hyZWY6IHRydWUsXG4gICAgICBwcmVmZXRjaDogdHJ1ZSxcbiAgICAgIHVuc3RhYmxlX2R5bmFtaWNPbkhvdmVyOiB0cnVlLFxuICAgICAgb25DbGljazogdHJ1ZSxcbiAgICAgIG9uTW91c2VFbnRlcjogdHJ1ZSxcbiAgICAgIG9uVG91Y2hTdGFydDogdHJ1ZSxcbiAgICAgIGxlZ2FjeUJlaGF2aW9yOiB0cnVlLFxuICAgICAgb25OYXZpZ2F0ZTogdHJ1ZSxcbiAgICB9IGFzIGNvbnN0XG4gICAgY29uc3Qgb3B0aW9uYWxQcm9wczogTGlua1Byb3BzT3B0aW9uYWxbXSA9IE9iamVjdC5rZXlzKFxuICAgICAgb3B0aW9uYWxQcm9wc0d1YXJkXG4gICAgKSBhcyBMaW5rUHJvcHNPcHRpb25hbFtdXG4gICAgb3B0aW9uYWxQcm9wcy5mb3JFYWNoKChrZXk6IExpbmtQcm9wc09wdGlvbmFsKSA9PiB7XG4gICAgICBjb25zdCB2YWxUeXBlID0gdHlwZW9mIHByb3BzW2tleV1cblxuICAgICAgaWYgKGtleSA9PT0gJ2FzJykge1xuICAgICAgICBpZiAocHJvcHNba2V5XSAmJiB2YWxUeXBlICE9PSAnc3RyaW5nJyAmJiB2YWxUeXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICBleHBlY3RlZDogJ2BzdHJpbmdgIG9yIGBvYmplY3RgJyxcbiAgICAgICAgICAgIGFjdHVhbDogdmFsVHlwZSxcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICBrZXkgPT09ICdvbkNsaWNrJyB8fFxuICAgICAgICBrZXkgPT09ICdvbk1vdXNlRW50ZXInIHx8XG4gICAgICAgIGtleSA9PT0gJ29uVG91Y2hTdGFydCcgfHxcbiAgICAgICAga2V5ID09PSAnb25OYXZpZ2F0ZSdcbiAgICAgICkge1xuICAgICAgICBpZiAocHJvcHNba2V5XSAmJiB2YWxUeXBlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgdGhyb3cgY3JlYXRlUHJvcEVycm9yKHtcbiAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgIGV4cGVjdGVkOiAnYGZ1bmN0aW9uYCcsXG4gICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGUsXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAga2V5ID09PSAncmVwbGFjZScgfHxcbiAgICAgICAga2V5ID09PSAnc2Nyb2xsJyB8fFxuICAgICAgICBrZXkgPT09ICdzaGFsbG93JyB8fFxuICAgICAgICBrZXkgPT09ICdwYXNzSHJlZicgfHxcbiAgICAgICAga2V5ID09PSAncHJlZmV0Y2gnIHx8XG4gICAgICAgIGtleSA9PT0gJ2xlZ2FjeUJlaGF2aW9yJyB8fFxuICAgICAgICBrZXkgPT09ICd1bnN0YWJsZV9keW5hbWljT25Ib3ZlcidcbiAgICAgICkge1xuICAgICAgICBpZiAocHJvcHNba2V5XSAhPSBudWxsICYmIHZhbFR5cGUgIT09ICdib29sZWFuJykge1xuICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICBleHBlY3RlZDogJ2Bib29sZWFuYCcsXG4gICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGUsXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gVHlwZVNjcmlwdCB0cmljayBmb3IgdHlwZS1ndWFyZGluZzpcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgICAgICBjb25zdCBfOiBuZXZlciA9IGtleVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChwcm9wcy5sb2NhbGUpIHtcbiAgICAgIHdhcm5PbmNlKFxuICAgICAgICAnVGhlIGBsb2NhbGVgIHByb3AgaXMgbm90IHN1cHBvcnRlZCBpbiBgbmV4dC9saW5rYCB3aGlsZSB1c2luZyB0aGUgYGFwcGAgcm91dGVyLiBSZWFkIG1vcmUgYWJvdXQgYXBwIHJvdXRlciBpbnRlcm5hbGl6YXRpb246IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3JvdXRpbmcvaW50ZXJuYXRpb25hbGl6YXRpb24nXG4gICAgICApXG4gICAgfVxuICAgIGlmICghYXNQcm9wKSB7XG4gICAgICBsZXQgaHJlZjogc3RyaW5nIHwgdW5kZWZpbmVkXG4gICAgICBpZiAodHlwZW9mIGhyZWZQcm9wID09PSAnc3RyaW5nJykge1xuICAgICAgICBocmVmID0gaHJlZlByb3BcbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIHR5cGVvZiBocmVmUHJvcCA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgdHlwZW9mIGhyZWZQcm9wLnBhdGhuYW1lID09PSAnc3RyaW5nJ1xuICAgICAgKSB7XG4gICAgICAgIGhyZWYgPSBocmVmUHJvcC5wYXRobmFtZVxuICAgICAgfVxuXG4gICAgICBpZiAoaHJlZikge1xuICAgICAgICBjb25zdCBoYXNEeW5hbWljU2VnbWVudCA9IGhyZWZcbiAgICAgICAgICAuc3BsaXQoJy8nKVxuICAgICAgICAgIC5zb21lKChzZWdtZW50KSA9PiBzZWdtZW50LnN0YXJ0c1dpdGgoJ1snKSAmJiBzZWdtZW50LmVuZHNXaXRoKCddJykpXG5cbiAgICAgICAgaWYgKGhhc0R5bmFtaWNTZWdtZW50KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgYER5bmFtaWMgaHJlZiBcXGAke2hyZWZ9XFxgIGZvdW5kIGluIDxMaW5rPiB3aGlsZSB1c2luZyB0aGUgXFxgL2FwcFxcYCByb3V0ZXIsIHRoaXMgaXMgbm90IHN1cHBvcnRlZC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9hcHAtZGlyLWR5bmFtaWMtaHJlZmBcbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjb25zdCB7IGhyZWYsIGFzIH0gPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCByZXNvbHZlZEhyZWYgPSBmb3JtYXRTdHJpbmdPclVybChocmVmUHJvcClcbiAgICByZXR1cm4ge1xuICAgICAgaHJlZjogcmVzb2x2ZWRIcmVmLFxuICAgICAgYXM6IGFzUHJvcCA/IGZvcm1hdFN0cmluZ09yVXJsKGFzUHJvcCkgOiByZXNvbHZlZEhyZWYsXG4gICAgfVxuICB9LCBbaHJlZlByb3AsIGFzUHJvcF0pXG5cbiAgLy8gVGhpcyB3aWxsIHJldHVybiB0aGUgZmlyc3QgY2hpbGQsIGlmIG11bHRpcGxlIGFyZSBwcm92aWRlZCBpdCB3aWxsIHRocm93IGFuIGVycm9yXG4gIGxldCBjaGlsZDogYW55XG4gIGlmIChsZWdhY3lCZWhhdmlvcikge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgaWYgKG9uQ2xpY2spIHtcbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgIGBcIm9uQ2xpY2tcIiB3YXMgcGFzc2VkIHRvIDxMaW5rPiB3aXRoIFxcYGhyZWZcXGAgb2YgXFxgJHtocmVmUHJvcH1cXGAgYnV0IFwibGVnYWN5QmVoYXZpb3JcIiB3YXMgc2V0LiBUaGUgbGVnYWN5IGJlaGF2aW9yIHJlcXVpcmVzIG9uQ2xpY2sgYmUgc2V0IG9uIHRoZSBjaGlsZCBvZiBuZXh0L2xpbmtgXG4gICAgICAgIClcbiAgICAgIH1cbiAgICAgIGlmIChvbk1vdXNlRW50ZXJQcm9wKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICBgXCJvbk1vdXNlRW50ZXJcIiB3YXMgcGFzc2VkIHRvIDxMaW5rPiB3aXRoIFxcYGhyZWZcXGAgb2YgXFxgJHtocmVmUHJvcH1cXGAgYnV0IFwibGVnYWN5QmVoYXZpb3JcIiB3YXMgc2V0LiBUaGUgbGVnYWN5IGJlaGF2aW9yIHJlcXVpcmVzIG9uTW91c2VFbnRlciBiZSBzZXQgb24gdGhlIGNoaWxkIG9mIG5leHQvbGlua2BcbiAgICAgICAgKVxuICAgICAgfVxuICAgICAgdHJ5IHtcbiAgICAgICAgY2hpbGQgPSBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGlmICghY2hpbGRyZW4pIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgTm8gY2hpbGRyZW4gd2VyZSBwYXNzZWQgdG8gPExpbms+IHdpdGggXFxgaHJlZlxcYCBvZiBcXGAke2hyZWZQcm9wfVxcYCBidXQgb25lIGNoaWxkIGlzIHJlcXVpcmVkIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL2xpbmstbm8tY2hpbGRyZW5gXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgTXVsdGlwbGUgY2hpbGRyZW4gd2VyZSBwYXNzZWQgdG8gPExpbms+IHdpdGggXFxgaHJlZlxcYCBvZiBcXGAke2hyZWZQcm9wfVxcYCBidXQgb25seSBvbmUgY2hpbGQgaXMgc3VwcG9ydGVkIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL2xpbmstbXVsdGlwbGUtY2hpbGRyZW5gICtcbiAgICAgICAgICAgICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgICA/IFwiIFxcbk9wZW4geW91ciBicm93c2VyJ3MgY29uc29sZSB0byB2aWV3IHRoZSBDb21wb25lbnQgc3RhY2sgdHJhY2UuXCJcbiAgICAgICAgICAgICAgOiAnJylcbiAgICAgICAgKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjaGlsZCA9IFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgaWYgKChjaGlsZHJlbiBhcyBhbnkpPy50eXBlID09PSAnYScpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdJbnZhbGlkIDxMaW5rPiB3aXRoIDxhPiBjaGlsZC4gUGxlYXNlIHJlbW92ZSA8YT4gb3IgdXNlIDxMaW5rIGxlZ2FjeUJlaGF2aW9yPi5cXG5MZWFybiBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9pbnZhbGlkLW5ldy1saW5rLXdpdGgtZXh0cmEtYW5jaG9yJ1xuICAgICAgICApXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29uc3QgY2hpbGRSZWY6IGFueSA9IGxlZ2FjeUJlaGF2aW9yXG4gICAgPyBjaGlsZCAmJiB0eXBlb2YgY2hpbGQgPT09ICdvYmplY3QnICYmIGNoaWxkLnJlZlxuICAgIDogZm9yd2FyZGVkUmVmXG5cbiAgLy8gVXNlIGEgY2FsbGJhY2sgcmVmIHRvIGF0dGFjaCBhbiBJbnRlcnNlY3Rpb25PYnNlcnZlciB0byB0aGUgYW5jaG9yIHRhZyBvblxuICAvLyBtb3VudC4gSW4gdGhlIGZ1dHVyZSB3ZSB3aWxsIGFsc28gdXNlIHRoaXMgdG8ga2VlcCB0cmFjayBvZiBhbGwgdGhlXG4gIC8vIGN1cnJlbnRseSBtb3VudGVkIDxMaW5rPiBpbnN0YW5jZXMsIGUuZy4gc28gd2UgY2FuIHJlLXByZWZldGNoIHRoZW0gYWZ0ZXJcbiAgLy8gYSByZXZhbGlkYXRpb24gb3IgcmVmcmVzaC5cbiAgY29uc3Qgb2JzZXJ2ZUxpbmtWaXNpYmlsaXR5T25Nb3VudCA9IFJlYWN0LnVzZUNhbGxiYWNrKFxuICAgIChlbGVtZW50OiBIVE1MQW5jaG9yRWxlbWVudCB8IFNWR0FFbGVtZW50KSA9PiB7XG4gICAgICBpZiAocm91dGVyICE9PSBudWxsKSB7XG4gICAgICAgIGxpbmtJbnN0YW5jZVJlZi5jdXJyZW50ID0gbW91bnRMaW5rSW5zdGFuY2UoXG4gICAgICAgICAgZWxlbWVudCxcbiAgICAgICAgICBocmVmLFxuICAgICAgICAgIHJvdXRlcixcbiAgICAgICAgICBhcHBQcmVmZXRjaEtpbmQsXG4gICAgICAgICAgcHJlZmV0Y2hFbmFibGVkLFxuICAgICAgICAgIHNldE9wdGltaXN0aWNMaW5rU3RhdHVzXG4gICAgICAgIClcbiAgICAgIH1cblxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgaWYgKGxpbmtJbnN0YW5jZVJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgdW5tb3VudExpbmtGb3JDdXJyZW50TmF2aWdhdGlvbihsaW5rSW5zdGFuY2VSZWYuY3VycmVudClcbiAgICAgICAgICBsaW5rSW5zdGFuY2VSZWYuY3VycmVudCA9IG51bGxcbiAgICAgICAgfVxuICAgICAgICB1bm1vdW50UHJlZmV0Y2hhYmxlSW5zdGFuY2UoZWxlbWVudClcbiAgICAgIH1cbiAgICB9LFxuICAgIFtwcmVmZXRjaEVuYWJsZWQsIGhyZWYsIHJvdXRlciwgYXBwUHJlZmV0Y2hLaW5kLCBzZXRPcHRpbWlzdGljTGlua1N0YXR1c11cbiAgKVxuXG4gIGNvbnN0IG1lcmdlZFJlZiA9IHVzZU1lcmdlZFJlZihvYnNlcnZlTGlua1Zpc2liaWxpdHlPbk1vdW50LCBjaGlsZFJlZilcblxuICBjb25zdCBjaGlsZFByb3BzOiB7XG4gICAgb25Ub3VjaFN0YXJ0PzogUmVhY3QuVG91Y2hFdmVudEhhbmRsZXI8SFRNTEFuY2hvckVsZW1lbnQ+XG4gICAgb25Nb3VzZUVudGVyOiBSZWFjdC5Nb3VzZUV2ZW50SGFuZGxlcjxIVE1MQW5jaG9yRWxlbWVudD5cbiAgICBvbkNsaWNrOiBSZWFjdC5Nb3VzZUV2ZW50SGFuZGxlcjxIVE1MQW5jaG9yRWxlbWVudD5cbiAgICBocmVmPzogc3RyaW5nXG4gICAgcmVmPzogYW55XG4gIH0gPSB7XG4gICAgcmVmOiBtZXJnZWRSZWYsXG4gICAgb25DbGljayhlKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBpZiAoIWUpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgQ29tcG9uZW50IHJlbmRlcmVkIGluc2lkZSBuZXh0L2xpbmsgaGFzIHRvIHBhc3MgY2xpY2sgZXZlbnQgdG8gXCJvbkNsaWNrXCIgcHJvcC5gXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghbGVnYWN5QmVoYXZpb3IgJiYgdHlwZW9mIG9uQ2xpY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgb25DbGljayhlKVxuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgIGxlZ2FjeUJlaGF2aW9yICYmXG4gICAgICAgIGNoaWxkLnByb3BzICYmXG4gICAgICAgIHR5cGVvZiBjaGlsZC5wcm9wcy5vbkNsaWNrID09PSAnZnVuY3Rpb24nXG4gICAgICApIHtcbiAgICAgICAgY2hpbGQucHJvcHMub25DbGljayhlKVxuICAgICAgfVxuXG4gICAgICBpZiAoIXJvdXRlcikge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgaWYgKGUuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgbGlua0NsaWNrZWQoZSwgaHJlZiwgYXMsIGxpbmtJbnN0YW5jZVJlZiwgcmVwbGFjZSwgc2Nyb2xsLCBvbk5hdmlnYXRlKVxuICAgIH0sXG4gICAgb25Nb3VzZUVudGVyKGUpIHtcbiAgICAgIGlmICghbGVnYWN5QmVoYXZpb3IgJiYgdHlwZW9mIG9uTW91c2VFbnRlclByb3AgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgb25Nb3VzZUVudGVyUHJvcChlKVxuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgIGxlZ2FjeUJlaGF2aW9yICYmXG4gICAgICAgIGNoaWxkLnByb3BzICYmXG4gICAgICAgIHR5cGVvZiBjaGlsZC5wcm9wcy5vbk1vdXNlRW50ZXIgPT09ICdmdW5jdGlvbidcbiAgICAgICkge1xuICAgICAgICBjaGlsZC5wcm9wcy5vbk1vdXNlRW50ZXIoZSlcbiAgICAgIH1cblxuICAgICAgaWYgKCFyb3V0ZXIpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGlmICghcHJlZmV0Y2hFbmFibGVkIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCB1cGdyYWRlVG9EeW5hbWljUHJlZmV0Y2ggPSB1bnN0YWJsZV9keW5hbWljT25Ib3ZlciA9PT0gdHJ1ZVxuICAgICAgb25OYXZpZ2F0aW9uSW50ZW50KFxuICAgICAgICBlLmN1cnJlbnRUYXJnZXQgYXMgSFRNTEFuY2hvckVsZW1lbnQgfCBTVkdBRWxlbWVudCxcbiAgICAgICAgdXBncmFkZVRvRHluYW1pY1ByZWZldGNoXG4gICAgICApXG4gICAgfSxcbiAgICBvblRvdWNoU3RhcnQ6IHByb2Nlc3MuZW52Ll9fTkVYVF9MSU5LX05PX1RPVUNIX1NUQVJUXG4gICAgICA/IHVuZGVmaW5lZFxuICAgICAgOiBmdW5jdGlvbiBvblRvdWNoU3RhcnQoZSkge1xuICAgICAgICAgIGlmICghbGVnYWN5QmVoYXZpb3IgJiYgdHlwZW9mIG9uVG91Y2hTdGFydFByb3AgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIG9uVG91Y2hTdGFydFByb3AoZSlcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICBsZWdhY3lCZWhhdmlvciAmJlxuICAgICAgICAgICAgY2hpbGQucHJvcHMgJiZcbiAgICAgICAgICAgIHR5cGVvZiBjaGlsZC5wcm9wcy5vblRvdWNoU3RhcnQgPT09ICdmdW5jdGlvbidcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIGNoaWxkLnByb3BzLm9uVG91Y2hTdGFydChlKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghcm91dGVyKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoIXByZWZldGNoRW5hYmxlZCkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3QgdXBncmFkZVRvRHluYW1pY1ByZWZldGNoID0gdW5zdGFibGVfZHluYW1pY09uSG92ZXIgPT09IHRydWVcbiAgICAgICAgICBvbk5hdmlnYXRpb25JbnRlbnQoXG4gICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQgYXMgSFRNTEFuY2hvckVsZW1lbnQgfCBTVkdBRWxlbWVudCxcbiAgICAgICAgICAgIHVwZ3JhZGVUb0R5bmFtaWNQcmVmZXRjaFxuICAgICAgICAgIClcbiAgICAgICAgfSxcbiAgfVxuXG4gIC8vIElmIGNoaWxkIGlzIGFuIDxhPiB0YWcgYW5kIGRvZXNuJ3QgaGF2ZSBhIGhyZWYgYXR0cmlidXRlLCBvciBpZiB0aGUgJ3Bhc3NIcmVmJyBwcm9wZXJ0eSBpc1xuICAvLyBkZWZpbmVkLCB3ZSBzcGVjaWZ5IHRoZSBjdXJyZW50ICdocmVmJywgc28gdGhhdCByZXBldGl0aW9uIGlzIG5vdCBuZWVkZWQgYnkgdGhlIHVzZXIuXG4gIC8vIElmIHRoZSB1cmwgaXMgYWJzb2x1dGUsIHdlIGNhbiBieXBhc3MgdGhlIGxvZ2ljIHRvIHByZXBlbmQgdGhlIGJhc2VQYXRoLlxuICBpZiAoaXNBYnNvbHV0ZVVybChhcykpIHtcbiAgICBjaGlsZFByb3BzLmhyZWYgPSBhc1xuICB9IGVsc2UgaWYgKFxuICAgICFsZWdhY3lCZWhhdmlvciB8fFxuICAgIHBhc3NIcmVmIHx8XG4gICAgKGNoaWxkLnR5cGUgPT09ICdhJyAmJiAhKCdocmVmJyBpbiBjaGlsZC5wcm9wcykpXG4gICkge1xuICAgIGNoaWxkUHJvcHMuaHJlZiA9IGFkZEJhc2VQYXRoKGFzKVxuICB9XG5cbiAgbGV0IGxpbms6IFJlYWN0LlJlYWN0Tm9kZVxuXG4gIGlmIChsZWdhY3lCZWhhdmlvcikge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgZXJyb3JPbmNlKFxuICAgICAgICAnYGxlZ2FjeUJlaGF2aW9yYCBpcyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gYSBmdXR1cmUgJyArXG4gICAgICAgICAgJ3JlbGVhc2UuIEEgY29kZW1vZCBpcyBhdmFpbGFibGUgdG8gdXBncmFkZSB5b3VyIGNvbXBvbmVudHM6XFxuXFxuJyArXG4gICAgICAgICAgJ25weCBAbmV4dC9jb2RlbW9kQGxhdGVzdCBuZXctbGluayAuXFxuXFxuJyArXG4gICAgICAgICAgJ0xlYXJuIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3VwZ3JhZGluZy9jb2RlbW9kcyNyZW1vdmUtYS10YWdzLWZyb20tbGluay1jb21wb25lbnRzJ1xuICAgICAgKVxuICAgIH1cbiAgICBsaW5rID0gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCBjaGlsZFByb3BzKVxuICB9IGVsc2Uge1xuICAgIGxpbmsgPSAoXG4gICAgICA8YSB7Li4ucmVzdFByb3BzfSB7Li4uY2hpbGRQcm9wc30+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvYT5cbiAgICApXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxMaW5rU3RhdHVzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17bGlua1N0YXR1c30+XG4gICAgICB7bGlua31cbiAgICA8L0xpbmtTdGF0dXNDb250ZXh0LlByb3ZpZGVyPlxuICApXG59XG5cbmNvbnN0IExpbmtTdGF0dXNDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxcbiAgdHlwZW9mIFBFTkRJTkdfTElOS19TVEFUVVMgfCB0eXBlb2YgSURMRV9MSU5LX1NUQVRVU1xuPihJRExFX0xJTktfU1RBVFVTKVxuXG5leHBvcnQgY29uc3QgdXNlTGlua1N0YXR1cyA9ICgpID0+IHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoTGlua1N0YXR1c0NvbnRleHQpXG59XG4iXSwibmFtZXMiOlsiTGlua0NvbXBvbmVudCIsInVzZUxpbmtTdGF0dXMiLCJpc01vZGlmaWVkRXZlbnQiLCJldmVudCIsImV2ZW50VGFyZ2V0IiwiY3VycmVudFRhcmdldCIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsIm1ldGFLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJuYXRpdmVFdmVudCIsIndoaWNoIiwibGlua0NsaWNrZWQiLCJlIiwiaHJlZiIsImFzIiwibGlua0luc3RhbmNlUmVmIiwicmVwbGFjZSIsInNjcm9sbCIsIm9uTmF2aWdhdGUiLCJub2RlTmFtZSIsImlzQW5jaG9yTm9kZU5hbWUiLCJ0b1VwcGVyQ2FzZSIsImhhc0F0dHJpYnV0ZSIsImlzTG9jYWxVUkwiLCJwcmV2ZW50RGVmYXVsdCIsImxvY2F0aW9uIiwibmF2aWdhdGUiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkaXNwYXRjaE5hdmlnYXRlQWN0aW9uIiwiY3VycmVudCIsIlJlYWN0Iiwic3RhcnRUcmFuc2l0aW9uIiwiZm9ybWF0U3RyaW5nT3JVcmwiLCJ1cmxPYmpPclN0cmluZyIsImZvcm1hdFVybCIsInByb3BzIiwibGlua1N0YXR1cyIsInNldE9wdGltaXN0aWNMaW5rU3RhdHVzIiwidXNlT3B0aW1pc3RpYyIsIklETEVfTElOS19TVEFUVVMiLCJjaGlsZHJlbiIsInVzZVJlZiIsImhyZWZQcm9wIiwiYXNQcm9wIiwiY2hpbGRyZW5Qcm9wIiwicHJlZmV0Y2giLCJwcmVmZXRjaFByb3AiLCJwYXNzSHJlZiIsInNoYWxsb3ciLCJvbkNsaWNrIiwib25Nb3VzZUVudGVyIiwib25Nb3VzZUVudGVyUHJvcCIsIm9uVG91Y2hTdGFydCIsIm9uVG91Y2hTdGFydFByb3AiLCJsZWdhY3lCZWhhdmlvciIsInJlZiIsImZvcndhcmRlZFJlZiIsInVuc3RhYmxlX2R5bmFtaWNPbkhvdmVyIiwicmVzdFByb3BzIiwiYSIsInJvdXRlciIsInVzZUNvbnRleHQiLCJBcHBSb3V0ZXJDb250ZXh0IiwicHJlZmV0Y2hFbmFibGVkIiwiYXBwUHJlZmV0Y2hLaW5kIiwiUHJlZmV0Y2hLaW5kIiwiQVVUTyIsIkZVTEwiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJjcmVhdGVQcm9wRXJyb3IiLCJhcmdzIiwiRXJyb3IiLCJrZXkiLCJleHBlY3RlZCIsImFjdHVhbCIsIndpbmRvdyIsInJlcXVpcmVkUHJvcHNHdWFyZCIsInJlcXVpcmVkUHJvcHMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsIl8iLCJvcHRpb25hbFByb3BzR3VhcmQiLCJvcHRpb25hbFByb3BzIiwidmFsVHlwZSIsImxvY2FsZSIsIndhcm5PbmNlIiwicGF0aG5hbWUiLCJoYXNEeW5hbWljU2VnbWVudCIsInNwbGl0Iiwic29tZSIsInNlZ21lbnQiLCJzdGFydHNXaXRoIiwiZW5kc1dpdGgiLCJ1c2VNZW1vIiwicmVzb2x2ZWRIcmVmIiwiY2hpbGQiLCJjb25zb2xlIiwid2FybiIsIkNoaWxkcmVuIiwib25seSIsImVyciIsInR5cGUiLCJjaGlsZFJlZiIsIm9ic2VydmVMaW5rVmlzaWJpbGl0eU9uTW91bnQiLCJ1c2VDYWxsYmFjayIsImVsZW1lbnQiLCJtb3VudExpbmtJbnN0YW5jZSIsInVubW91bnRMaW5rRm9yQ3VycmVudE5hdmlnYXRpb24iLCJ1bm1vdW50UHJlZmV0Y2hhYmxlSW5zdGFuY2UiLCJtZXJnZWRSZWYiLCJ1c2VNZXJnZWRSZWYiLCJjaGlsZFByb3BzIiwiZGVmYXVsdFByZXZlbnRlZCIsInVwZ3JhZGVUb0R5bmFtaWNQcmVmZXRjaCIsIm9uTmF2aWdhdGlvbkludGVudCIsIl9fTkVYVF9MSU5LX05PX1RPVUNIX1NUQVJUIiwidW5kZWZpbmVkIiwiaXNBYnNvbHV0ZVVybCIsImFkZEJhc2VQYXRoIiwibGluayIsImVycm9yT25jZSIsImNsb25lRWxlbWVudCIsIkxpbmtTdGF0dXNDb250ZXh0IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImNyZWF0ZUNvbnRleHQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/compat/router.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/compat/router.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useRouter\", ({\n    enumerable: true,\n    get: function() {\n        return useRouter;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst _routercontextsharedruntime = __webpack_require__(/*! ../../shared/lib/router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\");\nfunction useRouter() {\n    return (0, _react.useContext)(_routercontextsharedruntime.RouterContext);\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=router.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBhdC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs2Q0FjZ0JBOzs7ZUFBQUE7OzttQ0FkVzt3REFDRztBQWF2QixTQUFTQTtJQUNkLE9BQU9DLENBQUFBLEdBQUFBLE9BQUFBLFVBQUFBLEVBQVdDLDRCQUFBQSxhQUFhO0FBQ2pDIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9zcmMvY2xpZW50L2NvbXBhdC9yb3V0ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgUm91dGVyQ29udGV4dCB9IGZyb20gJy4uLy4uL3NoYXJlZC9saWIvcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUnXG5pbXBvcnQgdHlwZSB7IE5leHRSb3V0ZXIgfSBmcm9tICcuLi9yb3V0ZXInXG5cbi8qKlxuICogdXNlUm91dGVyIGZyb20gYG5leHQvY29tcGF0L3JvdXRlcmAgaXMgZGVzaWduZWQgdG8gYXNzaXN0IGRldmVsb3BlcnNcbiAqIG1pZ3JhdGluZyBmcm9tIGBwYWdlcy9gIHRvIGBhcHAvYC4gVW5saWtlIGBuZXh0L3JvdXRlcmAsIHRoaXMgaG9vayBkb2VzIG5vdFxuICogdGhyb3cgd2hlbiB0aGUgYE5leHRSb3V0ZXJgIGlzIG5vdCBtb3VudGVkLCBhbmQgaW5zdGVhZCByZXR1cm5zIGBudWxsYC4gVGhlXG4gKiBtb3JlIGNvbmNyZXRlIHJldHVybiB0eXBlIGhlcmUgbGV0cyBkZXZlbG9wZXJzIHVzZSB0aGlzIGhvb2sgd2l0aGluXG4gKiBjb21wb25lbnRzIHRoYXQgY291bGQgYmUgc2hhcmVkIGJldHdlZW4gYm90aCBgYXBwL2AgYW5kIGBwYWdlcy9gIGFuZCBoYW5kbGVcbiAqIHRvIHRoZSBjYXNlIHdoZXJlIHRoZSByb3V0ZXIgaXMgbm90IG1vdW50ZWQuXG4gKlxuICogQHJldHVybnMgVGhlIGBOZXh0Um91dGVyYCBpbnN0YW5jZSBpZiBpdCdzIGF2YWlsYWJsZSwgb3RoZXJ3aXNlIGBudWxsYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVJvdXRlcigpOiBOZXh0Um91dGVyIHwgbnVsbCB7XG4gIHJldHVybiB1c2VDb250ZXh0KFJvdXRlckNvbnRleHQpXG59XG4iXSwibmFtZXMiOlsidXNlUm91dGVyIiwidXNlQ29udGV4dCIsIlJvdXRlckNvbnRleHQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/compat/router.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/client/use-merged-ref.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useMergedRef\", ({\n    enumerable: true,\n    get: function() {\n        return useMergedRef;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nfunction useMergedRef(refA, refB) {\n    const cleanupA = (0, _react.useRef)(null);\n    const cleanupB = (0, _react.useRef)(null);\n    // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n    // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n    // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),\n    // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n    // (because it hasn't been updated for React 19)\n    // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n    // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n    return (0, _react.useCallback)((current)=>{\n        if (current === null) {\n            const cleanupFnA = cleanupA.current;\n            if (cleanupFnA) {\n                cleanupA.current = null;\n                cleanupFnA();\n            }\n            const cleanupFnB = cleanupB.current;\n            if (cleanupFnB) {\n                cleanupB.current = null;\n                cleanupFnB();\n            }\n        } else {\n            if (refA) {\n                cleanupA.current = applyRef(refA, current);\n            }\n            if (refB) {\n                cleanupB.current = applyRef(refB, current);\n            }\n        }\n    }, [\n        refA,\n        refB\n    ]);\n}\nfunction applyRef(refA, current) {\n    if (typeof refA === 'function') {\n        const cleanup = refA(current);\n        if (typeof cleanup === 'function') {\n            return cleanup;\n        } else {\n            return ()=>refA(null);\n        }\n    } else {\n        refA.current = current;\n        return ()=>{\n            refA.current = null;\n        };\n    }\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-merged-ref.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3VzZS1tZXJnZWQtcmVmLmpzIiwibWFwcGluZ3MiOiI7Ozs7Z0RBU2dCQTs7O2VBQUFBOzs7bUNBVDhCO0FBU3ZDLFNBQVNBLGFBQ2RDLElBQW1CLEVBQ25CQyxJQUFtQjtJQUVuQixNQUFNQyxXQUFXQyxDQUFBQSxHQUFBQSxPQUFBQSxNQUFBQSxFQUE0QjtJQUM3QyxNQUFNQyxXQUFXRCxDQUFBQSxHQUFBQSxPQUFBQSxNQUFBQSxFQUE0QjtJQUU3QyxtRkFBbUY7SUFDbkYseUVBQXlFO0lBQ3pFLGlHQUFpRztJQUNqRyw4RkFBOEY7SUFDOUYsZ0RBQWdEO0lBQ2hELG1HQUFtRztJQUNuRyx3RkFBd0Y7SUFDeEYsT0FBT0UsQ0FBQUEsR0FBQUEsT0FBQUEsV0FBQUEsRUFDTCxDQUFDQztRQUNDLElBQUlBLFlBQVksTUFBTTtZQUNwQixNQUFNQyxhQUFhTCxTQUFTSSxPQUFPO1lBQ25DLElBQUlDLFlBQVk7Z0JBQ2RMLFNBQVNJLE9BQU8sR0FBRztnQkFDbkJDO1lBQ0Y7WUFDQSxNQUFNQyxhQUFhSixTQUFTRSxPQUFPO1lBQ25DLElBQUlFLFlBQVk7Z0JBQ2RKLFNBQVNFLE9BQU8sR0FBRztnQkFDbkJFO1lBQ0Y7UUFDRixPQUFPO1lBQ0wsSUFBSVIsTUFBTTtnQkFDUkUsU0FBU0ksT0FBTyxHQUFHRyxTQUFTVCxNQUFNTTtZQUNwQztZQUNBLElBQUlMLE1BQU07Z0JBQ1JHLFNBQVNFLE9BQU8sR0FBR0csU0FBU1IsTUFBTUs7WUFDcEM7UUFDRjtJQUNGLEdBQ0E7UUFBQ047UUFBTUM7S0FBSztBQUVoQjtBQUVBLFNBQVNRLFNBQ1BULElBQWdDLEVBQ2hDTSxPQUFpQjtJQUVqQixJQUFJLE9BQU9OLFNBQVMsWUFBWTtRQUM5QixNQUFNVSxVQUFVVixLQUFLTTtRQUNyQixJQUFJLE9BQU9JLFlBQVksWUFBWTtZQUNqQyxPQUFPQTtRQUNULE9BQU87WUFDTCxPQUFPLElBQU1WLEtBQUs7UUFDcEI7SUFDRixPQUFPO1FBQ0xBLEtBQUtNLE9BQU8sR0FBR0E7UUFDZixPQUFPO1lBQ0xOLEtBQUtNLE9BQU8sR0FBRztRQUNqQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvc3JjL2NsaWVudC91c2UtbWVyZ2VkLXJlZi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlUmVmLCB0eXBlIFJlZiB9IGZyb20gJ3JlYWN0J1xuXG4vLyBUaGlzIGlzIGEgY29tcGF0aWJpbGl0eSBob29rIHRvIHN1cHBvcnQgUmVhY3QgMTggYW5kIDE5IHJlZnMuXG4vLyBJbiAxOSwgYSBjbGVhbnVwIGZ1bmN0aW9uIGZyb20gcmVmcyBtYXkgYmUgcmV0dXJuZWQuXG4vLyBJbiAxOCwgcmV0dXJuaW5nIGEgY2xlYW51cCBmdW5jdGlvbiBjcmVhdGVzIGEgd2FybmluZy5cbi8vIFNpbmNlIHdlIHRha2UgdXNlcnNwYWNlIHJlZnMsIHdlIGRvbid0IGtub3cgYWhlYWQgb2YgdGltZSBpZiBhIGNsZWFudXAgZnVuY3Rpb24gd2lsbCBiZSByZXR1cm5lZC5cbi8vIFRoaXMgaW1wbGVtZW50cyBjbGVhbnVwIGZ1bmN0aW9ucyB3aXRoIHRoZSBvbGQgYmVoYXZpb3IgaW4gMTguXG4vLyBXZSBrbm93IHJlZnMgYXJlIGFsd2F5cyBjYWxsZWQgYWx0ZXJuYXRpbmcgd2l0aCBgbnVsbGAgYW5kIHRoZW4gYFRgLlxuLy8gU28gYSBjYWxsIHdpdGggYG51bGxgIG1lYW5zIHdlIG5lZWQgdG8gY2FsbCB0aGUgcHJldmlvdXMgY2xlYW51cCBmdW5jdGlvbnMuXG5leHBvcnQgZnVuY3Rpb24gdXNlTWVyZ2VkUmVmPFRFbGVtZW50PihcbiAgcmVmQTogUmVmPFRFbGVtZW50PixcbiAgcmVmQjogUmVmPFRFbGVtZW50PlxuKTogUmVmPFRFbGVtZW50PiB7XG4gIGNvbnN0IGNsZWFudXBBID0gdXNlUmVmPCgoKSA9PiB2b2lkKSB8IG51bGw+KG51bGwpXG4gIGNvbnN0IGNsZWFudXBCID0gdXNlUmVmPCgoKSA9PiB2b2lkKSB8IG51bGw+KG51bGwpXG5cbiAgLy8gTk9URTogSW4gdGhlb3J5LCB3ZSBjb3VsZCBza2lwIHRoZSB3cmFwcGluZyBpZiBvbmx5IG9uZSBvZiB0aGUgcmVmcyBpcyBub24tbnVsbC5cbiAgLy8gKHRoaXMgaGFwcGVucyBvZnRlbiBpZiB0aGUgdXNlciBkb2Vzbid0IHBhc3MgYSByZWYgdG8gTGluay9Gb3JtL0ltYWdlKVxuICAvLyBCdXQgdGhpcyBjYW4gY2F1c2UgdXMgdG8gbGVhayBhIGNsZWFudXAtcmVmIGludG8gdXNlciBjb2RlIChlLmcuIHZpYSBgPExpbmsgbGVnYWN5QmVoYXZpb3I+YCksXG4gIC8vIGFuZCB0aGUgdXNlciBtaWdodCBwYXNzIHRoYXQgcmVmIGludG8gcmVmLW1lcmdpbmcgbGlicmFyeSB0aGF0IGRvZXNuJ3Qgc3VwcG9ydCBjbGVhbnVwIHJlZnNcbiAgLy8gKGJlY2F1c2UgaXQgaGFzbid0IGJlZW4gdXBkYXRlZCBmb3IgUmVhY3QgMTkpXG4gIC8vIHdoaWNoIGNhbiB0aGVuIGNhdXNlIHRoaW5ncyB0byBibG93IHVwLCBiZWNhdXNlIGEgY2xlYW51cC1yZXR1cm5pbmcgcmVmIGdldHMgY2FsbGVkIHdpdGggYG51bGxgLlxuICAvLyBTbyBpbiBwcmFjdGljZSwgaXQncyBzYWZlciB0byBiZSBkZWZlbnNpdmUgYW5kIGFsd2F5cyB3cmFwIHRoZSByZWYsIGV2ZW4gb24gUmVhY3QgMTkuXG4gIHJldHVybiB1c2VDYWxsYmFjayhcbiAgICAoY3VycmVudDogVEVsZW1lbnQgfCBudWxsKTogdm9pZCA9PiB7XG4gICAgICBpZiAoY3VycmVudCA9PT0gbnVsbCkge1xuICAgICAgICBjb25zdCBjbGVhbnVwRm5BID0gY2xlYW51cEEuY3VycmVudFxuICAgICAgICBpZiAoY2xlYW51cEZuQSkge1xuICAgICAgICAgIGNsZWFudXBBLmN1cnJlbnQgPSBudWxsXG4gICAgICAgICAgY2xlYW51cEZuQSgpXG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2xlYW51cEZuQiA9IGNsZWFudXBCLmN1cnJlbnRcbiAgICAgICAgaWYgKGNsZWFudXBGbkIpIHtcbiAgICAgICAgICBjbGVhbnVwQi5jdXJyZW50ID0gbnVsbFxuICAgICAgICAgIGNsZWFudXBGbkIoKVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAocmVmQSkge1xuICAgICAgICAgIGNsZWFudXBBLmN1cnJlbnQgPSBhcHBseVJlZihyZWZBLCBjdXJyZW50KVxuICAgICAgICB9XG4gICAgICAgIGlmIChyZWZCKSB7XG4gICAgICAgICAgY2xlYW51cEIuY3VycmVudCA9IGFwcGx5UmVmKHJlZkIsIGN1cnJlbnQpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIFtyZWZBLCByZWZCXVxuICApXG59XG5cbmZ1bmN0aW9uIGFwcGx5UmVmPFRFbGVtZW50PihcbiAgcmVmQTogTm9uTnVsbGFibGU8UmVmPFRFbGVtZW50Pj4sXG4gIGN1cnJlbnQ6IFRFbGVtZW50XG4pIHtcbiAgaWYgKHR5cGVvZiByZWZBID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc3QgY2xlYW51cCA9IHJlZkEoY3VycmVudClcbiAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiBjbGVhbnVwXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAoKSA9PiByZWZBKG51bGwpXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJlZkEuY3VycmVudCA9IGN1cnJlbnRcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgcmVmQS5jdXJyZW50ID0gbnVsbFxuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbInVzZU1lcmdlZFJlZiIsInJlZkEiLCJyZWZCIiwiY2xlYW51cEEiLCJ1c2VSZWYiLCJjbGVhbnVwQiIsInVzZUNhbGxiYWNrIiwiY3VycmVudCIsImNsZWFudXBGbkEiLCJjbGVhbnVwRm5CIiwiYXBwbHlSZWYiLCJjbGVhbnVwIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {



/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      \"react-stack-bottom-frame\": function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React[\"react-stack-bottom-frame\"].bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5wcm9kdWN0aW9uLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router-context.shared-runtime.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouterContext\", ({\n    enumerable: true,\n    get: function() {\n        return RouterContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst RouterContext = _react.default.createContext(null);\nif (true) {\n    RouterContext.displayName = 'RouterContext';\n} //# sourceMappingURL=router-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O2lEQUdhQTs7O2VBQUFBOzs7OzRFQUhLO0FBR1gsTUFBTUEsZ0JBQWdCQyxPQUFBQSxPQUFLLENBQUNDLGFBQWEsQ0FBb0I7QUFFcEUsSUFBSUMsSUFBb0IsRUFBbUI7SUFDekNILGNBQWNNLFdBQVcsR0FBRztBQUM5QiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvc3JjL3NoYXJlZC9saWIvcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHR5cGUgeyBOZXh0Um91dGVyIH0gZnJvbSAnLi9yb3V0ZXIvcm91dGVyJ1xuXG5leHBvcnQgY29uc3QgUm91dGVyQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8TmV4dFJvdXRlciB8IG51bGw+KG51bGwpXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIFJvdXRlckNvbnRleHQuZGlzcGxheU5hbWUgPSAnUm91dGVyQ29udGV4dCdcbn1cbiJdLCJuYW1lcyI6WyJSb3V0ZXJDb250ZXh0IiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiZGlzcGxheU5hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/format-url.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    formatUrl: function() {\n        return formatUrl;\n    },\n    formatWithValidation: function() {\n        return formatWithValidation;\n    },\n    urlObjectKeys: function() {\n        return urlObjectKeys;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _querystring = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ./querystring */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\"));\nconst slashedProtocols = /https?|ftp|gopher|file/;\nfunction formatUrl(urlObj) {\n    let { auth, hostname } = urlObj;\n    let protocol = urlObj.protocol || '';\n    let pathname = urlObj.pathname || '';\n    let hash = urlObj.hash || '';\n    let query = urlObj.query || '';\n    let host = false;\n    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';\n    if (urlObj.host) {\n        host = auth + urlObj.host;\n    } else if (hostname) {\n        host = auth + (~hostname.indexOf(':') ? \"[\" + hostname + \"]\" : hostname);\n        if (urlObj.port) {\n            host += ':' + urlObj.port;\n        }\n    }\n    if (query && typeof query === 'object') {\n        query = String(_querystring.urlQueryToSearchParams(query));\n    }\n    let search = urlObj.search || query && \"?\" + query || '';\n    if (protocol && !protocol.endsWith(':')) protocol += ':';\n    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n        host = '//' + (host || '');\n        if (pathname && pathname[0] !== '/') pathname = '/' + pathname;\n    } else if (!host) {\n        host = '';\n    }\n    if (hash && hash[0] !== '#') hash = '#' + hash;\n    if (search && search[0] !== '?') search = '?' + search;\n    pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n    search = search.replace('#', '%23');\n    return \"\" + protocol + host + pathname + search + hash;\n}\nconst urlObjectKeys = [\n    'auth',\n    'hash',\n    'host',\n    'hostname',\n    'href',\n    'path',\n    'pathname',\n    'port',\n    'protocol',\n    'query',\n    'search',\n    'slashes'\n];\nfunction formatWithValidation(url) {\n    if (true) {\n        if (url !== null && typeof url === 'object') {\n            Object.keys(url).forEach((key)=>{\n                if (!urlObjectKeys.includes(key)) {\n                    console.warn(\"Unknown key passed via urlObject into url.format: \" + key);\n                }\n            });\n        }\n    }\n    return formatUrl(url);\n} //# sourceMappingURL=format-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBQSx1Q0FBdUM7QUFDdkMsc0RBQXNEO0FBQ3RELEVBQUU7QUFDRiwwRUFBMEU7QUFDMUUsZ0VBQWdFO0FBQ2hFLHNFQUFzRTtBQUN0RSxzRUFBc0U7QUFDdEUsNEVBQTRFO0FBQzVFLHFFQUFxRTtBQUNyRSx3QkFBd0I7QUFDeEIsRUFBRTtBQUNGLDBFQUEwRTtBQUMxRSx5REFBeUQ7QUFDekQsRUFBRTtBQUNGLDBFQUEwRTtBQUMxRSw2REFBNkQ7QUFDN0QsNEVBQTRFO0FBQzVFLDJFQUEyRTtBQUMzRSx3RUFBd0U7QUFDeEUsNEVBQTRFO0FBQzVFLHlDQUF5Qzs7Ozs7Ozs7Ozs7OztJQVF6QkEsU0FBUztlQUFUQTs7SUE2REFDLG9CQUFvQjtlQUFwQkE7O0lBZkhDLGFBQWE7ZUFBYkE7Ozs7bUZBbERnQjtBQUU3QixNQUFNQyxtQkFBbUI7QUFFbEIsU0FBU0gsVUFBVUksTUFBaUI7SUFDekMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRSxHQUFHRjtJQUN6QixJQUFJRyxXQUFXSCxPQUFPRyxRQUFRLElBQUk7SUFDbEMsSUFBSUMsV0FBV0osT0FBT0ksUUFBUSxJQUFJO0lBQ2xDLElBQUlDLE9BQU9MLE9BQU9LLElBQUksSUFBSTtJQUMxQixJQUFJQyxRQUFRTixPQUFPTSxLQUFLLElBQUk7SUFDNUIsSUFBSUMsT0FBdUI7SUFFM0JOLE9BQU9BLE9BQU9PLG1CQUFtQlAsTUFBTVEsT0FBTyxDQUFDLFFBQVEsT0FBTyxNQUFNO0lBRXBFLElBQUlULE9BQU9PLElBQUksRUFBRTtRQUNmQSxPQUFPTixPQUFPRCxPQUFPTyxJQUFJO0lBQzNCLE9BQU8sSUFBSUwsVUFBVTtRQUNuQkssT0FBT04sT0FBUSxFQUFDQyxTQUFTUSxPQUFPLENBQUMsT0FBUSxNQUFHUixXQUFTLE1BQUtBLFFBQUFBLENBQU87UUFDakUsSUFBSUYsT0FBT1csSUFBSSxFQUFFO1lBQ2ZKLFFBQVEsTUFBTVAsT0FBT1csSUFBSTtRQUMzQjtJQUNGO0lBRUEsSUFBSUwsU0FBUyxPQUFPQSxVQUFVLFVBQVU7UUFDdENBLFFBQVFNLE9BQU9DLGFBQVlDLHNCQUFzQixDQUFDUjtJQUNwRDtJQUVBLElBQUlTLFNBQVNmLE9BQU9lLE1BQU0sSUFBS1QsU0FBVSxNQUFHQSxTQUFZO0lBRXhELElBQUlILFlBQVksQ0FBQ0EsU0FBU2EsUUFBUSxDQUFDLE1BQU1iLFlBQVk7SUFFckQsSUFDRUgsT0FBT2lCLE9BQU8sSUFDWixFQUFDZCxZQUFZSixpQkFBaUJtQixJQUFJLENBQUNmLFNBQUFBLENBQVEsSUFBTUksU0FBUyxPQUM1RDtRQUNBQSxPQUFPLE9BQVFBLENBQUFBLFFBQVEsR0FBQztRQUN4QixJQUFJSCxZQUFZQSxRQUFRLENBQUMsRUFBRSxLQUFLLEtBQUtBLFdBQVcsTUFBTUE7SUFDeEQsT0FBTyxJQUFJLENBQUNHLE1BQU07UUFDaEJBLE9BQU87SUFDVDtJQUVBLElBQUlGLFFBQVFBLElBQUksQ0FBQyxFQUFFLEtBQUssS0FBS0EsT0FBTyxNQUFNQTtJQUMxQyxJQUFJVSxVQUFVQSxNQUFNLENBQUMsRUFBRSxLQUFLLEtBQUtBLFNBQVMsTUFBTUE7SUFFaERYLFdBQVdBLFNBQVNLLE9BQU8sQ0FBQyxTQUFTRDtJQUNyQ08sU0FBU0EsT0FBT04sT0FBTyxDQUFDLEtBQUs7SUFFN0IsT0FBUSxLQUFFTixXQUFXSSxPQUFPSCxXQUFXVyxTQUFTVjtBQUNsRDtBQUVPLE1BQU1QLGdCQUFnQjtJQUMzQjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVNLFNBQVNELHFCQUFxQnNCLEdBQWM7SUFDakQsSUFBSUMsSUFBb0IsRUFBb0I7UUFDMUMsSUFBSUQsUUFBUSxRQUFRLE9BQU9BLFFBQVEsVUFBVTtZQUMzQ0ksT0FBT0MsSUFBSSxDQUFDTCxLQUFLTSxPQUFPLENBQUMsQ0FBQ0M7Z0JBQ3hCLElBQUksQ0FBQzVCLGNBQWM2QixRQUFRLENBQUNELE1BQU07b0JBQ2hDRSxRQUFRQyxJQUFJLENBQ1QsdURBQW9ESDtnQkFFekQ7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPOUIsVUFBVXVCO0FBQ25CIiwic291cmNlcyI6WyIvc3JjL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC11cmwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRm9ybWF0IGZ1bmN0aW9uIG1vZGlmaWVkIGZyb20gbm9kZWpzXG4vLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHR5cGUgeyBVcmxPYmplY3QgfSBmcm9tICd1cmwnXG5pbXBvcnQgdHlwZSB7IFBhcnNlZFVybFF1ZXJ5IH0gZnJvbSAncXVlcnlzdHJpbmcnXG5pbXBvcnQgKiBhcyBxdWVyeXN0cmluZyBmcm9tICcuL3F1ZXJ5c3RyaW5nJ1xuXG5jb25zdCBzbGFzaGVkUHJvdG9jb2xzID0gL2h0dHBzP3xmdHB8Z29waGVyfGZpbGUvXG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRVcmwodXJsT2JqOiBVcmxPYmplY3QpIHtcbiAgbGV0IHsgYXV0aCwgaG9zdG5hbWUgfSA9IHVybE9ialxuICBsZXQgcHJvdG9jb2wgPSB1cmxPYmoucHJvdG9jb2wgfHwgJydcbiAgbGV0IHBhdGhuYW1lID0gdXJsT2JqLnBhdGhuYW1lIHx8ICcnXG4gIGxldCBoYXNoID0gdXJsT2JqLmhhc2ggfHwgJydcbiAgbGV0IHF1ZXJ5ID0gdXJsT2JqLnF1ZXJ5IHx8ICcnXG4gIGxldCBob3N0OiBzdHJpbmcgfCBmYWxzZSA9IGZhbHNlXG5cbiAgYXV0aCA9IGF1dGggPyBlbmNvZGVVUklDb21wb25lbnQoYXV0aCkucmVwbGFjZSgvJTNBL2ksICc6JykgKyAnQCcgOiAnJ1xuXG4gIGlmICh1cmxPYmouaG9zdCkge1xuICAgIGhvc3QgPSBhdXRoICsgdXJsT2JqLmhvc3RcbiAgfSBlbHNlIGlmIChob3N0bmFtZSkge1xuICAgIGhvc3QgPSBhdXRoICsgKH5ob3N0bmFtZS5pbmRleE9mKCc6JykgPyBgWyR7aG9zdG5hbWV9XWAgOiBob3N0bmFtZSlcbiAgICBpZiAodXJsT2JqLnBvcnQpIHtcbiAgICAgIGhvc3QgKz0gJzonICsgdXJsT2JqLnBvcnRcbiAgICB9XG4gIH1cblxuICBpZiAocXVlcnkgJiYgdHlwZW9mIHF1ZXJ5ID09PSAnb2JqZWN0Jykge1xuICAgIHF1ZXJ5ID0gU3RyaW5nKHF1ZXJ5c3RyaW5nLnVybFF1ZXJ5VG9TZWFyY2hQYXJhbXMocXVlcnkgYXMgUGFyc2VkVXJsUXVlcnkpKVxuICB9XG5cbiAgbGV0IHNlYXJjaCA9IHVybE9iai5zZWFyY2ggfHwgKHF1ZXJ5ICYmIGA/JHtxdWVyeX1gKSB8fCAnJ1xuXG4gIGlmIChwcm90b2NvbCAmJiAhcHJvdG9jb2wuZW5kc1dpdGgoJzonKSkgcHJvdG9jb2wgKz0gJzonXG5cbiAgaWYgKFxuICAgIHVybE9iai5zbGFzaGVzIHx8XG4gICAgKCghcHJvdG9jb2wgfHwgc2xhc2hlZFByb3RvY29scy50ZXN0KHByb3RvY29sKSkgJiYgaG9zdCAhPT0gZmFsc2UpXG4gICkge1xuICAgIGhvc3QgPSAnLy8nICsgKGhvc3QgfHwgJycpXG4gICAgaWYgKHBhdGhuYW1lICYmIHBhdGhuYW1lWzBdICE9PSAnLycpIHBhdGhuYW1lID0gJy8nICsgcGF0aG5hbWVcbiAgfSBlbHNlIGlmICghaG9zdCkge1xuICAgIGhvc3QgPSAnJ1xuICB9XG5cbiAgaWYgKGhhc2ggJiYgaGFzaFswXSAhPT0gJyMnKSBoYXNoID0gJyMnICsgaGFzaFxuICBpZiAoc2VhcmNoICYmIHNlYXJjaFswXSAhPT0gJz8nKSBzZWFyY2ggPSAnPycgKyBzZWFyY2hcblxuICBwYXRobmFtZSA9IHBhdGhuYW1lLnJlcGxhY2UoL1s/I10vZywgZW5jb2RlVVJJQ29tcG9uZW50KVxuICBzZWFyY2ggPSBzZWFyY2gucmVwbGFjZSgnIycsICclMjMnKVxuXG4gIHJldHVybiBgJHtwcm90b2NvbH0ke2hvc3R9JHtwYXRobmFtZX0ke3NlYXJjaH0ke2hhc2h9YFxufVxuXG5leHBvcnQgY29uc3QgdXJsT2JqZWN0S2V5cyA9IFtcbiAgJ2F1dGgnLFxuICAnaGFzaCcsXG4gICdob3N0JyxcbiAgJ2hvc3RuYW1lJyxcbiAgJ2hyZWYnLFxuICAncGF0aCcsXG4gICdwYXRobmFtZScsXG4gICdwb3J0JyxcbiAgJ3Byb3RvY29sJyxcbiAgJ3F1ZXJ5JyxcbiAgJ3NlYXJjaCcsXG4gICdzbGFzaGVzJyxcbl1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFdpdGhWYWxpZGF0aW9uKHVybDogVXJsT2JqZWN0KTogc3RyaW5nIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgaWYgKHVybCAhPT0gbnVsbCAmJiB0eXBlb2YgdXJsID09PSAnb2JqZWN0Jykge1xuICAgICAgT2JqZWN0LmtleXModXJsKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgaWYgKCF1cmxPYmplY3RLZXlzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgICBgVW5rbm93biBrZXkgcGFzc2VkIHZpYSB1cmxPYmplY3QgaW50byB1cmwuZm9ybWF0OiAke2tleX1gXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmb3JtYXRVcmwodXJsKVxufVxuIl0sIm5hbWVzIjpbImZvcm1hdFVybCIsImZvcm1hdFdpdGhWYWxpZGF0aW9uIiwidXJsT2JqZWN0S2V5cyIsInNsYXNoZWRQcm90b2NvbHMiLCJ1cmxPYmoiLCJhdXRoIiwiaG9zdG5hbWUiLCJwcm90b2NvbCIsInBhdGhuYW1lIiwiaGFzaCIsInF1ZXJ5IiwiaG9zdCIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJpbmRleE9mIiwicG9ydCIsIlN0cmluZyIsInF1ZXJ5c3RyaW5nIiwidXJsUXVlcnlUb1NlYXJjaFBhcmFtcyIsInNlYXJjaCIsImVuZHNXaXRoIiwic2xhc2hlcyIsInRlc3QiLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImluY2x1ZGVzIiwiY29uc29sZSIsIndhcm4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/is-local-url.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isLocalURL\", ({\n    enumerable: true,\n    get: function() {\n        return isLocalURL;\n    }\n}));\nconst _utils = __webpack_require__(/*! ../../utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _hasbasepath = __webpack_require__(/*! ../../../../client/has-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/has-base-path.js\");\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (!(0, _utils.isAbsoluteUrl)(url)) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils.getLocationOrigin)();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n} //# sourceMappingURL=is-local-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtbG9jYWwtdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OENBTWdCQTs7O2VBQUFBOzs7bUNBTmlDO3lDQUNyQjtBQUtyQixTQUFTQSxXQUFXQyxHQUFXO0lBQ3BDLGdFQUFnRTtJQUNoRSxJQUFJLENBQUNDLENBQUFBLEdBQUFBLE9BQUFBLGFBQUFBLEVBQWNELE1BQU0sT0FBTztJQUNoQyxJQUFJO1FBQ0YsNERBQTREO1FBQzVELE1BQU1FLGlCQUFpQkMsQ0FBQUEsR0FBQUEsT0FBQUEsaUJBQUFBO1FBQ3ZCLE1BQU1DLFdBQVcsSUFBSUMsSUFBSUwsS0FBS0U7UUFDOUIsT0FBT0UsU0FBU0UsTUFBTSxLQUFLSixrQkFBa0JLLENBQUFBLEdBQUFBLGFBQUFBLFdBQUFBLEVBQVlILFNBQVNJLFFBQVE7SUFDNUUsRUFBRSxPQUFPQyxHQUFHO1FBQ1YsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIi9zcmMvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtbG9jYWwtdXJsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQWJzb2x1dGVVcmwsIGdldExvY2F0aW9uT3JpZ2luIH0gZnJvbSAnLi4vLi4vdXRpbHMnXG5pbXBvcnQgeyBoYXNCYXNlUGF0aCB9IGZyb20gJy4uLy4uLy4uLy4uL2NsaWVudC9oYXMtYmFzZS1wYXRoJ1xuXG4vKipcbiAqIERldGVjdHMgd2hldGhlciBhIGdpdmVuIHVybCBpcyByb3V0YWJsZSBieSB0aGUgTmV4dC5qcyByb3V0ZXIgKGJyb3dzZXIgb25seSkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0xvY2FsVVJMKHVybDogc3RyaW5nKTogYm9vbGVhbiB7XG4gIC8vIHByZXZlbnQgYSBoeWRyYXRpb24gbWlzbWF0Y2ggb24gaHJlZiBmb3IgdXJsIHdpdGggYW5jaG9yIHJlZnNcbiAgaWYgKCFpc0Fic29sdXRlVXJsKHVybCkpIHJldHVybiB0cnVlXG4gIHRyeSB7XG4gICAgLy8gYWJzb2x1dGUgdXJscyBjYW4gYmUgbG9jYWwgaWYgdGhleSBhcmUgb24gdGhlIHNhbWUgb3JpZ2luXG4gICAgY29uc3QgbG9jYXRpb25PcmlnaW4gPSBnZXRMb2NhdGlvbk9yaWdpbigpXG4gICAgY29uc3QgcmVzb2x2ZWQgPSBuZXcgVVJMKHVybCwgbG9jYXRpb25PcmlnaW4pXG4gICAgcmV0dXJuIHJlc29sdmVkLm9yaWdpbiA9PT0gbG9jYXRpb25PcmlnaW4gJiYgaGFzQmFzZVBhdGgocmVzb2x2ZWQucGF0aG5hbWUpXG4gIH0gY2F0Y2ggKF8pIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuIl0sIm5hbWVzIjpbImlzTG9jYWxVUkwiLCJ1cmwiLCJpc0Fic29sdXRlVXJsIiwibG9jYXRpb25PcmlnaW4iLCJnZXRMb2NhdGlvbk9yaWdpbiIsInJlc29sdmVkIiwiVVJMIiwib3JpZ2luIiwiaGFzQmFzZVBhdGgiLCJwYXRobmFtZSIsIl8iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/querystring.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    assign: function() {\n        return assign;\n    },\n    searchParamsToUrlQuery: function() {\n        return searchParamsToUrlQuery;\n    },\n    urlQueryToSearchParams: function() {\n        return urlQueryToSearchParams;\n    }\n});\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    for (const [key, value] of searchParams.entries()){\n        const existing = query[key];\n        if (typeof existing === 'undefined') {\n            query[key] = value;\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            query[key] = [\n                existing,\n                value\n            ];\n        }\n    }\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === 'string') {\n        return param;\n    }\n    if (typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n        return String(param);\n    } else {\n        return '';\n    }\n}\nfunction urlQueryToSearchParams(query) {\n    const searchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(query)){\n        if (Array.isArray(value)) {\n            for (const item of value){\n                searchParams.append(key, stringifyUrlQueryParam(item));\n            }\n        } else {\n            searchParams.set(key, stringifyUrlQueryParam(value));\n        }\n    }\n    return searchParams;\n}\nfunction assign(target) {\n    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        searchParamsList[_key - 1] = arguments[_key];\n    }\n    for (const searchParams of searchParamsList){\n        for (const key of searchParams.keys()){\n            target.delete(key);\n        }\n        for (const [key, value] of searchParams.entries()){\n            target.append(key, value);\n        }\n    }\n    return target;\n} //# sourceMappingURL=querystring.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBZ0RnQkEsTUFBTTtlQUFOQTs7SUE5Q0FDLHNCQUFzQjtlQUF0QkE7O0lBZ0NBQyxzQkFBc0I7ZUFBdEJBOzs7QUFoQ1QsU0FBU0QsdUJBQ2RFLFlBQTZCO0lBRTdCLE1BQU1DLFFBQXdCLENBQUM7SUFDL0IsS0FBSyxNQUFNLENBQUNDLEtBQUtDLE1BQU0sSUFBSUgsYUFBYUksT0FBTyxHQUFJO1FBQ2pELE1BQU1DLFdBQVdKLEtBQUssQ0FBQ0MsSUFBSTtRQUMzQixJQUFJLE9BQU9HLGFBQWEsYUFBYTtZQUNuQ0osS0FBSyxDQUFDQyxJQUFJLEdBQUdDO1FBQ2YsT0FBTyxJQUFJRyxNQUFNQyxPQUFPLENBQUNGLFdBQVc7WUFDbENBLFNBQVNHLElBQUksQ0FBQ0w7UUFDaEIsT0FBTztZQUNMRixLQUFLLENBQUNDLElBQUksR0FBRztnQkFBQ0c7Z0JBQVVGO2FBQU07UUFDaEM7SUFDRjtJQUNBLE9BQU9GO0FBQ1Q7QUFFQSxTQUFTUSx1QkFBdUJDLEtBQWM7SUFDNUMsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDN0IsT0FBT0E7SUFDVDtJQUVBLElBQ0csT0FBT0EsVUFBVSxZQUFZLENBQUNDLE1BQU1ELFVBQ3JDLE9BQU9BLFVBQVUsV0FDakI7UUFDQSxPQUFPRSxPQUFPRjtJQUNoQixPQUFPO1FBQ0wsT0FBTztJQUNUO0FBQ0Y7QUFFTyxTQUFTWCx1QkFBdUJFLEtBQXFCO0lBQzFELE1BQU1ELGVBQWUsSUFBSWE7SUFDekIsS0FBSyxNQUFNLENBQUNYLEtBQUtDLE1BQU0sSUFBSVcsT0FBT1YsT0FBTyxDQUFDSCxPQUFRO1FBQ2hELElBQUlLLE1BQU1DLE9BQU8sQ0FBQ0osUUFBUTtZQUN4QixLQUFLLE1BQU1ZLFFBQVFaLE1BQU87Z0JBQ3hCSCxhQUFhZ0IsTUFBTSxDQUFDZCxLQUFLTyx1QkFBdUJNO1lBQ2xEO1FBQ0YsT0FBTztZQUNMZixhQUFhaUIsR0FBRyxDQUFDZixLQUFLTyx1QkFBdUJOO1FBQy9DO0lBQ0Y7SUFDQSxPQUFPSDtBQUNUO0FBRU8sU0FBU0gsT0FDZHFCLE1BQXVCO0lBQ3ZCLGlDQUFHQyxtQkFBSDtRQUFHQSxnQkFBQUEsQ0FBSCwyQkFBc0M7O0lBRXRDLEtBQUssTUFBTW5CLGdCQUFnQm1CLGlCQUFrQjtRQUMzQyxLQUFLLE1BQU1qQixPQUFPRixhQUFhb0IsSUFBSSxHQUFJO1lBQ3JDRixPQUFPRyxNQUFNLENBQUNuQjtRQUNoQjtRQUVBLEtBQUssTUFBTSxDQUFDQSxLQUFLQyxNQUFNLElBQUlILGFBQWFJLE9BQU8sR0FBSTtZQUNqRGMsT0FBT0YsTUFBTSxDQUFDZCxLQUFLQztRQUNyQjtJQUNGO0lBRUEsT0FBT2U7QUFDVCIsInNvdXJjZXMiOlsiL3NyYy9zaGFyZWQvbGliL3JvdXRlci91dGlscy9xdWVyeXN0cmluZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFBhcnNlZFVybFF1ZXJ5IH0gZnJvbSAncXVlcnlzdHJpbmcnXG5cbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2hQYXJhbXNUb1VybFF1ZXJ5KFxuICBzZWFyY2hQYXJhbXM6IFVSTFNlYXJjaFBhcmFtc1xuKTogUGFyc2VkVXJsUXVlcnkge1xuICBjb25zdCBxdWVyeTogUGFyc2VkVXJsUXVlcnkgPSB7fVxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBzZWFyY2hQYXJhbXMuZW50cmllcygpKSB7XG4gICAgY29uc3QgZXhpc3RpbmcgPSBxdWVyeVtrZXldXG4gICAgaWYgKHR5cGVvZiBleGlzdGluZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHF1ZXJ5W2tleV0gPSB2YWx1ZVxuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShleGlzdGluZykpIHtcbiAgICAgIGV4aXN0aW5nLnB1c2godmFsdWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIHF1ZXJ5W2tleV0gPSBbZXhpc3RpbmcsIHZhbHVlXVxuICAgIH1cbiAgfVxuICByZXR1cm4gcXVlcnlcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5VXJsUXVlcnlQYXJhbShwYXJhbTogdW5rbm93bik6IHN0cmluZyB7XG4gIGlmICh0eXBlb2YgcGFyYW0gPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHBhcmFtXG4gIH1cblxuICBpZiAoXG4gICAgKHR5cGVvZiBwYXJhbSA9PT0gJ251bWJlcicgJiYgIWlzTmFOKHBhcmFtKSkgfHxcbiAgICB0eXBlb2YgcGFyYW0gPT09ICdib29sZWFuJ1xuICApIHtcbiAgICByZXR1cm4gU3RyaW5nKHBhcmFtKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiAnJ1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cmxRdWVyeVRvU2VhcmNoUGFyYW1zKHF1ZXJ5OiBQYXJzZWRVcmxRdWVyeSk6IFVSTFNlYXJjaFBhcmFtcyB7XG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKVxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhxdWVyeSkpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICBzZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgc3RyaW5naWZ5VXJsUXVlcnlQYXJhbShpdGVtKSlcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2VhcmNoUGFyYW1zLnNldChrZXksIHN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0odmFsdWUpKVxuICAgIH1cbiAgfVxuICByZXR1cm4gc2VhcmNoUGFyYW1zXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ24oXG4gIHRhcmdldDogVVJMU2VhcmNoUGFyYW1zLFxuICAuLi5zZWFyY2hQYXJhbXNMaXN0OiBVUkxTZWFyY2hQYXJhbXNbXVxuKTogVVJMU2VhcmNoUGFyYW1zIHtcbiAgZm9yIChjb25zdCBzZWFyY2hQYXJhbXMgb2Ygc2VhcmNoUGFyYW1zTGlzdCkge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIHNlYXJjaFBhcmFtcy5rZXlzKCkpIHtcbiAgICAgIHRhcmdldC5kZWxldGUoa2V5KVxuICAgIH1cblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHNlYXJjaFBhcmFtcy5lbnRyaWVzKCkpIHtcbiAgICAgIHRhcmdldC5hcHBlbmQoa2V5LCB2YWx1ZSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0XG59XG4iXSwibmFtZXMiOlsiYXNzaWduIiwic2VhcmNoUGFyYW1zVG9VcmxRdWVyeSIsInVybFF1ZXJ5VG9TZWFyY2hQYXJhbXMiLCJzZWFyY2hQYXJhbXMiLCJxdWVyeSIsImtleSIsInZhbHVlIiwiZW50cmllcyIsImV4aXN0aW5nIiwiQXJyYXkiLCJpc0FycmF5IiwicHVzaCIsInN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0iLCJwYXJhbSIsImlzTmFOIiwiU3RyaW5nIiwiVVJMU2VhcmNoUGFyYW1zIiwiT2JqZWN0IiwiaXRlbSIsImFwcGVuZCIsInNldCIsInRhcmdldCIsInNlYXJjaFBhcmFtc0xpc3QiLCJrZXlzIiwiZGVsZXRlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/utils.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    DecodeError: function() {\n        return DecodeError;\n    },\n    MiddlewareNotFoundError: function() {\n        return MiddlewareNotFoundError;\n    },\n    MissingStaticPage: function() {\n        return MissingStaticPage;\n    },\n    NormalizeError: function() {\n        return NormalizeError;\n    },\n    PageNotFoundError: function() {\n        return PageNotFoundError;\n    },\n    SP: function() {\n        return SP;\n    },\n    ST: function() {\n        return ST;\n    },\n    WEB_VITALS: function() {\n        return WEB_VITALS;\n    },\n    execOnce: function() {\n        return execOnce;\n    },\n    getDisplayName: function() {\n        return getDisplayName;\n    },\n    getLocationOrigin: function() {\n        return getLocationOrigin;\n    },\n    getURL: function() {\n        return getURL;\n    },\n    isAbsoluteUrl: function() {\n        return isAbsoluteUrl;\n    },\n    isResSent: function() {\n        return isResSent;\n    },\n    loadGetInitialProps: function() {\n        return loadGetInitialProps;\n    },\n    normalizeRepeatedSlashes: function() {\n        return normalizeRepeatedSlashes;\n    },\n    stringifyError: function() {\n        return stringifyError;\n    }\n});\nconst WEB_VITALS = [\n    'CLS',\n    'FCP',\n    'FID',\n    'INP',\n    'LCP',\n    'TTFB'\n];\nfunction execOnce(fn) {\n    let used = false;\n    let result;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (!used) {\n            used = true;\n            result = fn(...args);\n        }\n        return result;\n    };\n}\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nconst isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return protocol + \"//\" + hostname + (port ? ':' + port : '');\n}\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nfunction getDisplayName(Component) {\n    return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';\n}\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nfunction normalizeRepeatedSlashes(url) {\n    const urlParts = url.split('?');\n    const urlNoQuery = urlParts[0];\n    return urlNoQuery // first we replace any non-encoded backslashes with forward\n    // then normalize repeated forward slashes\n    .replace(/\\\\/g, '/').replace(/\\/\\/+/g, '/') + (urlParts[1] ? \"?\" + urlParts.slice(1).join('?') : '');\n}\nasync function loadGetInitialProps(App, ctx) {\n    if (true) {\n        var _App_prototype;\n        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {\n            const message = '\"' + getDisplayName(App) + '.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';\n            throw Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || ctx.ctx && ctx.ctx.res;\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = '\"' + getDisplayName(App) + '.getInitialProps()\" should resolve to an object. But found \"' + props + '\" instead.';\n        throw Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (true) {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(\"\" + getDisplayName(App) + \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\");\n        }\n    }\n    return props;\n}\nconst SP = typeof performance !== 'undefined';\nconst ST = SP && [\n    'mark',\n    'measure',\n    'getEntriesByName'\n].every((method)=>typeof performance[method] === 'function');\nclass DecodeError extends Error {\n}\nclass NormalizeError extends Error {\n}\nclass PageNotFoundError extends Error {\n    constructor(page){\n        super();\n        this.code = 'ENOENT';\n        this.name = 'PageNotFoundError';\n        this.message = \"Cannot find module for page: \" + page;\n    }\n}\nclass MissingStaticPage extends Error {\n    constructor(page, message){\n        super();\n        this.message = \"Failed to load static file for page: \" + page + \" \" + message;\n    }\n}\nclass MiddlewareNotFoundError extends Error {\n    constructor(){\n        super();\n        this.code = 'ENOENT';\n        this.message = \"Cannot find the middleware module\";\n    }\n}\nfunction stringifyError(error) {\n    return JSON.stringify({\n        message: error.message,\n        stack: error.stack\n    });\n} //# sourceMappingURL=utils.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/utils/error-once.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"errorOnce\", ({\n    enumerable: true,\n    get: function() {\n        return errorOnce;\n    }\n}));\nlet errorOnce = (_)=>{};\nif (true) {\n    const errors = new Set();\n    errorOnce = (msg)=>{\n        if (!errors.has(msg)) {\n            console.error(msg);\n        }\n        errors.add(msg);\n    };\n} //# sourceMappingURL=error-once.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi91dGlscy9lcnJvci1vbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7NkNBV1NBOzs7ZUFBQUE7OztBQVhULElBQUlBLFlBQVksQ0FBQ0MsS0FBZTtBQUNoQyxJQUFJQyxJQUFvQixFQUFtQjtJQUN6QyxNQUFNRyxTQUFTLElBQUlDO0lBQ25CTixZQUFZLENBQUNPO1FBQ1gsSUFBSSxDQUFDRixPQUFPRyxHQUFHLENBQUNELE1BQU07WUFDcEJFLFFBQVFDLEtBQUssQ0FBQ0g7UUFDaEI7UUFDQUYsT0FBT00sR0FBRyxDQUFDSjtJQUNiO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL3NyYy9zaGFyZWQvbGliL3V0aWxzL2Vycm9yLW9uY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGVycm9yT25jZSA9IChfOiBzdHJpbmcpID0+IHt9XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0PHN0cmluZz4oKVxuICBlcnJvck9uY2UgPSAobXNnOiBzdHJpbmcpID0+IHtcbiAgICBpZiAoIWVycm9ycy5oYXMobXNnKSkge1xuICAgICAgY29uc29sZS5lcnJvcihtc2cpXG4gICAgfVxuICAgIGVycm9ycy5hZGQobXNnKVxuICB9XG59XG5cbmV4cG9ydCB7IGVycm9yT25jZSB9XG4iXSwibmFtZXMiOlsiZXJyb3JPbmNlIiwiXyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImVycm9ycyIsIlNldCIsIm1zZyIsImhhcyIsImNvbnNvbGUiLCJlcnJvciIsImFkZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/_internal/config-context-client-v7VOFo66.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/swr/dist/_internal/config-context-client-v7VOFo66.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ noop),\n/* harmony export */   B: () => (/* binding */ isPromiseLike),\n/* harmony export */   I: () => (/* binding */ IS_REACT_LEGACY),\n/* harmony export */   O: () => (/* binding */ OBJECT),\n/* harmony export */   S: () => (/* binding */ SWRConfigContext),\n/* harmony export */   U: () => (/* binding */ UNDEFINED),\n/* harmony export */   a: () => (/* binding */ isFunction),\n/* harmony export */   b: () => (/* binding */ SWRGlobalState),\n/* harmony export */   c: () => (/* binding */ cache),\n/* harmony export */   d: () => (/* binding */ defaultConfig),\n/* harmony export */   e: () => (/* binding */ isUndefined),\n/* harmony export */   f: () => (/* binding */ mergeConfigs),\n/* harmony export */   g: () => (/* binding */ SWRConfig),\n/* harmony export */   h: () => (/* binding */ initCache),\n/* harmony export */   i: () => (/* binding */ isWindowDefined),\n/* harmony export */   j: () => (/* binding */ mutate),\n/* harmony export */   k: () => (/* binding */ compare),\n/* harmony export */   l: () => (/* binding */ stableHash),\n/* harmony export */   m: () => (/* binding */ mergeObjects),\n/* harmony export */   n: () => (/* binding */ internalMutate),\n/* harmony export */   o: () => (/* binding */ getTimestamp),\n/* harmony export */   p: () => (/* binding */ preset),\n/* harmony export */   q: () => (/* binding */ defaultConfigOptions),\n/* harmony export */   r: () => (/* binding */ IS_SERVER),\n/* harmony export */   s: () => (/* binding */ serialize),\n/* harmony export */   t: () => (/* binding */ rAF),\n/* harmony export */   u: () => (/* binding */ useIsomorphicLayoutEffect),\n/* harmony export */   v: () => (/* binding */ slowConnection),\n/* harmony export */   w: () => (/* binding */ isDocumentDefined),\n/* harmony export */   x: () => (/* binding */ isLegacyDeno),\n/* harmony export */   y: () => (/* binding */ hasRequestAnimationFrame),\n/* harmony export */   z: () => (/* binding */ createCacheHelper)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _events_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/events.mjs\");\n/* harmony import */ var dequal_lite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dequal/lite */ \"(app-pages-browser)/./node_modules/dequal/lite/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ A,B,I,O,S,U,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z auto */ var _s = $RefreshSig$();\n\n\n\n// Global state used to deduplicate requests and store listeners\nconst SWRGlobalState = new WeakMap();\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\nconst mergeObjects = (a, b)=>({\n        ...a,\n        ...b\n    });\nconst isPromiseLike = (x)=>isFunction(x.then);\nconst EMPTY_CACHE = {};\nconst INITIAL_CACHE = {};\nconst STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nconst isWindowDefined = typeof window != STR_UNDEFINED;\nconst isDocumentDefined = typeof document != STR_UNDEFINED;\nconst isLegacyDeno = isWindowDefined && 'Deno' in window;\nconst hasRequestAnimationFrame = ()=>isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\nconst createCacheHelper = (cache, key)=>{\n    const state = SWRGlobalState.get(cache);\n    return [\n        // Getter\n        ()=>!isUndefined(key) && cache.get(key) || EMPTY_CACHE,\n        // Setter\n        (info)=>{\n            if (!isUndefined(key)) {\n                const prev = cache.get(key);\n                // Before writing to the store, we keep the value in the initial cache\n                // if it's not there yet.\n                if (!(key in INITIAL_CACHE)) {\n                    INITIAL_CACHE[key] = prev;\n                }\n                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n            }\n        },\n        // Subscriber\n        state[6],\n        // Get server cache snapshot\n        ()=>{\n            if (!isUndefined(key)) {\n                // If the cache was updated on the client, we return the stored initial value.\n                if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n            }\n            // If we haven't done any client-side updates, we return the current value.\n            return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n        }\n    ];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */ let online = true;\nconst isOnline = ()=>online;\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [\n    window.addEventListener.bind(window),\n    window.removeEventListener.bind(window)\n] : [\n    noop,\n    noop\n];\nconst isVisible = ()=>{\n    const visibilityState = isDocumentDefined && document.visibilityState;\n    return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nconst initFocus = (callback)=>{\n    // focus revalidate\n    if (isDocumentDefined) {\n        document.addEventListener('visibilitychange', callback);\n    }\n    onWindowEvent('focus', callback);\n    return ()=>{\n        if (isDocumentDefined) {\n            document.removeEventListener('visibilitychange', callback);\n        }\n        offWindowEvent('focus', callback);\n    };\n};\nconst initReconnect = (callback)=>{\n    // revalidate on reconnected\n    const onOnline = ()=>{\n        online = true;\n        callback();\n    };\n    // nothing to revalidate, just update the status\n    const onOffline = ()=>{\n        online = false;\n    };\n    onWindowEvent('online', onOnline);\n    onWindowEvent('offline', onOffline);\n    return ()=>{\n        offWindowEvent('online', onOnline);\n        offWindowEvent('offline', onOffline);\n    };\n};\nconst preset = {\n    isOnline,\n    isVisible\n};\nconst defaultConfigOptions = {\n    initFocus,\n    initReconnect\n};\nconst IS_REACT_LEGACY = !react__WEBPACK_IMPORTED_MODULE_0__.useId;\nconst IS_SERVER = !isWindowDefined || isLegacyDeno;\n// Polyfill requestAnimationFrame\nconst rAF = (f)=>hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? react__WEBPACK_IMPORTED_MODULE_0__.useEffect : react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nconst slowConnection = !IS_SERVER && navigatorConnection && ([\n    'slow-2g',\n    '2g'\n].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\nconst isObjectType = (value, type)=>OBJECT.prototype.toString.call(value) === \"[object \".concat(type, \"]\");\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const isDate = isObjectType(arg, 'Date');\n    const isRegex = isObjectType(arg, 'RegExp');\n    const isPlainObject = isObjectType(arg, 'Object');\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && !isRegex) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (Array.isArray(arg)) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (isPlainObject) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n// Global timestamp.\nlet __timestamp = 0;\nconst getTimestamp = ()=>++__timestamp;\nasync function internalMutate() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    const [cache, _key1, _data, _opts] = args;\n    // When passing as a boolean, it's explicitly used to disable/enable\n    // revalidation.\n    const options = mergeObjects({\n        populateCache: true,\n        throwOnError: true\n    }, typeof _opts === 'boolean' ? {\n        revalidate: _opts\n    } : _opts || {});\n    let populateCache = options.populateCache;\n    const rollbackOnErrorOption = options.rollbackOnError;\n    let optimisticData = options.optimisticData;\n    const rollbackOnError = (error)=>{\n        return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n    };\n    const throwOnError = options.throwOnError;\n    // If the second argument is a key filter, return the mutation results for all\n    // filtered keys.\n    if (isFunction(_key1)) {\n        const keyFilter = _key1;\n        const matchedKeys = [];\n        const it = cache.keys();\n        for (const key of it){\n            if (!/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n            }\n        }\n        return Promise.all(matchedKeys.map(mutateByKey));\n    }\n    return mutateByKey(_key1);\n    async function mutateByKey(_k) {\n        // Serialize key\n        const [key] = serialize(_k);\n        if (!key) return;\n        const [get, set] = createCacheHelper(cache, key);\n        const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n        const startRevalidate = ()=>{\n            const revalidators = EVENT_REVALIDATORS[key];\n            const revalidate = isFunction(options.revalidate) ? options.revalidate(get().data, _k) : options.revalidate !== false;\n            if (revalidate) {\n                // Invalidate the key by deleting the concurrent request markers so new\n                // requests will not be deduped.\n                delete FETCH[key];\n                delete PRELOAD[key];\n                if (revalidators && revalidators[0]) {\n                    return revalidators[0](_events_mjs__WEBPACK_IMPORTED_MODULE_2__.MUTATE_EVENT).then(()=>get().data);\n                }\n            }\n            return get().data;\n        };\n        // If there is no new data provided, revalidate the key with current state.\n        if (args.length < 3) {\n            // Revalidate and broadcast state.\n            return startRevalidate();\n        }\n        let data = _data;\n        let error;\n        // Update global timestamps.\n        const beforeMutationTs = getTimestamp();\n        MUTATION[key] = [\n            beforeMutationTs,\n            0\n        ];\n        const hasOptimisticData = !isUndefined(optimisticData);\n        const state = get();\n        // `displayedData` is the current value on screen. It could be the optimistic value\n        // that is going to be overridden by a `committedData`, or get reverted back.\n        // `committedData` is the validated value that comes from a fetch or mutation.\n        const displayedData = state.data;\n        const currentData = state._c;\n        const committedData = isUndefined(currentData) ? displayedData : currentData;\n        // Do optimistic data update.\n        if (hasOptimisticData) {\n            optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n            // When we set optimistic data, backup the current committedData data in `_c`.\n            set({\n                data: optimisticData,\n                _c: committedData\n            });\n        }\n        if (isFunction(data)) {\n            // `data` is a function, call it passing current cache value.\n            try {\n                data = data(committedData);\n            } catch (err) {\n                // If it throws an error synchronously, we shouldn't update the cache.\n                error = err;\n            }\n        }\n        // `data` is a promise/thenable, resolve the final data first.\n        if (data && isPromiseLike(data)) {\n            // This means that the mutation is async, we need to check timestamps to\n            // avoid race conditions.\n            data = await data.catch((err)=>{\n                error = err;\n            });\n            // Check if other mutations have occurred since we've started this mutation.\n            // If there's a race we don't update cache or broadcast the change,\n            // just return the data.\n            if (beforeMutationTs !== MUTATION[key][0]) {\n                if (error) throw error;\n                return data;\n            } else if (error && hasOptimisticData && rollbackOnError(error)) {\n                // Rollback. Always populate the cache in this case but without\n                // transforming the data.\n                populateCache = true;\n                // Reset data to be the latest committed data, and clear the `_c` value.\n                set({\n                    data: committedData,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // If we should write back the cache after request.\n        if (populateCache) {\n            if (!error) {\n                // Transform the result into data.\n                if (isFunction(populateCache)) {\n                    const populateCachedData = populateCache(data, committedData);\n                    set({\n                        data: populateCachedData,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                } else {\n                    // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                    set({\n                        data,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                }\n            }\n        }\n        // Reset the timestamp to mark the mutation has ended.\n        MUTATION[key][1] = getTimestamp();\n        // Update existing SWR Hooks' internal states:\n        Promise.resolve(startRevalidate()).then(()=>{\n            // The mutation and revalidation are ended, we can clear it since the data is\n            // not an optimistic value anymore.\n            set({\n                _c: UNDEFINED\n            });\n        });\n        // Throw error or return data\n        if (error) {\n            if (throwOnError) throw error;\n            return;\n        }\n        return data;\n    }\n}\nconst revalidateAllKeys = (revalidators, type)=>{\n    for(const key in revalidators){\n        if (revalidators[key][0]) revalidators[key][0](type);\n    }\n};\nconst initCache = (provider, options)=>{\n    // The global state for a specific provider will be used to deduplicate\n    // requests and store listeners. As well as a mutate function that is bound to\n    // the cache.\n    // The provider's global state might be already initialized. Let's try to get the\n    // global state associated with the provider first.\n    if (!SWRGlobalState.has(provider)) {\n        const opts = mergeObjects(defaultConfigOptions, options);\n        // If there's no global state bound to the provider, create a new one with the\n        // new mutate function.\n        const EVENT_REVALIDATORS = Object.create(null);\n        const mutate = internalMutate.bind(UNDEFINED, provider);\n        let unmount = noop;\n        const subscriptions = Object.create(null);\n        const subscribe = (key, callback)=>{\n            const subs = subscriptions[key] || [];\n            subscriptions[key] = subs;\n            subs.push(callback);\n            return ()=>subs.splice(subs.indexOf(callback), 1);\n        };\n        const setter = (key, value, prev)=>{\n            provider.set(key, value);\n            const subs = subscriptions[key];\n            if (subs) {\n                for (const fn of subs){\n                    fn(value, prev);\n                }\n            }\n        };\n        const initProvider = ()=>{\n            if (!SWRGlobalState.has(provider)) {\n                // Update the state if it's new, or if the provider has been extended.\n                SWRGlobalState.set(provider, [\n                    EVENT_REVALIDATORS,\n                    Object.create(null),\n                    Object.create(null),\n                    Object.create(null),\n                    mutate,\n                    setter,\n                    subscribe\n                ]);\n                if (!IS_SERVER) {\n                    // When listening to the native events for auto revalidations,\n                    // we intentionally put a delay (setTimeout) here to make sure they are\n                    // fired after immediate JavaScript executions, which can be\n                    // React's state updates.\n                    // This avoids some unnecessary revalidations such as\n                    // https://github.com/vercel/swr/issues/1680.\n                    const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, _events_mjs__WEBPACK_IMPORTED_MODULE_2__.FOCUS_EVENT)));\n                    const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, _events_mjs__WEBPACK_IMPORTED_MODULE_2__.RECONNECT_EVENT)));\n                    unmount = ()=>{\n                        releaseFocus && releaseFocus();\n                        releaseReconnect && releaseReconnect();\n                        // When un-mounting, we need to remove the cache provider from the state\n                        // storage too because it's a side-effect. Otherwise, when re-mounting we\n                        // will not re-register those event listeners.\n                        SWRGlobalState.delete(provider);\n                    };\n                }\n            }\n        };\n        initProvider();\n        // This is a new provider, we need to initialize it and setup DOM events\n        // listeners for `focus` and `reconnect` actions.\n        // We might want to inject an extra layer on top of `provider` in the future,\n        // such as key serialization, auto GC, etc.\n        // For now, it's just a `Map` interface without any modifications.\n        return [\n            provider,\n            mutate,\n            initProvider,\n            unmount\n        ];\n    }\n    return [\n        provider,\n        SWRGlobalState.get(provider)[4]\n    ];\n};\n// error retry\nconst onErrorRetry = (_, __, config, revalidate, opts)=>{\n    const maxRetryCount = config.errorRetryCount;\n    const currentRetryCount = opts.retryCount;\n    // Exponential backoff\n    const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n        return;\n    }\n    setTimeout(revalidate, timeout, opts);\n};\nconst compare = dequal_lite__WEBPACK_IMPORTED_MODULE_1__.dequal;\n// Default cache provider\nconst [cache, mutate] = initCache(new Map());\n// Default config\nconst defaultConfig = mergeObjects({\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n    // providers\n    compare,\n    isPaused: ()=>false,\n    cache,\n    mutate,\n    fallback: {}\n}, preset);\nconst mergeConfigs = (a, b)=>{\n    // Need to create a new object to avoid mutating the original here.\n    const v = mergeObjects(a, b);\n    // If two configs are provided, merge their `use` and `fallback` options.\n    if (b) {\n        const { use: u1, fallback: f1 } = a;\n        const { use: u2, fallback: f2 } = b;\n        if (u1 && u2) {\n            v.use = u1.concat(u2);\n        }\n        if (f1 && f2) {\n            v.fallback = mergeObjects(f1, f2);\n        }\n    }\n    return v;\n};\nconst SWRConfigContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nconst SWRConfig = (props)=>{\n    _s();\n    const { value } = props;\n    const parentConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext);\n    const isFunctionalConfig = isFunction(value);\n    const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"SWRConfig.useMemo[config]\": ()=>isFunctionalConfig ? value(parentConfig) : value\n    }[\"SWRConfig.useMemo[config]\"], [\n        isFunctionalConfig,\n        parentConfig,\n        value\n    ]);\n    // Extend parent context values and middleware.\n    const extendedConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"SWRConfig.useMemo[extendedConfig]\": ()=>isFunctionalConfig ? config : mergeConfigs(parentConfig, config)\n    }[\"SWRConfig.useMemo[extendedConfig]\"], [\n        isFunctionalConfig,\n        parentConfig,\n        config\n    ]);\n    // Should not use the inherited provider.\n    const provider = config && config.provider;\n    // initialize the cache only on first access.\n    const cacheContextRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(UNDEFINED);\n    if (provider && !cacheContextRef.current) {\n        cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n    }\n    const cacheContext = cacheContextRef.current;\n    // Override the cache if a new provider is given.\n    if (cacheContext) {\n        extendedConfig.cache = cacheContext[0];\n        extendedConfig.mutate = cacheContext[1];\n    }\n    // Unsubscribe events.\n    useIsomorphicLayoutEffect({\n        \"SWRConfig.useIsomorphicLayoutEffect\": ()=>{\n            if (cacheContext) {\n                cacheContext[2] && cacheContext[2]();\n                return cacheContext[3];\n            }\n        }\n    }[\"SWRConfig.useIsomorphicLayoutEffect\"], []);\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SWRConfigContext.Provider, mergeObjects(props, {\n        value: extendedConfig\n    }));\n};\n_s(SWRConfig, \"A6qnBUlOKXkyZ5NVwzVYJI6vl14=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\n_c = SWRConfig;\n\nvar _c;\n$RefreshReg$(_c, \"SWRConfig\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/_internal/config-context-client-v7VOFo66.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/_internal/constants.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/swr/dist/_internal/constants.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INFINITE_PREFIX: () => (/* binding */ INFINITE_PREFIX)\n/* harmony export */ });\nconst INFINITE_PREFIX = '$inf$';\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zd3IvZGlzdC9faW50ZXJuYWwvY29uc3RhbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRTJCIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9zd3IvZGlzdC9faW50ZXJuYWwvY29uc3RhbnRzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBJTkZJTklURV9QUkVGSVggPSAnJGluZiQnO1xuXG5leHBvcnQgeyBJTkZJTklURV9QUkVGSVggfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/_internal/constants.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/_internal/events.mjs":
/*!****************************************************!*\
  !*** ./node_modules/swr/dist/_internal/events.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_REVALIDATE_EVENT: () => (/* binding */ ERROR_REVALIDATE_EVENT),\n/* harmony export */   FOCUS_EVENT: () => (/* binding */ FOCUS_EVENT),\n/* harmony export */   MUTATE_EVENT: () => (/* binding */ MUTATE_EVENT),\n/* harmony export */   RECONNECT_EVENT: () => (/* binding */ RECONNECT_EVENT)\n/* harmony export */ });\nconst FOCUS_EVENT = 0;\nconst RECONNECT_EVENT = 1;\nconst MUTATE_EVENT = 2;\nconst ERROR_REVALIDATE_EVENT = 3;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zd3IvZGlzdC9faW50ZXJuYWwvZXZlbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRThFIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9zd3IvZGlzdC9faW50ZXJuYWwvZXZlbnRzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBGT0NVU19FVkVOVCA9IDA7XG5jb25zdCBSRUNPTk5FQ1RfRVZFTlQgPSAxO1xuY29uc3QgTVVUQVRFX0VWRU5UID0gMjtcbmNvbnN0IEVSUk9SX1JFVkFMSURBVEVfRVZFTlQgPSAzO1xuXG5leHBvcnQgeyBFUlJPUl9SRVZBTElEQVRFX0VWRU5ULCBGT0NVU19FVkVOVCwgTVVUQVRFX0VWRU5ULCBSRUNPTk5FQ1RfRVZFTlQgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/_internal/events.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/swr/dist/_internal/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INFINITE_PREFIX: () => (/* reexport safe */ _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.INFINITE_PREFIX),\n/* harmony export */   IS_REACT_LEGACY: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.I),\n/* harmony export */   IS_SERVER: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   OBJECT: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.O),\n/* harmony export */   SWRConfig: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   SWRGlobalState: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   UNDEFINED: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.U),\n/* harmony export */   cache: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   compare: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.k),\n/* harmony export */   createCacheHelper: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.z),\n/* harmony export */   defaultConfig: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   defaultConfigOptions: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.q),\n/* harmony export */   getTimestamp: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.o),\n/* harmony export */   hasRequestAnimationFrame: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.y),\n/* harmony export */   initCache: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   internalMutate: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.n),\n/* harmony export */   isDocumentDefined: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.w),\n/* harmony export */   isFunction: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   isLegacyDeno: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.x),\n/* harmony export */   isPromiseLike: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.B),\n/* harmony export */   isUndefined: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   isWindowDefined: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   mergeConfigs: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   mergeObjects: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.m),\n/* harmony export */   mutate: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.j),\n/* harmony export */   noop: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.A),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   preload: () => (/* binding */ preload),\n/* harmony export */   preset: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   rAF: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.t),\n/* harmony export */   revalidateEvents: () => (/* reexport module object */ _events_mjs__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   serialize: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.s),\n/* harmony export */   slowConnection: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.v),\n/* harmony export */   stableHash: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.l),\n/* harmony export */   subscribeCallback: () => (/* binding */ subscribeCallback),\n/* harmony export */   useIsomorphicLayoutEffect: () => (/* reexport safe */ _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.u),\n/* harmony export */   useSWRConfig: () => (/* binding */ useSWRConfig),\n/* harmony export */   withArgs: () => (/* binding */ withArgs),\n/* harmony export */   withMiddleware: () => (/* binding */ withMiddleware)\n/* harmony export */ });\n/* harmony import */ var _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-context-client-v7VOFo66.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/config-context-client-v7VOFo66.mjs\");\n/* harmony import */ var _events_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./events.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/events.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/constants.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n\n\n\n\n\n\n\n\n// @ts-expect-error\nconst enableDevtools = _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.i && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = react__WEBPACK_IMPORTED_MODULE_3__;\n    }\n};\n\nconst normalize = (args)=>{\n    return (0,_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.a)(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    return (0,_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.m)(_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.d, (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.S));\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = (0,_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.s)(key_);\n    const [, , , PRELOAD] = _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.b.get(_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.c);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = (0,_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.s)(key_);\n            const [, , , PRELOAD] = _config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.b.get(_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.c);\n            if (key.startsWith(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.INFINITE_PREFIX)) {\n                // we want the infinite fetcher to be called.\n                // handling of the PRELOAD cache happens there.\n                return fetcher_(...args);\n            }\n            const req = PRELOAD[key];\n            if ((0,_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.e)(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = (0,_config_context_client_v7VOFo66_mjs__WEBPACK_IMPORTED_MODULE_0__.f)(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zd3IvZGlzdC9faW50ZXJuYWwvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaVA7QUFDb087QUFDcGE7QUFDckI7QUFDc0I7QUFDQTtBQUNSO0FBQ2Q7O0FBRTVCO0FBQ0EsdUJBQXVCLGtFQUFlO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGtDQUFLO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHNFQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsc0VBQVksQ0FBQyxrRUFBYSxFQUFFLGlEQUFVLENBQUMsa0VBQWdCO0FBQ2xFOztBQUVBO0FBQ0EseUJBQXlCLHNFQUFTO0FBQ2xDLDRCQUE0QixrRUFBYyxLQUFLLGtFQUFLO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixzRUFBUztBQUNuQyxvQ0FBb0Msa0VBQWMsS0FBSyxrRUFBSztBQUM1RCwrQkFBK0IsMkRBQWU7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixzRUFBVztBQUMzQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNFQUFZO0FBQ25DO0FBQ0E7QUFDQSxnQkFBZ0IsTUFBTTtBQUN0QjtBQUNBLHVDQUF1QyxJQUFJO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRWdOIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy9zd3IvZGlzdC9faW50ZXJuYWwvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGkgYXMgaXNXaW5kb3dEZWZpbmVkLCBhIGFzIGlzRnVuY3Rpb24sIG0gYXMgbWVyZ2VPYmplY3RzLCBTIGFzIFNXUkNvbmZpZ0NvbnRleHQsIGQgYXMgZGVmYXVsdENvbmZpZywgcyBhcyBzZXJpYWxpemUsIGIgYXMgU1dSR2xvYmFsU3RhdGUsIGMgYXMgY2FjaGUsIGUgYXMgaXNVbmRlZmluZWQsIGYgYXMgbWVyZ2VDb25maWdzIH0gZnJvbSAnLi9jb25maWctY29udGV4dC1jbGllbnQtdjdWT0ZvNjYubWpzJztcbmV4cG9ydCB7IEkgYXMgSVNfUkVBQ1RfTEVHQUNZLCByIGFzIElTX1NFUlZFUiwgTyBhcyBPQkpFQ1QsIGcgYXMgU1dSQ29uZmlnLCBVIGFzIFVOREVGSU5FRCwgayBhcyBjb21wYXJlLCB6IGFzIGNyZWF0ZUNhY2hlSGVscGVyLCBxIGFzIGRlZmF1bHRDb25maWdPcHRpb25zLCBvIGFzIGdldFRpbWVzdGFtcCwgeSBhcyBoYXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUsIGggYXMgaW5pdENhY2hlLCBuIGFzIGludGVybmFsTXV0YXRlLCB3IGFzIGlzRG9jdW1lbnREZWZpbmVkLCB4IGFzIGlzTGVnYWN5RGVubywgQiBhcyBpc1Byb21pc2VMaWtlLCBqIGFzIG11dGF0ZSwgQSBhcyBub29wLCBwIGFzIHByZXNldCwgdCBhcyByQUYsIHYgYXMgc2xvd0Nvbm5lY3Rpb24sIGwgYXMgc3RhYmxlSGFzaCwgdSBhcyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi9jb25maWctY29udGV4dC1jbGllbnQtdjdWT0ZvNjYubWpzJztcbmltcG9ydCAqIGFzIHJldmFsaWRhdGVFdmVudHMgZnJvbSAnLi9ldmVudHMubWpzJztcbmV4cG9ydCB7IHJldmFsaWRhdGVFdmVudHMgfTtcbmltcG9ydCB7IElORklOSVRFX1BSRUZJWCB9IGZyb20gJy4vY29uc3RhbnRzLm1qcyc7XG5leHBvcnQgeyBJTkZJTklURV9QUkVGSVggfSBmcm9tICcuL2NvbnN0YW50cy5tanMnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzLm1qcyc7XG5cbi8vIEB0cy1leHBlY3QtZXJyb3JcbmNvbnN0IGVuYWJsZURldnRvb2xzID0gaXNXaW5kb3dEZWZpbmVkICYmIHdpbmRvdy5fX1NXUl9ERVZUT09MU19VU0VfXztcbmNvbnN0IHVzZSA9IGVuYWJsZURldnRvb2xzID8gd2luZG93Ll9fU1dSX0RFVlRPT0xTX1VTRV9fIDogW107XG5jb25zdCBzZXR1cERldlRvb2xzID0gKCk9PntcbiAgICBpZiAoZW5hYmxlRGV2dG9vbHMpIHtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICB3aW5kb3cuX19TV1JfREVWVE9PTFNfUkVBQ1RfXyA9IFJlYWN0O1xuICAgIH1cbn07XG5cbmNvbnN0IG5vcm1hbGl6ZSA9IChhcmdzKT0+e1xuICAgIHJldHVybiBpc0Z1bmN0aW9uKGFyZ3NbMV0pID8gW1xuICAgICAgICBhcmdzWzBdLFxuICAgICAgICBhcmdzWzFdLFxuICAgICAgICBhcmdzWzJdIHx8IHt9XG4gICAgXSA6IFtcbiAgICAgICAgYXJnc1swXSxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgKGFyZ3NbMV0gPT09IG51bGwgPyBhcmdzWzJdIDogYXJnc1sxXSkgfHwge31cbiAgICBdO1xufTtcblxuY29uc3QgdXNlU1dSQ29uZmlnID0gKCk9PntcbiAgICByZXR1cm4gbWVyZ2VPYmplY3RzKGRlZmF1bHRDb25maWcsIHVzZUNvbnRleHQoU1dSQ29uZmlnQ29udGV4dCkpO1xufTtcblxuY29uc3QgcHJlbG9hZCA9IChrZXlfLCBmZXRjaGVyKT0+e1xuICAgIGNvbnN0IFtrZXksIGZuQXJnXSA9IHNlcmlhbGl6ZShrZXlfKTtcbiAgICBjb25zdCBbLCAsICwgUFJFTE9BRF0gPSBTV1JHbG9iYWxTdGF0ZS5nZXQoY2FjaGUpO1xuICAgIC8vIFByZXZlbnQgcHJlbG9hZCB0byBiZSBjYWxsZWQgbXVsdGlwbGUgdGltZXMgYmVmb3JlIHVzZWQuXG4gICAgaWYgKFBSRUxPQURba2V5XSkgcmV0dXJuIFBSRUxPQURba2V5XTtcbiAgICBjb25zdCByZXEgPSBmZXRjaGVyKGZuQXJnKTtcbiAgICBQUkVMT0FEW2tleV0gPSByZXE7XG4gICAgcmV0dXJuIHJlcTtcbn07XG5jb25zdCBtaWRkbGV3YXJlID0gKHVzZVNXUk5leHQpPT4oa2V5XywgZmV0Y2hlcl8sIGNvbmZpZyk9PntcbiAgICAgICAgLy8gZmV0Y2hlciBtaWdodCBiZSBhIHN5bmMgZnVuY3Rpb24sIHNvIHRoaXMgc2hvdWxkIG5vdCBiZSBhbiBhc3luYyBmdW5jdGlvblxuICAgICAgICBjb25zdCBmZXRjaGVyID0gZmV0Y2hlcl8gJiYgKCguLi5hcmdzKT0+e1xuICAgICAgICAgICAgY29uc3QgW2tleV0gPSBzZXJpYWxpemUoa2V5Xyk7XG4gICAgICAgICAgICBjb25zdCBbLCAsICwgUFJFTE9BRF0gPSBTV1JHbG9iYWxTdGF0ZS5nZXQoY2FjaGUpO1xuICAgICAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKElORklOSVRFX1BSRUZJWCkpIHtcbiAgICAgICAgICAgICAgICAvLyB3ZSB3YW50IHRoZSBpbmZpbml0ZSBmZXRjaGVyIHRvIGJlIGNhbGxlZC5cbiAgICAgICAgICAgICAgICAvLyBoYW5kbGluZyBvZiB0aGUgUFJFTE9BRCBjYWNoZSBoYXBwZW5zIHRoZXJlLlxuICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaGVyXyguLi5hcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHJlcSA9IFBSRUxPQURba2V5XTtcbiAgICAgICAgICAgIGlmIChpc1VuZGVmaW5lZChyZXEpKSByZXR1cm4gZmV0Y2hlcl8oLi4uYXJncyk7XG4gICAgICAgICAgICBkZWxldGUgUFJFTE9BRFtrZXldO1xuICAgICAgICAgICAgcmV0dXJuIHJlcTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB1c2VTV1JOZXh0KGtleV8sIGZldGNoZXIsIGNvbmZpZyk7XG4gICAgfTtcblxuY29uc3QgQlVJTFRfSU5fTUlERExFV0FSRSA9IHVzZS5jb25jYXQobWlkZGxld2FyZSk7XG5cbi8vIEl0J3MgdHJpY2t5IHRvIHBhc3MgZ2VuZXJpYyB0eXBlcyBhcyBwYXJhbWV0ZXJzLCBzbyB3ZSBqdXN0IGRpcmVjdGx5IG92ZXJyaWRlXG4vLyB0aGUgdHlwZXMgaGVyZS5cbmNvbnN0IHdpdGhBcmdzID0gKGhvb2spPT57XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVzZVNXUkFyZ3MoLi4uYXJncykge1xuICAgICAgICAvLyBHZXQgdGhlIGRlZmF1bHQgYW5kIGluaGVyaXRlZCBjb25maWd1cmF0aW9uLlxuICAgICAgICBjb25zdCBmYWxsYmFja0NvbmZpZyA9IHVzZVNXUkNvbmZpZygpO1xuICAgICAgICAvLyBOb3JtYWxpemUgYXJndW1lbnRzLlxuICAgICAgICBjb25zdCBba2V5LCBmbiwgX2NvbmZpZ10gPSBub3JtYWxpemUoYXJncyk7XG4gICAgICAgIC8vIE1lcmdlIGNvbmZpZ3VyYXRpb25zLlxuICAgICAgICBjb25zdCBjb25maWcgPSBtZXJnZUNvbmZpZ3MoZmFsbGJhY2tDb25maWcsIF9jb25maWcpO1xuICAgICAgICAvLyBBcHBseSBtaWRkbGV3YXJlXG4gICAgICAgIGxldCBuZXh0ID0gaG9vaztcbiAgICAgICAgY29uc3QgeyB1c2UgfSA9IGNvbmZpZztcbiAgICAgICAgY29uc3QgbWlkZGxld2FyZSA9ICh1c2UgfHwgW10pLmNvbmNhdChCVUlMVF9JTl9NSURETEVXQVJFKTtcbiAgICAgICAgZm9yKGxldCBpID0gbWlkZGxld2FyZS5sZW5ndGg7IGktLTspe1xuICAgICAgICAgICAgbmV4dCA9IG1pZGRsZXdhcmVbaV0obmV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5leHQoa2V5LCBmbiB8fCBjb25maWcuZmV0Y2hlciB8fCBudWxsLCBjb25maWcpO1xuICAgIH07XG59O1xuXG4vLyBBZGQgYSBjYWxsYmFjayBmdW5jdGlvbiB0byBhIGxpc3Qgb2Yga2V5ZWQgY2FsbGJhY2sgZnVuY3Rpb25zIGFuZCByZXR1cm5cbi8vIHRoZSB1bnN1YnNjcmliZSBmdW5jdGlvbi5cbmNvbnN0IHN1YnNjcmliZUNhbGxiYWNrID0gKGtleSwgY2FsbGJhY2tzLCBjYWxsYmFjayk9PntcbiAgICBjb25zdCBrZXllZFJldmFsaWRhdG9ycyA9IGNhbGxiYWNrc1trZXldIHx8IChjYWxsYmFja3Nba2V5XSA9IFtdKTtcbiAgICBrZXllZFJldmFsaWRhdG9ycy5wdXNoKGNhbGxiYWNrKTtcbiAgICByZXR1cm4gKCk9PntcbiAgICAgICAgY29uc3QgaW5kZXggPSBrZXllZFJldmFsaWRhdG9ycy5pbmRleE9mKGNhbGxiYWNrKTtcbiAgICAgICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgICAgICAgIC8vIE8oMSk6IGZhc3RlciB0aGFuIHNwbGljZVxuICAgICAgICAgICAga2V5ZWRSZXZhbGlkYXRvcnNbaW5kZXhdID0ga2V5ZWRSZXZhbGlkYXRvcnNba2V5ZWRSZXZhbGlkYXRvcnMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICBrZXllZFJldmFsaWRhdG9ycy5wb3AoKTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuXG4vLyBDcmVhdGUgYSBjdXN0b20gaG9vayB3aXRoIGEgbWlkZGxld2FyZVxuY29uc3Qgd2l0aE1pZGRsZXdhcmUgPSAodXNlU1dSLCBtaWRkbGV3YXJlKT0+e1xuICAgIHJldHVybiAoLi4uYXJncyk9PntcbiAgICAgICAgY29uc3QgW2tleSwgZm4sIGNvbmZpZ10gPSBub3JtYWxpemUoYXJncyk7XG4gICAgICAgIGNvbnN0IHVzZXMgPSAoY29uZmlnLnVzZSB8fCBbXSkuY29uY2F0KG1pZGRsZXdhcmUpO1xuICAgICAgICByZXR1cm4gdXNlU1dSKGtleSwgZm4sIHtcbiAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgIHVzZTogdXNlc1xuICAgICAgICB9KTtcbiAgICB9O1xufTtcblxuc2V0dXBEZXZUb29scygpO1xuXG5leHBvcnQgeyBTV1JHbG9iYWxTdGF0ZSwgY2FjaGUsIGRlZmF1bHRDb25maWcsIGlzRnVuY3Rpb24sIGlzVW5kZWZpbmVkLCBpc1dpbmRvd0RlZmluZWQsIG1lcmdlQ29uZmlncywgbWVyZ2VPYmplY3RzLCBub3JtYWxpemUsIHByZWxvYWQsIHNlcmlhbGl6ZSwgc3Vic2NyaWJlQ2FsbGJhY2ssIHVzZVNXUkNvbmZpZywgd2l0aEFyZ3MsIHdpdGhNaWRkbGV3YXJlIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/index/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/swr/dist/index/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SWRConfig: () => (/* binding */ SWRConfig),\n/* harmony export */   \"default\": () => (/* binding */ useSWR),\n/* harmony export */   mutate: () => (/* reexport safe */ _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.j),\n/* harmony export */   preload: () => (/* reexport safe */ _internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.preload),\n/* harmony export */   unstable_serialize: () => (/* binding */ unstable_serialize),\n/* harmony export */   useSWRConfig: () => (/* reexport safe */ _internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.useSWRConfig)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n/* harmony import */ var _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_internal/index.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/config-context-client-v7VOFo66.mjs\");\n/* harmony import */ var _internal_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_internal/index.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/events.mjs\");\n/* harmony import */ var _internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_internal/index.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs\");\n\n\n\n\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\nconst isObjectType = (value, type)=>OBJECT.prototype.toString.call(value) === `[object ${type}]`;\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const isDate = isObjectType(arg, 'Date');\n    const isRegex = isObjectType(arg, 'RegExp');\n    const isPlainObject = isObjectType(arg, 'Object');\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && !isRegex) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (Array.isArray(arg)) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (isPlainObject) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\nconst unstable_serialize = (key)=>serialize(key)[0];\n\n/// <reference types=\"react/experimental\" />\nconst use = react__WEBPACK_IMPORTED_MODULE_0__.use || // This extra generic is to avoid TypeScript mixing up the generic and JSX sytax\n// and emitting an error.\n// We assume that this is only for the `use(thenable)` case, not `use(context)`.\n// https://github.com/facebook/react/blob/aed00dacfb79d17c53218404c52b1c7aa59c4a89/packages/react-server/src/ReactFizzThenable.js#L45\n((thenable)=>{\n    switch(thenable.status){\n        case 'pending':\n            throw thenable;\n        case 'fulfilled':\n            return thenable.value;\n        case 'rejected':\n            throw thenable.reason;\n        default:\n            thenable.status = 'pending';\n            thenable.then((v)=>{\n                thenable.status = 'fulfilled';\n                thenable.value = v;\n            }, (e)=>{\n                thenable.status = 'rejected';\n                thenable.reason = e;\n            });\n            throw thenable;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache, compare, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.b.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.s)(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // Refs to keep the key and config.\n    const keyRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(key);\n    const fetcherRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fetcher);\n    const configRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.z)(cache, key);\n    const stateDependencies = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({}).current;\n    // Resolve the fallback data from either the inline option, or the global provider.\n    // If it's a promise, we simply let React suspend and resolve it for us.\n    const fallback = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(fallbackData) ? (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(config.fallback) ? _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.U : config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            return revalidateIfStale !== false;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.m)(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = (0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(cachedData) ? fallback && (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.B)(fallback) ? use(fallback) : fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(data);\n    const returnedData = keepPreviousData ? (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(cachedData) ? (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(laggyDataRef.current) ? data : laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.I) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if ((0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.o)()\n                ];\n            }\n            // Wait until the ongoing request is done. Deduplication is also\n            // considered here.\n            ;\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.U;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.a)(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](_internal_index_mjs__WEBPACK_IMPORTED_MODULE_4__.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    const boundMutate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.n)(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.U, WITH_DEDUPE);\n        let nextFocusRevalidatedAt = 0;\n        if (getConfig().revalidateOnFocus) {\n            const initNow = Date.now();\n            nextFocusRevalidatedAt = initNow + getConfig().focusThrottleInterval;\n        }\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        const onRevalidate = (type, opts = {})=>{\n            if (type == _internal_index_mjs__WEBPACK_IMPORTED_MODULE_4__.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == _internal_index_mjs__WEBPACK_IMPORTED_MODULE_4__.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == _internal_index_mjs__WEBPACK_IMPORTED_MODULE_4__.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == _internal_index_mjs__WEBPACK_IMPORTED_MODULE_4__.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.subscribeCallback)(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            if ((0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(data) || _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.r) {\n                // Revalidate immediately.\n                softRevalidate();\n            } else {\n                // Delay the revalidate if we have data to return so we won't block\n                // rendering.\n                (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(softRevalidate);\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.a)(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense && (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(data) && key) {\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any fallback data. This causes hydration errors. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.I && _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.r) {\n            throw new Error('Fallback data is required when using Suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        unmountedRef.current = false;\n        const req = PRELOAD[key];\n        if (!(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(req)) {\n            const promise = boundMutate(req);\n            use(promise);\n        }\n        if ((0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(error)) {\n            const promise = revalidate(WITH_DEDUPE);\n            if (!(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(returnedData)) {\n                promise.status = 'fulfilled';\n                promise.value = true;\n            }\n            use(promise);\n        } else {\n            throw error;\n        }\n    }\n    const swrResponse = {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n    return swrResponse;\n};\nconst SWRConfig = _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.O.defineProperty(_internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.g, 'defaultValue', {\n    value: _internal_index_mjs__WEBPACK_IMPORTED_MODULE_2__.d\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error, isLoading } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (isLoading) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.withArgs)(useSWRHandler);\n\n// useSWR\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/index/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/swr/dist/infinite/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/swr/dist/infinite/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useSWRInfinite),\n/* harmony export */   infinite: () => (/* binding */ infinite),\n/* harmony export */   unstable_serialize: () => (/* binding */ unstable_serialize)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _index_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../index/index.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/index/index.mjs\");\n/* harmony import */ var _internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_internal/index.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/config-context-client-v7VOFo66.mjs\");\n/* harmony import */ var _internal_constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_internal/constants.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/constants.mjs\");\n/* harmony import */ var _internal_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_internal/index.mjs */ \"(app-pages-browser)/./node_modules/swr/dist/_internal/index.mjs\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\");\n\n\n\n\n\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\nconst isObjectType = (value, type)=>OBJECT.prototype.toString.call(value) === `[object ${type}]`;\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const isDate = isObjectType(arg, 'Date');\n    const isRegex = isObjectType(arg, 'RegExp');\n    const isPlainObject = isObjectType(arg, 'Object');\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && !isRegex) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (Array.isArray(arg)) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (isPlainObject) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\nconst getFirstPageKey = (getKey)=>{\n    return serialize(getKey ? getKey(0, null) : null)[0];\n};\nconst unstable_serialize = (getKey)=>{\n    return _internal_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.INFINITE_PREFIX + getFirstPageKey(getKey);\n};\n\n// We have to several type castings here because `useSWRInfinite` is a special\n// hook where `key` and return type are not like the normal `useSWR` types.\nconst EMPTY_PROMISE = Promise.resolve();\nconst infinite = (useSWRNext)=>(getKey, fn, config)=>{\n        const didMountRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n        const { cache: cache$1, initialSize = 1, revalidateAll = false, persistSize = false, revalidateFirstPage = true, revalidateOnMount = false, parallel = false } = config;\n        const [, , , PRELOAD] = _internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.b.get(_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.c);\n        // The serialized key of the first page. This key will be used to store\n        // metadata of this SWR infinite hook.\n        let infiniteKey;\n        try {\n            infiniteKey = getFirstPageKey(getKey);\n            if (infiniteKey) infiniteKey = _internal_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.INFINITE_PREFIX + infiniteKey;\n        } catch (err) {\n        // Not ready yet.\n        }\n        const [get, set, subscribeCache] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.z)(cache$1, infiniteKey);\n        const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n            const size = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.e)(get()._l) ? initialSize : get()._l;\n            return size;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            cache$1,\n            infiniteKey,\n            initialSize\n        ]);\n        (0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((callback)=>{\n            if (infiniteKey) return subscribeCache(infiniteKey, ()=>{\n                callback();\n            });\n            return ()=>{};\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            cache$1,\n            infiniteKey\n        ]), getSnapshot, getSnapshot);\n        const resolvePageSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n            const cachedPageSize = get()._l;\n            return (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.e)(cachedPageSize) ? initialSize : cachedPageSize;\n        // `cache` isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            infiniteKey,\n            initialSize\n        ]);\n        // keep the last page size to restore it with the persistSize option\n        const lastPageSizeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(resolvePageSize());\n        // When the page key changes, we reset the page size if it's not persisted\n        (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.u)(()=>{\n            if (!didMountRef.current) {\n                didMountRef.current = true;\n                return;\n            }\n            if (infiniteKey) {\n                // If the key has been changed, we keep the current page size if persistSize is enabled\n                // Otherwise, we reset the page size to cached pageSize\n                set({\n                    _l: persistSize ? lastPageSizeRef.current : resolvePageSize()\n                });\n            }\n        // `initialSize` isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [\n            infiniteKey,\n            cache$1\n        ]);\n        // Needs to check didMountRef during mounting, not in the fetcher\n        const shouldRevalidateOnMount = revalidateOnMount && !didMountRef.current;\n        // Actual SWR hook to load all pages in one fetcher.\n        const swr = useSWRNext(infiniteKey, async (key)=>{\n            // get the revalidate context\n            const forceRevalidateAll = get()._i;\n            const shouldRevalidatePage = get()._r;\n            set({\n                _r: _internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.U\n            });\n            // return an array of page data\n            const data = [];\n            const pageSize = resolvePageSize();\n            const [getCache] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.z)(cache$1, key);\n            const cacheData = getCache().data;\n            const revalidators = [];\n            let previousPageData = null;\n            for(let i = 0; i < pageSize; ++i){\n                const [pageKey, pageArg] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.s)(getKey(i, parallel ? null : previousPageData));\n                if (!pageKey) {\n                    break;\n                }\n                const [getSWRCache, setSWRCache] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.z)(cache$1, pageKey);\n                // Get the cached page data.\n                let pageData = getSWRCache().data;\n                // should fetch (or revalidate) if:\n                // - `revalidateAll` is enabled\n                // - `mutate()` called\n                // - the cache is missing\n                // - it's the first page and it's not the initial render\n                // - `revalidateOnMount` is enabled and it's on mount\n                // - cache for that page has changed\n                const shouldFetchPage = revalidateAll || forceRevalidateAll || (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.e)(pageData) || revalidateFirstPage && !i && !(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.e)(cacheData) || shouldRevalidateOnMount || cacheData && !(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.e)(cacheData[i]) && !config.compare(cacheData[i], pageData);\n                if (fn && (typeof shouldRevalidatePage === 'function' ? shouldRevalidatePage(pageData, pageArg) : shouldFetchPage)) {\n                    const revalidate = async ()=>{\n                        const hasPreloadedRequest = pageKey in PRELOAD;\n                        if (!hasPreloadedRequest) {\n                            pageData = await fn(pageArg);\n                        } else {\n                            const req = PRELOAD[pageKey];\n                            // delete the preload cache key before resolving it\n                            // in case there's an error\n                            delete PRELOAD[pageKey];\n                            // get the page data from the preload cache\n                            pageData = await req;\n                        }\n                        setSWRCache({\n                            data: pageData,\n                            _k: pageArg\n                        });\n                        data[i] = pageData;\n                    };\n                    if (parallel) {\n                        revalidators.push(revalidate);\n                    } else {\n                        await revalidate();\n                    }\n                } else {\n                    data[i] = pageData;\n                }\n                if (!parallel) {\n                    previousPageData = pageData;\n                }\n            }\n            // flush all revalidateions in parallel\n            if (parallel) {\n                await Promise.all(revalidators.map((r)=>r()));\n            }\n            // once we executed the data fetching based on the context, clear the context\n            set({\n                _i: _internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.U\n            });\n            // return the data\n            return data;\n        }, config);\n        const mutate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(// eslint-disable-next-line func-names\n        function(data, opts) {\n            // When passing as a boolean, it's explicitly used to disable/enable\n            // revalidation.\n            const options = typeof opts === 'boolean' ? {\n                revalidate: opts\n            } : opts || {};\n            // Default to true.\n            const shouldRevalidate = options.revalidate !== false;\n            // It is possible that the key is still falsy.\n            if (!infiniteKey) return EMPTY_PROMISE;\n            if (shouldRevalidate) {\n                if (!(0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.e)(data)) {\n                    // We only revalidate the pages that are changed\n                    set({\n                        _i: false,\n                        _r: options.revalidate\n                    });\n                } else {\n                    // Calling `mutate()`, we revalidate all pages\n                    set({\n                        _i: true,\n                        _r: options.revalidate\n                    });\n                }\n            }\n            return arguments.length ? swr.mutate(data, {\n                ...options,\n                revalidate: shouldRevalidate\n            }) : swr.mutate();\n        }, // swr.mutate is always the same reference\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            infiniteKey,\n            cache$1\n        ]);\n        // Extend the SWR API\n        const setSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((arg)=>{\n            // It is possible that the key is still falsy.\n            if (!infiniteKey) return EMPTY_PROMISE;\n            const [, changeSize] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.z)(cache$1, infiniteKey);\n            let size;\n            if ((0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.a)(arg)) {\n                size = arg(resolvePageSize());\n            } else if (typeof arg == 'number') {\n                size = arg;\n            }\n            if (typeof size != 'number') return EMPTY_PROMISE;\n            changeSize({\n                _l: size\n            });\n            lastPageSizeRef.current = size;\n            // Calculate the page data after the size change.\n            const data = [];\n            const [getInfiniteCache] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.z)(cache$1, infiniteKey);\n            let previousPageData = null;\n            for(let i = 0; i < size; ++i){\n                const [pageKey] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.s)(getKey(i, previousPageData));\n                const [getCache] = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.z)(cache$1, pageKey);\n                // Get the cached page data.\n                const pageData = pageKey ? getCache().data : _internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.U;\n                // Call `mutate` with infinte cache data if we can't get it from the page cache.\n                if ((0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_3__.e)(pageData)) {\n                    return mutate(getInfiniteCache().data);\n                }\n                data.push(pageData);\n                previousPageData = pageData;\n            }\n            return mutate(data);\n        }, // exclude getKey from the dependencies, which isn't allowed to change during the lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            infiniteKey,\n            cache$1,\n            mutate,\n            resolvePageSize\n        ]);\n        // Use getter functions to avoid unnecessary re-renders caused by triggering\n        // all the getters of the returned swr object.\n        return {\n            size: resolvePageSize(),\n            setSize,\n            mutate,\n            get data () {\n                return swr.data;\n            },\n            get error () {\n                return swr.error;\n            },\n            get isValidating () {\n                return swr.isValidating;\n            },\n            get isLoading () {\n                return swr.isLoading;\n            }\n        };\n    };\nconst useSWRInfinite = (0,_internal_index_mjs__WEBPACK_IMPORTED_MODULE_4__.withMiddleware)(_index_index_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"], infinite);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/swr/dist/infinite/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ index)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar index = react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect ;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtaXNvbW9ycGhpYy1sYXlvdXQtZWZmZWN0L2Rpc3QvdXNlLWlzb21vcnBoaWMtbGF5b3V0LWVmZmVjdC5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0M7O0FBRXhDLFlBQVksa0RBQWU7O0FBRUMiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL3VzZS1pc29tb3JwaGljLWxheW91dC1lZmZlY3QvZGlzdC91c2UtaXNvbW9ycGhpYy1sYXlvdXQtZWZmZWN0LmJyb3dzZXIuZXNtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxudmFyIGluZGV4ID0gdXNlTGF5b3V0RWZmZWN0IDtcblxuZXhwb3J0IHsgaW5kZXggYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5kZXZlbG9wbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7QUFDYixLQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxZQUFZO0FBQ3BFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxZQUFZO0FBQ3BFO0FBQ0EsMERBQTBELFlBQVk7QUFDdEUsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsbUZBQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDRCQUE0QjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0uZGV2ZWxvcG1lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5kZXZlbG9wbWVudC5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgJiZcbiAgKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBpcyh4LCB5KSB7XG4gICAgICByZXR1cm4gKHggPT09IHkgJiYgKDAgIT09IHggfHwgMSAvIHggPT09IDEgLyB5KSkgfHwgKHggIT09IHggJiYgeSAhPT0geSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVzZVN5bmNFeHRlcm5hbFN0b3JlJDIoc3Vic2NyaWJlLCBnZXRTbmFwc2hvdCkge1xuICAgICAgZGlkV2Fybk9sZDE4QWxwaGEgfHxcbiAgICAgICAgdm9pZCAwID09PSBSZWFjdC5zdGFydFRyYW5zaXRpb24gfHxcbiAgICAgICAgKChkaWRXYXJuT2xkMThBbHBoYSA9ICEwKSxcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBcIllvdSBhcmUgdXNpbmcgYW4gb3V0ZGF0ZWQsIHByZS1yZWxlYXNlIGFscGhhIG9mIFJlYWN0IDE4IHRoYXQgZG9lcyBub3Qgc3VwcG9ydCB1c2VTeW5jRXh0ZXJuYWxTdG9yZS4gVGhlIHVzZS1zeW5jLWV4dGVybmFsLXN0b3JlIHNoaW0gd2lsbCBub3Qgd29yayBjb3JyZWN0bHkuIFVwZ3JhZGUgdG8gYSBuZXdlciBwcmUtcmVsZWFzZS5cIlxuICAgICAgICApKTtcbiAgICAgIHZhciB2YWx1ZSA9IGdldFNuYXBzaG90KCk7XG4gICAgICBpZiAoIWRpZFdhcm5VbmNhY2hlZEdldFNuYXBzaG90KSB7XG4gICAgICAgIHZhciBjYWNoZWRWYWx1ZSA9IGdldFNuYXBzaG90KCk7XG4gICAgICAgIG9iamVjdElzKHZhbHVlLCBjYWNoZWRWYWx1ZSkgfHxcbiAgICAgICAgICAoY29uc29sZS5lcnJvcihcbiAgICAgICAgICAgIFwiVGhlIHJlc3VsdCBvZiBnZXRTbmFwc2hvdCBzaG91bGQgYmUgY2FjaGVkIHRvIGF2b2lkIGFuIGluZmluaXRlIGxvb3BcIlxuICAgICAgICAgICksXG4gICAgICAgICAgKGRpZFdhcm5VbmNhY2hlZEdldFNuYXBzaG90ID0gITApKTtcbiAgICAgIH1cbiAgICAgIGNhY2hlZFZhbHVlID0gdXNlU3RhdGUoe1xuICAgICAgICBpbnN0OiB7IHZhbHVlOiB2YWx1ZSwgZ2V0U25hcHNob3Q6IGdldFNuYXBzaG90IH1cbiAgICAgIH0pO1xuICAgICAgdmFyIGluc3QgPSBjYWNoZWRWYWx1ZVswXS5pbnN0LFxuICAgICAgICBmb3JjZVVwZGF0ZSA9IGNhY2hlZFZhbHVlWzFdO1xuICAgICAgdXNlTGF5b3V0RWZmZWN0KFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaW5zdC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgIGluc3QuZ2V0U25hcHNob3QgPSBnZXRTbmFwc2hvdDtcbiAgICAgICAgICBjaGVja0lmU25hcHNob3RDaGFuZ2VkKGluc3QpICYmIGZvcmNlVXBkYXRlKHsgaW5zdDogaW5zdCB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgW3N1YnNjcmliZSwgdmFsdWUsIGdldFNuYXBzaG90XVxuICAgICAgKTtcbiAgICAgIHVzZUVmZmVjdChcbiAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkgJiYgZm9yY2VVcGRhdGUoeyBpbnN0OiBpbnN0IH0pO1xuICAgICAgICAgIHJldHVybiBzdWJzY3JpYmUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY2hlY2tJZlNuYXBzaG90Q2hhbmdlZChpbnN0KSAmJiBmb3JjZVVwZGF0ZSh7IGluc3Q6IGluc3QgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIFtzdWJzY3JpYmVdXG4gICAgICApO1xuICAgICAgdXNlRGVidWdWYWx1ZSh2YWx1ZSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkge1xuICAgICAgdmFyIGxhdGVzdEdldFNuYXBzaG90ID0gaW5zdC5nZXRTbmFwc2hvdDtcbiAgICAgIGluc3QgPSBpbnN0LnZhbHVlO1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG5leHRWYWx1ZSA9IGxhdGVzdEdldFNuYXBzaG90KCk7XG4gICAgICAgIHJldHVybiAhb2JqZWN0SXMoaW5zdCwgbmV4dFZhbHVlKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiAhMDtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdXNlU3luY0V4dGVybmFsU3RvcmUkMShzdWJzY3JpYmUsIGdldFNuYXBzaG90KSB7XG4gICAgICByZXR1cm4gZ2V0U25hcHNob3QoKTtcbiAgICB9XG4gICAgXCJ1bmRlZmluZWRcIiAhPT0gdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAmJlxuICAgICAgXCJmdW5jdGlvblwiID09PVxuICAgICAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdGFydCAmJlxuICAgICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdGFydChFcnJvcigpKTtcbiAgICB2YXIgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIiksXG4gICAgICBvYmplY3RJcyA9IFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIE9iamVjdC5pcyA/IE9iamVjdC5pcyA6IGlzLFxuICAgICAgdXNlU3RhdGUgPSBSZWFjdC51c2VTdGF0ZSxcbiAgICAgIHVzZUVmZmVjdCA9IFJlYWN0LnVzZUVmZmVjdCxcbiAgICAgIHVzZUxheW91dEVmZmVjdCA9IFJlYWN0LnVzZUxheW91dEVmZmVjdCxcbiAgICAgIHVzZURlYnVnVmFsdWUgPSBSZWFjdC51c2VEZWJ1Z1ZhbHVlLFxuICAgICAgZGlkV2Fybk9sZDE4QWxwaGEgPSAhMSxcbiAgICAgIGRpZFdhcm5VbmNhY2hlZEdldFNuYXBzaG90ID0gITEsXG4gICAgICBzaGltID1cbiAgICAgICAgXCJ1bmRlZmluZWRcIiA9PT0gdHlwZW9mIHdpbmRvdyB8fFxuICAgICAgICBcInVuZGVmaW5lZFwiID09PSB0eXBlb2Ygd2luZG93LmRvY3VtZW50IHx8XG4gICAgICAgIFwidW5kZWZpbmVkXCIgPT09IHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudFxuICAgICAgICAgID8gdXNlU3luY0V4dGVybmFsU3RvcmUkMVxuICAgICAgICAgIDogdXNlU3luY0V4dGVybmFsU3RvcmUkMjtcbiAgICBleHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlID1cbiAgICAgIHZvaWQgMCAhPT0gUmVhY3QudXNlU3luY0V4dGVybmFsU3RvcmUgPyBSZWFjdC51c2VTeW5jRXh0ZXJuYWxTdG9yZSA6IHNoaW07XG4gICAgXCJ1bmRlZmluZWRcIiAhPT0gdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAmJlxuICAgICAgXCJmdW5jdGlvblwiID09PVxuICAgICAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdG9wICYmXG4gICAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0b3AoRXJyb3IoKSk7XG4gIH0pKCk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      shim = __webpack_require__(/*! use-sync-external-store/shim */ \"(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useSyncExternalStore = shim.useSyncExternalStore,\n      useRef = React.useRef,\n      useEffect = React.useEffect,\n      useMemo = React.useMemo,\n      useDebugValue = React.useDebugValue;\n    exports.useSyncExternalStoreWithSelector = function (\n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      selector,\n      isEqual\n    ) {\n      var instRef = useRef(null);\n      if (null === instRef.current) {\n        var inst = { hasValue: !1, value: null };\n        instRef.current = inst;\n      } else inst = instRef.current;\n      instRef = useMemo(\n        function () {\n          function memoizedSelector(nextSnapshot) {\n            if (!hasMemo) {\n              hasMemo = !0;\n              memoizedSnapshot = nextSnapshot;\n              nextSnapshot = selector(nextSnapshot);\n              if (void 0 !== isEqual && inst.hasValue) {\n                var currentSelection = inst.value;\n                if (isEqual(currentSelection, nextSnapshot))\n                  return (memoizedSelection = currentSelection);\n              }\n              return (memoizedSelection = nextSnapshot);\n            }\n            currentSelection = memoizedSelection;\n            if (objectIs(memoizedSnapshot, nextSnapshot))\n              return currentSelection;\n            var nextSelection = selector(nextSnapshot);\n            if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n              return (memoizedSnapshot = nextSnapshot), currentSelection;\n            memoizedSnapshot = nextSnapshot;\n            return (memoizedSelection = nextSelection);\n          }\n          var hasMemo = !1,\n            memoizedSnapshot,\n            memoizedSelection,\n            maybeGetServerSnapshot =\n              void 0 === getServerSnapshot ? null : getServerSnapshot;\n          return [\n            function () {\n              return memoizedSelector(getSnapshot());\n            },\n            null === maybeGetServerSnapshot\n              ? void 0\n              : function () {\n                  return memoizedSelector(maybeGetServerSnapshot());\n                }\n          ];\n        },\n        [getSnapshot, getServerSnapshot, selector, isEqual]\n      );\n      var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n      useEffect(\n        function () {\n          inst.hasValue = !0;\n          inst.value = value;\n        },\n        [value]\n      );\n      useDebugValue(value);\n      return value;\n    };\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTtBQUNiLEtBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBTztBQUMvQixhQUFhLG1CQUFPLENBQUMsOEdBQThCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksd0NBQXdDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUciLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IuZGV2ZWxvcG1lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViAmJlxuICAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgICAgIHJldHVybiAoeCA9PT0geSAmJiAoMCAhPT0geCB8fCAxIC8geCA9PT0gMSAvIHkpKSB8fCAoeCAhPT0geCAmJiB5ICE9PSB5KTtcbiAgICB9XG4gICAgXCJ1bmRlZmluZWRcIiAhPT0gdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAmJlxuICAgICAgXCJmdW5jdGlvblwiID09PVxuICAgICAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdGFydCAmJlxuICAgICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdGFydChFcnJvcigpKTtcbiAgICB2YXIgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIiksXG4gICAgICBzaGltID0gcmVxdWlyZShcInVzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW1cIiksXG4gICAgICBvYmplY3RJcyA9IFwiZnVuY3Rpb25cIiA9PT0gdHlwZW9mIE9iamVjdC5pcyA/IE9iamVjdC5pcyA6IGlzLFxuICAgICAgdXNlU3luY0V4dGVybmFsU3RvcmUgPSBzaGltLnVzZVN5bmNFeHRlcm5hbFN0b3JlLFxuICAgICAgdXNlUmVmID0gUmVhY3QudXNlUmVmLFxuICAgICAgdXNlRWZmZWN0ID0gUmVhY3QudXNlRWZmZWN0LFxuICAgICAgdXNlTWVtbyA9IFJlYWN0LnVzZU1lbW8sXG4gICAgICB1c2VEZWJ1Z1ZhbHVlID0gUmVhY3QudXNlRGVidWdWYWx1ZTtcbiAgICBleHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yID0gZnVuY3Rpb24gKFxuICAgICAgc3Vic2NyaWJlLFxuICAgICAgZ2V0U25hcHNob3QsXG4gICAgICBnZXRTZXJ2ZXJTbmFwc2hvdCxcbiAgICAgIHNlbGVjdG9yLFxuICAgICAgaXNFcXVhbFxuICAgICkge1xuICAgICAgdmFyIGluc3RSZWYgPSB1c2VSZWYobnVsbCk7XG4gICAgICBpZiAobnVsbCA9PT0gaW5zdFJlZi5jdXJyZW50KSB7XG4gICAgICAgIHZhciBpbnN0ID0geyBoYXNWYWx1ZTogITEsIHZhbHVlOiBudWxsIH07XG4gICAgICAgIGluc3RSZWYuY3VycmVudCA9IGluc3Q7XG4gICAgICB9IGVsc2UgaW5zdCA9IGluc3RSZWYuY3VycmVudDtcbiAgICAgIGluc3RSZWYgPSB1c2VNZW1vKFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgZnVuY3Rpb24gbWVtb2l6ZWRTZWxlY3RvcihuZXh0U25hcHNob3QpIHtcbiAgICAgICAgICAgIGlmICghaGFzTWVtbykge1xuICAgICAgICAgICAgICBoYXNNZW1vID0gITA7XG4gICAgICAgICAgICAgIG1lbW9pemVkU25hcHNob3QgPSBuZXh0U25hcHNob3Q7XG4gICAgICAgICAgICAgIG5leHRTbmFwc2hvdCA9IHNlbGVjdG9yKG5leHRTbmFwc2hvdCk7XG4gICAgICAgICAgICAgIGlmICh2b2lkIDAgIT09IGlzRXF1YWwgJiYgaW5zdC5oYXNWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50U2VsZWN0aW9uID0gaW5zdC52YWx1ZTtcbiAgICAgICAgICAgICAgICBpZiAoaXNFcXVhbChjdXJyZW50U2VsZWN0aW9uLCBuZXh0U25hcHNob3QpKVxuICAgICAgICAgICAgICAgICAgcmV0dXJuIChtZW1vaXplZFNlbGVjdGlvbiA9IGN1cnJlbnRTZWxlY3Rpb24pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiAobWVtb2l6ZWRTZWxlY3Rpb24gPSBuZXh0U25hcHNob3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3VycmVudFNlbGVjdGlvbiA9IG1lbW9pemVkU2VsZWN0aW9uO1xuICAgICAgICAgICAgaWYgKG9iamVjdElzKG1lbW9pemVkU25hcHNob3QsIG5leHRTbmFwc2hvdCkpXG4gICAgICAgICAgICAgIHJldHVybiBjdXJyZW50U2VsZWN0aW9uO1xuICAgICAgICAgICAgdmFyIG5leHRTZWxlY3Rpb24gPSBzZWxlY3RvcihuZXh0U25hcHNob3QpO1xuICAgICAgICAgICAgaWYgKHZvaWQgMCAhPT0gaXNFcXVhbCAmJiBpc0VxdWFsKGN1cnJlbnRTZWxlY3Rpb24sIG5leHRTZWxlY3Rpb24pKVxuICAgICAgICAgICAgICByZXR1cm4gKG1lbW9pemVkU25hcHNob3QgPSBuZXh0U25hcHNob3QpLCBjdXJyZW50U2VsZWN0aW9uO1xuICAgICAgICAgICAgbWVtb2l6ZWRTbmFwc2hvdCA9IG5leHRTbmFwc2hvdDtcbiAgICAgICAgICAgIHJldHVybiAobWVtb2l6ZWRTZWxlY3Rpb24gPSBuZXh0U2VsZWN0aW9uKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGhhc01lbW8gPSAhMSxcbiAgICAgICAgICAgIG1lbW9pemVkU25hcHNob3QsXG4gICAgICAgICAgICBtZW1vaXplZFNlbGVjdGlvbixcbiAgICAgICAgICAgIG1heWJlR2V0U2VydmVyU25hcHNob3QgPVxuICAgICAgICAgICAgICB2b2lkIDAgPT09IGdldFNlcnZlclNuYXBzaG90ID8gbnVsbCA6IGdldFNlcnZlclNuYXBzaG90O1xuICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBtZW1vaXplZFNlbGVjdG9yKGdldFNuYXBzaG90KCkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG51bGwgPT09IG1heWJlR2V0U2VydmVyU25hcHNob3RcbiAgICAgICAgICAgICAgPyB2b2lkIDBcbiAgICAgICAgICAgICAgOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbWVtb2l6ZWRTZWxlY3RvcihtYXliZUdldFNlcnZlclNuYXBzaG90KCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICBdO1xuICAgICAgICB9LFxuICAgICAgICBbZ2V0U25hcHNob3QsIGdldFNlcnZlclNuYXBzaG90LCBzZWxlY3RvciwgaXNFcXVhbF1cbiAgICAgICk7XG4gICAgICB2YXIgdmFsdWUgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShzdWJzY3JpYmUsIGluc3RSZWZbMF0sIGluc3RSZWZbMV0pO1xuICAgICAgdXNlRWZmZWN0KFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaW5zdC5oYXNWYWx1ZSA9ICEwO1xuICAgICAgICAgIGluc3QudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgW3ZhbHVlXVxuICAgICAgKTtcbiAgICAgIHVzZURlYnVnVmFsdWUodmFsdWUpO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgXCJ1bmRlZmluZWRcIiAhPT0gdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAmJlxuICAgICAgXCJmdW5jdGlvblwiID09PVxuICAgICAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdG9wICYmXG4gICAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0b3AoRXJyb3IoKSk7XG4gIH0pKCk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js":
/*!************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw0TUFBOEU7QUFDaEYiLCJzb3VyY2VzIjpbIi9ob21lL2VtcHR5L0NvZGUvVllTL3Z5cy1hcHAvbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/with-selector.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim/with-selector.development.js */ \"(app-pages-browser)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHdPQUE0RjtBQUM5RiIsInNvdXJjZXMiOlsiL2hvbWUvZW1wdHkvQ29kZS9WWVMvdnlzLWFwcC9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-sync-external-store/shim/with-selector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/xstate/actors/dist/xstate-actors.development.esm.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmptyActor: () => (/* binding */ createEmptyActor),\n/* harmony export */   fromCallback: () => (/* binding */ fromCallback),\n/* harmony export */   fromEventObservable: () => (/* binding */ fromEventObservable),\n/* harmony export */   fromObservable: () => (/* binding */ fromObservable),\n/* harmony export */   fromPromise: () => (/* binding */ fromPromise),\n/* harmony export */   fromTransition: () => (/* binding */ fromTransition)\n/* harmony export */ });\n/* harmony import */ var _dist_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dist/raise-59549771.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-59549771.development.esm.js\");\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\n\n/**\n * Represents an actor created by `fromTransition`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromTransition,\n *   createActor,\n *   type AnyActorSystem\n * } from 'xstate';\n *\n * //* The actor's stored context.\n * type Context = {\n *   // The current count.\n *   count: number;\n *   // The amount to increase `count` by.\n *   step: number;\n * };\n * // The events the actor receives.\n * type Event = { type: 'increment' };\n * // The actor's input.\n * type Input = { step?: number };\n *\n * // Actor logic that increments `count` by `step` when it receives an event of\n * // type `increment`.\n * const logic = fromTransition<Context, Event, AnyActorSystem, Input>(\n *   (state, event, actorScope) => {\n *     actorScope.self;\n *     //         ^? TransitionActorRef<Context, Event>\n *\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + state.step\n *       };\n *     }\n *     return state;\n *   },\n *   ({ input, self }) => {\n *     self;\n *     // ^? TransitionActorRef<Context, Event>\n *\n *     return {\n *       count: 0,\n *       step: input.step ?? 1\n *     };\n *   }\n * );\n *\n * const actor = createActor(logic, { input: { step: 10 } });\n * //    ^? TransitionActorRef<Context, Event>\n * ```\n *\n * @see {@link fromTransition}\n */\n\n/**\n * Returns actor logic given a transition function and its initial state.\n *\n * A “transition function” is a function that takes the current `state` and\n * received `event` object as arguments, and returns the next state, similar to\n * a reducer.\n *\n * Actors created from transition logic (“transition actors”) can:\n *\n * - Receive events\n * - Emit snapshots of its state\n *\n * The transition function’s `state` is used as its transition actor’s\n * `context`.\n *\n * Note that the \"state\" for a transition function is provided by the initial\n * state argument, and is not the same as the State object of an actor or a\n * state within a machine configuration.\n *\n * @example\n *\n * ```ts\n * const transitionLogic = fromTransition(\n *   (state, event) => {\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + 1\n *       };\n *     }\n *     return state;\n *   },\n *   { count: 0 }\n * );\n *\n * const transitionActor = createActor(transitionLogic);\n * transitionActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * transitionActor.start();\n * // => {\n * //   status: 'active',\n * //   context: { count: 0 },\n * //   ...\n * // }\n *\n * transitionActor.send({ type: 'increment' });\n * // => {\n * //   status: 'active',\n * //   context: { count: 1 },\n * //   ...\n * // }\n * ```\n *\n * @param transition The transition function used to describe the transition\n *   logic. It should return the next state given the current state and event.\n *   It receives the following arguments:\n *\n *   - `state` - the current state.\n *   - `event` - the received event.\n *   - `actorScope` - the actor scope object, with properties like `self` and\n *       `system`.\n *\n * @param initialContext The initial state of the transition function, either an\n *   object representing the state, or a function which returns a state object.\n *   If a function, it will receive as its only argument an object with the\n *   following properties:\n *\n *   - `input` - the `input` provided to its parent transition actor.\n *   - `self` - a reference to its parent transition actor.\n *\n * @returns Actor logic\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromTransition(transition, initialContext) {\n  return {\n    config: transition,\n    transition: (snapshot, event, actorScope) => {\n      return {\n        ...snapshot,\n        context: transition(snapshot.context, event, actorScope)\n      };\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: typeof initialContext === 'function' ? initialContext({\n          input\n        }) : initialContext\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n}\n\nconst instanceStates = /* #__PURE__ */new WeakMap();\n\n/**\n * Represents an actor created by `fromCallback`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromCallback, createActor } from 'xstate';\n *\n * // The events the actor receives.\n * type Event = { type: 'someEvent' };\n * // The actor's input.\n * type Input = { name: string };\n *\n * // Actor logic that logs whenever it receives an event of type `someEvent`.\n * const logic = fromCallback<Event, Input>(({ self, input, receive }) => {\n *   self;\n *   // ^? CallbackActorRef<Event, Input>\n *\n *   receive((event) => {\n *     if (event.type === 'someEvent') {\n *       console.log(`${input.name}: received \"someEvent\" event`);\n *       // logs 'myActor: received \"someEvent\" event'\n *     }\n *   });\n * });\n *\n * const actor = createActor(logic, { input: { name: 'myActor' } });\n * //    ^? CallbackActorRef<Event, Input>\n * ```\n *\n * @see {@link fromCallback}\n */\n\n/**\n * An actor logic creator which returns callback logic as defined by a callback\n * function.\n *\n * @remarks\n * Useful for subscription-based or other free-form logic that can send events\n * back to the parent actor.\n *\n * Actors created from callback logic (“callback actors”) can:\n *\n * - Receive events via the `receive` function\n * - Send events to the parent actor via the `sendBack` function\n *\n * Callback actors are a bit different from other actors in that they:\n *\n * - Do not work with `onDone`\n * - Do not produce a snapshot using `.getSnapshot()`\n * - Do not emit values when used with `.subscribe()`\n * - Can not be stopped with `.stop()`\n *\n * @example\n *\n * ```typescript\n * const callbackLogic = fromCallback(({ sendBack, receive }) => {\n *   let lockStatus = 'unlocked';\n *\n *   const handler = (event) => {\n *     if (lockStatus === 'locked') {\n *       return;\n *     }\n *     sendBack(event);\n *   };\n *\n *   receive((event) => {\n *     if (event.type === 'lock') {\n *       lockStatus = 'locked';\n *     } else if (event.type === 'unlock') {\n *       lockStatus = 'unlocked';\n *     }\n *   });\n *\n *   document.body.addEventListener('click', handler);\n *\n *   return () => {\n *     document.body.removeEventListener('click', handler);\n *   };\n * });\n * ```\n *\n * @param callback - The callback function used to describe the callback logic\n *   The callback function is passed an object with the following properties:\n *\n *   - `receive` - A function that can send events back to the parent actor; the\n *       listener is then called whenever events are received by the callback\n *       actor\n *   - `sendBack` - A function that can send events back to the parent actor\n *   - `input` - Data that was provided to the callback actor\n *   - `self` - The parent actor of the callback actor\n *   - `system` - The actor system to which the callback actor belongs The callback\n *       function can (optionally) return a cleanup function, which is called\n *       when the actor is stopped.\n *\n * @returns Callback logic\n * @see {@link CallbackLogicFunction} for more information about the callback function and its object argument\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromCallback(callback) {\n  const logic = {\n    config: callback,\n    start: (state, actorScope) => {\n      const {\n        self,\n        system,\n        emit\n      } = actorScope;\n      const callbackState = {\n        receivers: undefined,\n        dispose: undefined\n      };\n      instanceStates.set(self, callbackState);\n      callbackState.dispose = callback({\n        input: state.input,\n        system,\n        self,\n        sendBack: event => {\n          if (self.getSnapshot().status === 'stopped') {\n            return;\n          }\n          if (self._parent) {\n            system._relay(self, self._parent, event);\n          }\n        },\n        receive: listener => {\n          callbackState.receivers ??= new Set();\n          callbackState.receivers.add(listener);\n        },\n        emit\n      });\n    },\n    transition: (state, event, actorScope) => {\n      const callbackState = instanceStates.get(actorScope.self);\n      if (event.type === _dist_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X) {\n        state = {\n          ...state,\n          status: 'stopped',\n          error: undefined\n        };\n        callbackState.dispose?.();\n        return state;\n      }\n      callbackState.receivers?.forEach(receiver => receiver(event));\n      return state;\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst XSTATE_OBSERVABLE_NEXT = 'xstate.observable.next';\nconst XSTATE_OBSERVABLE_ERROR = 'xstate.observable.error';\nconst XSTATE_OBSERVABLE_COMPLETE = 'xstate.observable.complete';\n\n/**\n * Represents an actor created by `fromObservable` or `fromEventObservable`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * // The type of the value observed by the actor's logic.\n * type Context = number;\n * // The actor's input.\n * type Input = { period?: number };\n *\n * // Actor logic that observes a number incremented every `input.period`\n * // milliseconds (default: 1_000).\n * const logic = fromObservable<Context, Input>(({ input, self }) => {\n *   self;\n *   // ^? ObservableActorRef<Event, Input>\n *\n *   return interval(input.period ?? 1_000);\n * });\n *\n * const actor = createActor(logic, { input: { period: 2_000 } });\n * //    ^? ObservableActorRef<Event, Input>\n * ```\n *\n * @see {@link fromObservable}\n * @see {@link fromEventObservable}\n */\n\n/**\n * Observable actor logic is described by an observable stream of values. Actors\n * created from observable logic (“observable actors”) can:\n *\n * - Emit snapshots of the observable’s emitted value\n *\n * The observable’s emitted value is used as its observable actor’s `context`.\n *\n * Sending events to observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * const logic = fromObservable((obj) => interval(1000));\n *\n * const actor = createActor(logic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot.context);\n * });\n *\n * actor.start();\n * // At every second:\n * // Logs 0\n * // Logs 1\n * // Logs 2\n * // ...\n * ```\n *\n * @param observableCreator A function that creates an observable. It receives\n *   one argument, an object with the following properties:\n *\n *   - `input` - Data that was provided to the observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the observable actor belongs\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n * @see {@link https://rxjs.dev} for documentation on RxJS Observable and observable creators.\n * @see {@link Subscribable} interface in XState, which is based on and compatible with RxJS Observable.\n */\nfunction fromObservable(observableCreator) {\n  // TODO: add event types\n  const logic = {\n    config: observableCreator,\n    transition: (snapshot, event) => {\n      if (snapshot.status !== 'active') {\n        return snapshot;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_NEXT:\n          {\n            const newSnapshot = {\n              ...snapshot,\n              context: event.data\n            };\n            return newSnapshot;\n          }\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...snapshot,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...snapshot,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case _dist_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          snapshot._subscription.unsubscribe();\n          return {\n            ...snapshot,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return snapshot;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = observableCreator({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_NEXT,\n            data: value\n          });\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...state\n    }) => state,\n    restoreSnapshot: state => ({\n      ...state,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\n/**\n * Creates event observable logic that listens to an observable that delivers\n * event objects.\n *\n * Event observable actor logic is described by an observable stream of\n * {@link https://stately.ai/docs/transitions#event-objects | event objects}.\n * Actors created from event observable logic (“event observable actors”) can:\n *\n * - Implicitly send events to its parent actor\n * - Emit snapshots of its emitted event objects\n *\n * Sending events to event observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromEventObservable,\n *   Subscribable,\n *   EventObject,\n *   createMachine,\n *   createActor\n * } from 'xstate';\n * import { fromEvent } from 'rxjs';\n *\n * const mouseClickLogic = fromEventObservable(\n *   () => fromEvent(document.body, 'click') as Subscribable<EventObject>\n * );\n *\n * const canvasMachine = createMachine({\n *   invoke: {\n *     // Will send mouse `click` events to the canvas actor\n *     src: mouseClickLogic\n *   }\n * });\n *\n * const canvasActor = createActor(canvasMachine);\n * canvasActor.start();\n * ```\n *\n * @param lazyObservable A function that creates an observable that delivers\n *   event objects. It receives one argument, an object with the following\n *   properties:\n *\n *   - `input` - Data that was provided to the event observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the event observable actor belongs.\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n */\nfunction fromEventObservable(lazyObservable) {\n  // TODO: event types\n  const logic = {\n    config: lazyObservable,\n    transition: (state, event) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...state,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case _dist_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          state._subscription.unsubscribe();\n          return {\n            ...state,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = lazyObservable({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          if (self._parent) {\n            system._relay(self, self._parent, value);\n          }\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...snapshot\n    }) => snapshot,\n    restoreSnapshot: snapshot => ({\n      ...snapshot,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\nconst XSTATE_PROMISE_RESOLVE = 'xstate.promise.resolve';\nconst XSTATE_PROMISE_REJECT = 'xstate.promise.reject';\n\n/**\n * Represents an actor created by `fromPromise`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromPromise, createActor } from 'xstate';\n *\n * // The actor's resolved output\n * type Output = string;\n * // The actor's input.\n * type Input = { message: string };\n *\n * // Actor logic that fetches the url of an image of a cat saying `input.message`.\n * const logic = fromPromise<Output, Input>(async ({ input, self }) => {\n *   self;\n *   // ^? PromiseActorRef<Output, Input>\n *\n *   const data = await fetch(\n *     `https://cataas.com/cat/says/${input.message}`\n *   );\n *   const url = await data.json();\n *   return url;\n * });\n *\n * const actor = createActor(logic, { input: { message: 'hello world' } });\n * //    ^? PromiseActorRef<Output, Input>\n * ```\n *\n * @see {@link fromPromise}\n */\n\nconst controllerMap = new WeakMap();\n\n/**\n * An actor logic creator which returns promise logic as defined by an async\n * process that resolves or rejects after some time.\n *\n * Actors created from promise actor logic (“promise actors”) can:\n *\n * - Emit the resolved value of the promise\n * - Output the resolved value of the promise\n *\n * Sending events to promise actors will have no effect.\n *\n * @example\n *\n * ```ts\n * const promiseLogic = fromPromise(async () => {\n *   const result = await fetch('https://example.com/...').then((data) =>\n *     data.json()\n *   );\n *\n *   return result;\n * });\n *\n * const promiseActor = createActor(promiseLogic);\n * promiseActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * promiseActor.start();\n * // => {\n * //   output: undefined,\n * //   status: 'active'\n * //   ...\n * // }\n *\n * // After promise resolves\n * // => {\n * //   output: { ... },\n * //   status: 'done',\n * //   ...\n * // }\n * ```\n *\n * @param promiseCreator A function which returns a Promise, and accepts an\n *   object with the following properties:\n *\n *   - `input` - Data that was provided to the promise actor\n *   - `self` - The parent actor of the promise actor\n *   - `system` - The actor system to which the promise actor belongs\n *\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromPromise(promiseCreator) {\n  const logic = {\n    config: promiseCreator,\n    transition: (state, event, scope) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_PROMISE_RESOLVE:\n          {\n            const resolvedValue = event.data;\n            return {\n              ...state,\n              status: 'done',\n              output: resolvedValue,\n              input: undefined\n            };\n          }\n        case XSTATE_PROMISE_REJECT:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined\n          };\n        case _dist_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          {\n            controllerMap.get(scope.self)?.abort();\n            return {\n              ...state,\n              status: 'stopped',\n              input: undefined\n            };\n          }\n        default:\n          return state;\n      }\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      // TODO: determine how to allow customizing this so that promises\n      // can be restarted if necessary\n      if (state.status !== 'active') {\n        return;\n      }\n      const controller = new AbortController();\n      controllerMap.set(self, controller);\n      const resolvedPromise = Promise.resolve(promiseCreator({\n        input: state.input,\n        system,\n        self,\n        signal: controller.signal,\n        emit\n      }));\n      resolvedPromise.then(response => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_RESOLVE,\n          data: response\n        });\n      }, errorData => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_REJECT,\n          data: errorData\n        });\n      });\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst emptyLogic = fromTransition(_ => undefined, undefined);\nfunction createEmptyActor() {\n  return (0,_dist_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(emptyLogic);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/xstate/dev/dist/xstate-dev.development.esm.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   devToolsAdapter: () => (/* binding */ devToolsAdapter),\n/* harmony export */   getGlobal: () => (/* binding */ getGlobal),\n/* harmony export */   registerService: () => (/* binding */ registerService)\n/* harmony export */ });\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof __webpack_require__.g !== 'undefined') {\n    return __webpack_require__.g;\n  }\n  {\n    console.warn('XState could not find a global object in this environment. Please let the maintainers know and raise an issue here: https://github.com/statelyai/xstate/issues');\n  }\n}\nfunction getDevTools() {\n  const w = getGlobal();\n  if (w.__xstate__) {\n    return w.__xstate__;\n  }\n  return undefined;\n}\nfunction registerService(service) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n}\nconst devToolsAdapter = service => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy94c3RhdGUvZGV2L2Rpc3QveHN0YXRlLWRldi5kZXZlbG9wbWVudC5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscUJBQU07QUFDbkIsV0FBVyxxQkFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVEIiwic291cmNlcyI6WyIvaG9tZS9lbXB0eS9Db2RlL1ZZUy92eXMtYXBwL25vZGVfbW9kdWxlcy94c3RhdGUvZGV2L2Rpc3QveHN0YXRlLWRldi5kZXZlbG9wbWVudC5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRnJvbSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9nbG9iYWxUaGlzXG5mdW5jdGlvbiBnZXRHbG9iYWwoKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZ2xvYmFsVGhpcztcbiAgfVxuICBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH1cbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfVxuICBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZ2xvYmFsO1xuICB9XG4gIHtcbiAgICBjb25zb2xlLndhcm4oJ1hTdGF0ZSBjb3VsZCBub3QgZmluZCBhIGdsb2JhbCBvYmplY3QgaW4gdGhpcyBlbnZpcm9ubWVudC4gUGxlYXNlIGxldCB0aGUgbWFpbnRhaW5lcnMga25vdyBhbmQgcmFpc2UgYW4gaXNzdWUgaGVyZTogaHR0cHM6Ly9naXRodWIuY29tL3N0YXRlbHlhaS94c3RhdGUvaXNzdWVzJyk7XG4gIH1cbn1cbmZ1bmN0aW9uIGdldERldlRvb2xzKCkge1xuICBjb25zdCB3ID0gZ2V0R2xvYmFsKCk7XG4gIGlmICh3Ll9feHN0YXRlX18pIHtcbiAgICByZXR1cm4gdy5fX3hzdGF0ZV9fO1xuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiByZWdpc3RlclNlcnZpY2Uoc2VydmljZSkge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgZGV2VG9vbHMgPSBnZXREZXZUb29scygpO1xuICBpZiAoZGV2VG9vbHMpIHtcbiAgICBkZXZUb29scy5yZWdpc3RlcihzZXJ2aWNlKTtcbiAgfVxufVxuY29uc3QgZGV2VG9vbHNBZGFwdGVyID0gc2VydmljZSA9PiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBkZXZUb29scyA9IGdldERldlRvb2xzKCk7XG4gIGlmIChkZXZUb29scykge1xuICAgIGRldlRvb2xzLnJlZ2lzdGVyKHNlcnZpY2UpO1xuICB9XG59O1xuXG5leHBvcnQgeyBkZXZUb29sc0FkYXB0ZXIsIGdldEdsb2JhbCwgcmVnaXN0ZXJTZXJ2aWNlIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/log-5a7b5528.development.esm.js":
/*!******************************************************************!*\
  !*** ./node_modules/xstate/dist/log-5a7b5528.development.esm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: () => (/* binding */ SpecialTargets),\n/* harmony export */   a: () => (/* binding */ assign),\n/* harmony export */   b: () => (/* binding */ enqueueActions),\n/* harmony export */   c: () => (/* binding */ sendTo),\n/* harmony export */   e: () => (/* binding */ emit),\n/* harmony export */   f: () => (/* binding */ forwardTo),\n/* harmony export */   l: () => (/* binding */ log),\n/* harmony export */   s: () => (/* binding */ sendParent)\n/* harmony export */ });\n/* harmony import */ var _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./raise-59549771.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-59549771.development.esm.js\");\n\n\nfunction createSpawner(actorScope, {\n  machine,\n  context\n}, event, spawnedChildren) {\n  const spawn = (src, options) => {\n    if (typeof src === 'string') {\n      const logic = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.z)(machine, src);\n      if (!logic) {\n        throw new Error(`Actor logic '${src}' not implemented in machine '${machine.id}'`);\n      }\n      const actorRef = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.A)(logic, {\n        id: options?.id,\n        parent: actorScope.self,\n        syncSnapshot: options?.syncSnapshot,\n        input: typeof options?.input === 'function' ? options.input({\n          context,\n          event,\n          self: actorScope.self\n        }) : options?.input,\n        src,\n        systemId: options?.systemId\n      });\n      spawnedChildren[actorRef.id] = actorRef;\n      return actorRef;\n    } else {\n      const actorRef = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.A)(src, {\n        id: options?.id,\n        parent: actorScope.self,\n        syncSnapshot: options?.syncSnapshot,\n        input: options?.input,\n        src,\n        systemId: options?.systemId\n      });\n      return actorRef;\n    }\n  };\n  return (src, options) => {\n    const actorRef = spawn(src, options); // TODO: fix types\n    spawnedChildren[actorRef.id] = actorRef;\n    actorScope.defer(() => {\n      if (actorRef._processingStatus === _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.T.Stopped) {\n        return;\n      }\n      actorRef.start();\n    });\n    return actorRef;\n  };\n}\n\nfunction resolveAssign(actorScope, snapshot, actionArgs, actionParams, {\n  assignment\n}) {\n  if (!snapshot.context) {\n    throw new Error('Cannot assign to undefined `context`. Ensure that `context` is defined in the machine config.');\n  }\n  const spawnedChildren = {};\n  const assignArgs = {\n    context: snapshot.context,\n    event: actionArgs.event,\n    spawn: createSpawner(actorScope, snapshot, actionArgs.event, spawnedChildren),\n    self: actorScope.self,\n    system: actorScope.system\n  };\n  let partialUpdate = {};\n  if (typeof assignment === 'function') {\n    partialUpdate = assignment(assignArgs, actionParams);\n  } else {\n    for (const key of Object.keys(assignment)) {\n      const propAssignment = assignment[key];\n      partialUpdate[key] = typeof propAssignment === 'function' ? propAssignment(assignArgs, actionParams) : propAssignment;\n    }\n  }\n  const updatedContext = Object.assign({}, snapshot.context, partialUpdate);\n  return [(0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.U)(snapshot, {\n    context: updatedContext,\n    children: Object.keys(spawnedChildren).length ? {\n      ...snapshot.children,\n      ...spawnedChildren\n    } : snapshot.children\n  }), undefined, undefined];\n}\n/**\n * Updates the current context of the machine.\n *\n * @example\n *\n * ```ts\n * import { createMachine, assign } from 'xstate';\n *\n * const countMachine = createMachine({\n *   context: {\n *     count: 0,\n *     message: ''\n *   },\n *   on: {\n *     inc: {\n *       actions: assign({\n *         count: ({ context }) => context.count + 1\n *       })\n *     },\n *     updateMessage: {\n *       actions: assign(({ context, event }) => {\n *         return {\n *           message: event.message.trim()\n *         };\n *       })\n *     }\n *   }\n * });\n * ```\n *\n * @param assignment An object that represents the partial context to update, or\n *   a function that returns an object that represents the partial context to\n *   update.\n */\nfunction assign(assignment) {\n  if (_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `assign()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function assign(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  assign.type = 'xstate.assign';\n  assign.assignment = assignment;\n  assign.resolve = resolveAssign;\n  return assign;\n}\n\nfunction resolveEmit(_, snapshot, args, actionParams, {\n  event: eventOrExpr\n}) {\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  return [snapshot, {\n    event: resolvedEvent\n  }, undefined];\n}\nfunction executeEmit(actorScope, {\n  event\n}) {\n  actorScope.defer(() => actorScope.emit(event));\n}\n/**\n * Emits an event to event handlers registered on the actor via `actor.on(event,\n * handler)`.\n *\n * @example\n *\n * ```ts\n * import { emit } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     something: {\n *       actions: emit({\n *         type: 'emitted',\n *         some: 'data'\n *       })\n *     }\n *   }\n *   // ...\n * });\n *\n * const actor = createActor(machine).start();\n *\n * actor.on('emitted', (event) => {\n *   console.log(event);\n * });\n *\n * actor.send({ type: 'something' });\n * // logs:\n * // {\n * //   type: 'emitted',\n * //   some: 'data'\n * // }\n * ```\n */\nfunction emit(/** The event to emit, or an expression that returns an event to emit. */\neventOrExpr) {\n  if (_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `emit()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function emit(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  emit.type = 'xstate.emit';\n  emit.event = eventOrExpr;\n  emit.resolve = resolveEmit;\n  emit.execute = executeEmit;\n  return emit;\n}\n\n// this is needed to make JSDoc `@link` work properly\n\n/**\n * @remarks\n * `T | unknown` reduces to `unknown` and that can be problematic when it comes\n * to contextual typing. It especially is a problem when the union has a\n * function member, like here:\n *\n * ```ts\n * declare function test(\n *   cbOrVal: ((arg: number) => unknown) | unknown\n * ): void;\n * test((arg) => {}); // oops, implicit any\n * ```\n *\n * This type can be used to avoid this problem. This union represents the same\n * value space as `unknown`.\n */\n\n// https://github.com/microsoft/TypeScript/issues/23182#issuecomment-379091887\n\n// @TODO: we can't use native `NoInfer` as we need those:\n// https://github.com/microsoft/TypeScript/pull/61092\n// https://github.com/microsoft/TypeScript/pull/61077\n// but even with those fixes native NoInfer still doesn't work - further issues have to be reproduced and fixed\n\n/** @deprecated Use the built-in `NoInfer` type instead */\n\n/** The full definition of an event, with a string `type`. */\n\n/**\n * The string or object representing the state value relative to the parent\n * state node.\n *\n * @remarks\n * - For a child atomic state node, this is a string, e.g., `\"pending\"`.\n * - For complex state nodes, this is an object, e.g., `{ success:\n *   \"someChildState\" }`.\n */\n\n/** @deprecated Use `AnyMachineSnapshot` instead */\n\n// TODO: possibly refactor this somehow, use even a simpler type, and maybe even make `machine.options` private or something\n/** @ignore */\n\nlet SpecialTargets = /*#__PURE__*/function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n  return SpecialTargets;\n}({});\n\n/** @deprecated Use `AnyActor` instead. */\n\n// Based on RxJS types\n\n// TODO: in v6, this should only accept AnyActorLogic, like ActorRefFromLogic\n\n/** @deprecated Use `Actor<T>` instead. */\n\n/**\n * Represents logic which can be used by an actor.\n *\n * @template TSnapshot - The type of the snapshot.\n * @template TEvent - The type of the event object.\n * @template TInput - The type of the input.\n * @template TSystem - The type of the actor system.\n */\n\n/** @deprecated */\n\n// TODO: cover all that can be actually returned\n\nfunction resolveSendTo(actorScope, snapshot, args, actionParams, {\n  to,\n  event: eventOrExpr,\n  id,\n  delay\n}, extra) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Only event objects may be used with sendTo; use sendTo({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  const resolvedTarget = typeof to === 'function' ? to(args, actionParams) : to;\n  let targetActorRef;\n  if (typeof resolvedTarget === 'string') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (resolvedTarget === SpecialTargets.Parent) {\n      targetActorRef = actorScope.self._parent;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    else if (resolvedTarget === SpecialTargets.Internal) {\n      targetActorRef = actorScope.self;\n    } else if (resolvedTarget.startsWith('#_')) {\n      // SCXML compatibility: https://www.w3.org/TR/scxml/#SCXMLEventProcessor\n      // #_invokeid. If the target is the special term '#_invokeid', where invokeid is the invokeid of an SCXML session that the sending session has created by <invoke>, the Processor must add the event to the external queue of that session.\n      targetActorRef = snapshot.children[resolvedTarget.slice(2)];\n    } else {\n      targetActorRef = extra.deferredActorIds?.includes(resolvedTarget) ? resolvedTarget : snapshot.children[resolvedTarget];\n    }\n    if (!targetActorRef) {\n      throw new Error(`Unable to send event to actor '${resolvedTarget}' from machine '${snapshot.machine.id}'.`);\n    }\n  } else {\n    targetActorRef = resolvedTarget || actorScope.self;\n  }\n  return [snapshot, {\n    to: targetActorRef,\n    targetId: typeof resolvedTarget === 'string' ? resolvedTarget : undefined,\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }, undefined];\n}\nfunction retryResolveSendTo(_, snapshot, params) {\n  if (typeof params.to === 'string') {\n    params.to = snapshot.children[params.to];\n  }\n}\nfunction executeSendTo(actorScope, params) {\n  // this forms an outgoing events queue\n  // thanks to that the recipient actors are able to read the *updated* snapshot value of the sender\n  actorScope.defer(() => {\n    const {\n      to,\n      event,\n      delay,\n      id\n    } = params;\n    if (typeof delay === 'number') {\n      actorScope.system.scheduler.schedule(actorScope.self, to, event, delay, id);\n      return;\n    }\n    actorScope.system._relay(actorScope.self,\n    // at this point, in a deferred task, it should already be mutated by retryResolveSendTo\n    // if it initially started as a string\n    to, event.type === _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.W ? (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.Y)(actorScope.self.id, event.data) : event);\n  });\n}\n/**\n * Sends an event to an actor.\n *\n * @param actor The `ActorRef` to send the event to.\n * @param event The event to send, or an expression that evaluates to the event\n *   to send\n * @param options Send action options\n *\n *   - `id` - The unique send event identifier (used with `cancel()`).\n *   - `delay` - The number of milliseconds to delay the sending of the event.\n */\nfunction sendTo(to, eventOrExpr, options) {\n  if (_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `sendTo()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function sendTo(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  sendTo.type = 'xstate.sendTo';\n  sendTo.to = to;\n  sendTo.event = eventOrExpr;\n  sendTo.id = options?.id;\n  sendTo.delay = options?.delay;\n  sendTo.resolve = resolveSendTo;\n  sendTo.retryResolve = retryResolveSendTo;\n  sendTo.execute = executeSendTo;\n  return sendTo;\n}\n\n/**\n * Sends an event to this machine's parent.\n *\n * @param event The event to send to the parent machine.\n * @param options Options to pass into the send event.\n */\nfunction sendParent(event, options) {\n  return sendTo(SpecialTargets.Parent, event, options);\n}\n/**\n * Forwards (sends) an event to the `target` actor.\n *\n * @param target The target actor to forward the event to.\n * @param options Options to pass into the send action creator.\n */\nfunction forwardTo(target, options) {\n  if ((!target || typeof target === 'function')) {\n    const originalTarget = target;\n    target = (...args) => {\n      const resolvedTarget = typeof originalTarget === 'function' ? originalTarget(...args) : originalTarget;\n      if (!resolvedTarget) {\n        throw new Error(`Attempted to forward event to undefined actor. This risks an infinite loop in the sender.`);\n      }\n      return resolvedTarget;\n    };\n  }\n  return sendTo(target, ({\n    event\n  }) => event, options);\n}\n\nfunction resolveEnqueueActions(actorScope, snapshot, args, actionParams, {\n  collect\n}) {\n  const actions = [];\n  const enqueue = function enqueue(action) {\n    actions.push(action);\n  };\n  enqueue.assign = (...args) => {\n    actions.push(assign(...args));\n  };\n  enqueue.cancel = (...args) => {\n    actions.push((0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.M)(...args));\n  };\n  enqueue.raise = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay`\n    actions.push((0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.O)(...args));\n  };\n  enqueue.sendTo = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay\n    actions.push(sendTo(...args));\n  };\n  enqueue.sendParent = (...args) => {\n    actions.push(sendParent(...args));\n  };\n  enqueue.spawnChild = (...args) => {\n    actions.push((0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.P)(...args));\n  };\n  enqueue.stopChild = (...args) => {\n    actions.push((0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.R)(...args));\n  };\n  enqueue.emit = (...args) => {\n    actions.push(emit(...args));\n  };\n  collect({\n    context: args.context,\n    event: args.event,\n    enqueue,\n    check: guard => (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.e)(guard, snapshot.context, args.event, snapshot),\n    self: actorScope.self,\n    system: actorScope.system\n  }, actionParams);\n  return [snapshot, undefined, actions];\n}\n/**\n * Creates an action object that will execute actions that are queued by the\n * `enqueue(action)` function.\n *\n * @example\n *\n * ```ts\n * import { createMachine, enqueueActions } from 'xstate';\n *\n * const machine = createMachine({\n *   entry: enqueueActions(({ enqueue, check }) => {\n *     enqueue.assign({ count: 0 });\n *\n *     if (check('someGuard')) {\n *       enqueue.assign({ count: 1 });\n *     }\n *\n *     enqueue('someAction');\n *   })\n * });\n * ```\n */\nfunction enqueueActions(collect) {\n  function enqueueActions(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  enqueueActions.type = 'xstate.enqueueActions';\n  enqueueActions.collect = collect;\n  enqueueActions.resolve = resolveEnqueueActions;\n  return enqueueActions;\n}\n\nfunction resolveLog(_, snapshot, actionArgs, actionParams, {\n  value,\n  label\n}) {\n  return [snapshot, {\n    value: typeof value === 'function' ? value(actionArgs, actionParams) : value,\n    label\n  }, undefined];\n}\nfunction executeLog({\n  logger\n}, {\n  value,\n  label\n}) {\n  if (label) {\n    logger(label, value);\n  } else {\n    logger(value);\n  }\n}\n/**\n * @param expr The expression function to evaluate which will be logged. Takes\n *   in 2 arguments:\n *\n *   - `ctx` - the current state context\n *   - `event` - the event that caused this action to be executed.\n *\n * @param label The label to give to the logged expression.\n */\nfunction log(value = ({\n  context,\n  event\n}) => ({\n  context,\n  event\n}), label) {\n  function log(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  log.type = 'xstate.log';\n  log.value = value;\n  log.label = label;\n  log.resolve = resolveLog;\n  log.execute = executeLog;\n  return log;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/log-5a7b5528.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/raise-59549771.development.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/xstate/dist/raise-59549771.development.esm.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ $$ACTOR_TYPE),\n/* harmony export */   A: () => (/* binding */ createActor),\n/* harmony export */   B: () => (/* binding */ Actor),\n/* harmony export */   C: () => (/* binding */ interpret),\n/* harmony export */   D: () => (/* binding */ and),\n/* harmony export */   E: () => (/* binding */ not),\n/* harmony export */   F: () => (/* binding */ or),\n/* harmony export */   G: () => (/* binding */ stateIn),\n/* harmony export */   H: () => (/* binding */ isMachineSnapshot),\n/* harmony export */   I: () => (/* binding */ getAllOwnEventDescriptors),\n/* harmony export */   J: () => (/* binding */ matchesState),\n/* harmony export */   K: () => (/* binding */ pathToStateValue),\n/* harmony export */   L: () => (/* binding */ toObserver),\n/* harmony export */   M: () => (/* binding */ cancel),\n/* harmony export */   N: () => (/* binding */ NULL_EVENT),\n/* harmony export */   O: () => (/* binding */ raise),\n/* harmony export */   P: () => (/* binding */ spawnChild),\n/* harmony export */   Q: () => (/* binding */ stop),\n/* harmony export */   R: () => (/* binding */ stopChild),\n/* harmony export */   S: () => (/* binding */ STATE_DELIMITER),\n/* harmony export */   T: () => (/* binding */ ProcessingStatus),\n/* harmony export */   U: () => (/* binding */ cloneMachineSnapshot),\n/* harmony export */   V: () => (/* binding */ executingCustomAction),\n/* harmony export */   W: () => (/* binding */ XSTATE_ERROR),\n/* harmony export */   X: () => (/* binding */ XSTATE_STOP),\n/* harmony export */   Y: () => (/* binding */ createErrorActorEvent),\n/* harmony export */   a: () => (/* binding */ toTransitionConfigArray),\n/* harmony export */   b: () => (/* binding */ formatTransition),\n/* harmony export */   c: () => (/* binding */ createInvokeId),\n/* harmony export */   d: () => (/* binding */ formatInitialTransition),\n/* harmony export */   e: () => (/* binding */ evaluateGuard),\n/* harmony export */   f: () => (/* binding */ formatTransitions),\n/* harmony export */   g: () => (/* binding */ getDelayedTransitions),\n/* harmony export */   h: () => (/* binding */ getCandidates),\n/* harmony export */   i: () => (/* binding */ getAllStateNodes),\n/* harmony export */   j: () => (/* binding */ getStateNodes),\n/* harmony export */   k: () => (/* binding */ createMachineSnapshot),\n/* harmony export */   l: () => (/* binding */ isInFinalState),\n/* harmony export */   m: () => (/* binding */ mapValues),\n/* harmony export */   n: () => (/* binding */ macrostep),\n/* harmony export */   o: () => (/* binding */ transitionNode),\n/* harmony export */   p: () => (/* binding */ resolveActionsAndContext),\n/* harmony export */   q: () => (/* binding */ createInitEvent),\n/* harmony export */   r: () => (/* binding */ resolveStateValue),\n/* harmony export */   s: () => (/* binding */ microstep),\n/* harmony export */   t: () => (/* binding */ toArray),\n/* harmony export */   u: () => (/* binding */ getInitialStateNodes),\n/* harmony export */   v: () => (/* binding */ toStatePath),\n/* harmony export */   w: () => (/* binding */ isStateId),\n/* harmony export */   x: () => (/* binding */ getStateNodeByPath),\n/* harmony export */   y: () => (/* binding */ getPersistedSnapshot),\n/* harmony export */   z: () => (/* binding */ resolveReferencedActor)\n/* harmony export */ });\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\nclass Mailbox {\n  constructor(_process) {\n    this._process = _process;\n    this._active = false;\n    this._current = null;\n    this._last = null;\n  }\n  start() {\n    this._active = true;\n    this.flush();\n  }\n  clear() {\n    // we can't set _current to null because we might be currently processing\n    // and enqueue following clear shouldn't start processing the enqueued item immediately\n    if (this._current) {\n      this._current.next = null;\n      this._last = this._current;\n    }\n  }\n  enqueue(event) {\n    const enqueued = {\n      value: event,\n      next: null\n    };\n    if (this._current) {\n      this._last.next = enqueued;\n      this._last = enqueued;\n      return;\n    }\n    this._current = enqueued;\n    this._last = enqueued;\n    if (this._active) {\n      this.flush();\n    }\n  }\n  flush() {\n    while (this._current) {\n      // atm the given _process is responsible for implementing proper try/catch handling\n      // we assume here that this won't throw in a way that can affect this mailbox\n      const consumed = this._current;\n      this._process(consumed.value);\n      this._current = consumed.next;\n    }\n    this._last = null;\n  }\n}\n\nconst STATE_DELIMITER = '.';\nconst TARGETLESS_KEY = '';\nconst NULL_EVENT = '';\nconst STATE_IDENTIFIER = '#';\nconst WILDCARD = '*';\nconst XSTATE_INIT = 'xstate.init';\nconst XSTATE_ERROR = 'xstate.error';\nconst XSTATE_STOP = 'xstate.stop';\n\n/**\n * Returns an event that represents an implicit event that is sent after the\n * specified `delay`.\n *\n * @param delayRef The delay in milliseconds\n * @param id The state node ID where this event is handled\n */\nfunction createAfterEvent(delayRef, id) {\n  return {\n    type: `xstate.after.${delayRef}.${id}`\n  };\n}\n\n/**\n * Returns an event that represents that a final state node has been reached in\n * the parent state node.\n *\n * @param id The final state node's parent state node `id`\n * @param output The data to pass into the event\n */\nfunction createDoneStateEvent(id, output) {\n  return {\n    type: `xstate.done.state.${id}`,\n    output\n  };\n}\n\n/**\n * Returns an event that represents that an invoked service has terminated.\n *\n * An invoked service is terminated when it has reached a top-level final state\n * node, but not when it is canceled.\n *\n * @param invokeId The invoked service ID\n * @param output The data to pass into the event\n */\nfunction createDoneActorEvent(invokeId, output) {\n  return {\n    type: `xstate.done.actor.${invokeId}`,\n    output,\n    actorId: invokeId\n  };\n}\nfunction createErrorActorEvent(id, error) {\n  return {\n    type: `xstate.error.actor.${id}`,\n    error,\n    actorId: id\n  };\n}\nfunction createInitEvent(input) {\n  return {\n    type: XSTATE_INIT,\n    input\n  };\n}\n\n/**\n * This function makes sure that unhandled errors are thrown in a separate\n * macrotask. It allows those errors to be detected by global error handlers and\n * reported to bug tracking services without interrupting our own stack of\n * execution.\n *\n * @param err Error to be thrown\n */\nfunction reportUnhandledError(err) {\n  setTimeout(() => {\n    throw err;\n  });\n}\n\nconst symbolObservable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n\nfunction matchesState(parentStateId, childStateId) {\n  const parentStateValue = toStateValue(parentStateId);\n  const childStateValue = toStateValue(childStateId);\n  if (typeof childStateValue === 'string') {\n    if (typeof parentStateValue === 'string') {\n      return childStateValue === parentStateValue;\n    }\n\n    // Parent more specific than child\n    return false;\n  }\n  if (typeof parentStateValue === 'string') {\n    return parentStateValue in childStateValue;\n  }\n  return Object.keys(parentStateValue).every(key => {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction toStatePath(stateId) {\n  if (isArray(stateId)) {\n    return stateId;\n  }\n  const result = [];\n  let segment = '';\n  for (let i = 0; i < stateId.length; i++) {\n    const char = stateId.charCodeAt(i);\n    switch (char) {\n      // \\\n      case 92:\n        // consume the next character\n        segment += stateId[i + 1];\n        // and skip over it\n        i++;\n        continue;\n      // .\n      case 46:\n        result.push(segment);\n        segment = '';\n        continue;\n    }\n    segment += stateId[i];\n  }\n  result.push(segment);\n  return result;\n}\nfunction toStateValue(stateValue) {\n  if (isMachineSnapshot(stateValue)) {\n    return stateValue.value;\n  }\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n  const statePath = toStatePath(stateValue);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n  const value = {};\n  let marker = value;\n  for (let i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      const previous = marker;\n      marker = {};\n      previous[statePath[i]] = marker;\n    }\n  }\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  const result = {};\n  const collectionKeys = Object.keys(collection);\n  for (let i = 0; i < collectionKeys.length; i++) {\n    const key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n  return result;\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  return toArrayStrict(value);\n}\nfunction resolveOutput(mapper, context, event, self) {\n  if (typeof mapper === 'function') {\n    return mapper({\n      context,\n      event,\n      self\n    });\n  }\n  if (!!mapper && typeof mapper === 'object' && Object.values(mapper).some(val => typeof val === 'function')) {\n    console.warn(`Dynamically mapping values to individual properties is deprecated. Use a single function that returns the mapped object instead.\\nFound object containing properties whose values are possibly mapping functions: ${Object.entries(mapper).filter(([, value]) => typeof value === 'function').map(([key, value]) => `\\n - ${key}: ${value.toString().replace(/\\n\\s*/g, '')}`).join('')}`);\n  }\n  return mapper;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isErrorActorEvent(event) {\n  return event.type.startsWith('xstate.error.actor');\n}\nfunction toTransitionConfigArray(configLike) {\n  return toArrayStrict(configLike).map(transitionLike => {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string') {\n      return {\n        target: transitionLike\n      };\n    }\n    return transitionLike;\n  });\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n  return toArray(target);\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  const isObserver = typeof nextHandler === 'object';\n  const self = isObserver ? nextHandler : undefined;\n  return {\n    next: (isObserver ? nextHandler.next : nextHandler)?.bind(self),\n    error: (isObserver ? nextHandler.error : errorHandler)?.bind(self),\n    complete: (isObserver ? nextHandler.complete : completionHandler)?.bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return `${index}.${stateNodeId}`;\n}\nfunction resolveReferencedActor(machine, src) {\n  const match = src.match(/^xstate\\.invoke\\.(\\d+)\\.(.*)/);\n  if (!match) {\n    return machine.implementations.actors[src];\n  }\n  const [, indexStr, nodeId] = match;\n  const node = machine.getStateNodeById(nodeId);\n  const invokeConfig = node.config.invoke;\n  return (Array.isArray(invokeConfig) ? invokeConfig[indexStr] : invokeConfig).src;\n}\nfunction getAllOwnEventDescriptors(snapshot) {\n  return [...new Set([...snapshot._nodes.flatMap(sn => sn.ownEvents)])];\n}\n\nfunction createScheduledEventId(actorRef, id) {\n  return `${actorRef.sessionId}.${id}`;\n}\nlet idCounter = 0;\nfunction createSystem(rootActor, options) {\n  const children = new Map();\n  const keyedActors = new Map();\n  const reverseKeyedActors = new WeakMap();\n  const inspectionObservers = new Set();\n  const timerMap = {};\n  const {\n    clock,\n    logger\n  } = options;\n  const scheduler = {\n    schedule: (source, target, event, delay, id = Math.random().toString(36).slice(2)) => {\n      const scheduledEvent = {\n        source,\n        target,\n        event,\n        delay,\n        id,\n        startedAt: Date.now()\n      };\n      const scheduledEventId = createScheduledEventId(source, id);\n      system._snapshot._scheduledEvents[scheduledEventId] = scheduledEvent;\n      const timeout = clock.setTimeout(() => {\n        delete timerMap[scheduledEventId];\n        delete system._snapshot._scheduledEvents[scheduledEventId];\n        system._relay(source, target, event);\n      }, delay);\n      timerMap[scheduledEventId] = timeout;\n    },\n    cancel: (source, id) => {\n      const scheduledEventId = createScheduledEventId(source, id);\n      const timeout = timerMap[scheduledEventId];\n      delete timerMap[scheduledEventId];\n      delete system._snapshot._scheduledEvents[scheduledEventId];\n      if (timeout !== undefined) {\n        clock.clearTimeout(timeout);\n      }\n    },\n    cancelAll: actorRef => {\n      for (const scheduledEventId in system._snapshot._scheduledEvents) {\n        const scheduledEvent = system._snapshot._scheduledEvents[scheduledEventId];\n        if (scheduledEvent.source === actorRef) {\n          scheduler.cancel(actorRef, scheduledEvent.id);\n        }\n      }\n    }\n  };\n  const sendInspectionEvent = event => {\n    if (!inspectionObservers.size) {\n      return;\n    }\n    const resolvedInspectionEvent = {\n      ...event,\n      rootId: rootActor.sessionId\n    };\n    inspectionObservers.forEach(observer => observer.next?.(resolvedInspectionEvent));\n  };\n  const system = {\n    _snapshot: {\n      _scheduledEvents: (options?.snapshot && options.snapshot.scheduler) ?? {}\n    },\n    _bookId: () => `x:${idCounter++}`,\n    _register: (sessionId, actorRef) => {\n      children.set(sessionId, actorRef);\n      return sessionId;\n    },\n    _unregister: actorRef => {\n      children.delete(actorRef.sessionId);\n      const systemId = reverseKeyedActors.get(actorRef);\n      if (systemId !== undefined) {\n        keyedActors.delete(systemId);\n        reverseKeyedActors.delete(actorRef);\n      }\n    },\n    get: systemId => {\n      return keyedActors.get(systemId);\n    },\n    _set: (systemId, actorRef) => {\n      const existing = keyedActors.get(systemId);\n      if (existing && existing !== actorRef) {\n        throw new Error(`Actor with system ID '${systemId}' already exists.`);\n      }\n      keyedActors.set(systemId, actorRef);\n      reverseKeyedActors.set(actorRef, systemId);\n    },\n    inspect: observerOrFn => {\n      const observer = toObserver(observerOrFn);\n      inspectionObservers.add(observer);\n      return {\n        unsubscribe() {\n          inspectionObservers.delete(observer);\n        }\n      };\n    },\n    _sendInspectionEvent: sendInspectionEvent,\n    _relay: (source, target, event) => {\n      system._sendInspectionEvent({\n        type: '@xstate.event',\n        sourceRef: source,\n        actorRef: target,\n        event\n      });\n      target._send(event);\n    },\n    scheduler,\n    getSnapshot: () => {\n      return {\n        _scheduledEvents: {\n          ...system._snapshot._scheduledEvents\n        }\n      };\n    },\n    start: () => {\n      const scheduledEvents = system._snapshot._scheduledEvents;\n      system._snapshot._scheduledEvents = {};\n      for (const scheduledId in scheduledEvents) {\n        const {\n          source,\n          target,\n          event,\n          delay,\n          id\n        } = scheduledEvents[scheduledId];\n        scheduler.schedule(source, target, event, delay, id);\n      }\n    },\n    _clock: clock,\n    _logger: logger\n  };\n  return system;\n}\n\n// those are needed to make JSDoc `@link` work properly\n\nlet executingCustomAction = false;\nconst $$ACTOR_TYPE = 1;\n\n// those values are currently used by @xstate/react directly so it's important to keep the assigned values in sync\nlet ProcessingStatus = /*#__PURE__*/function (ProcessingStatus) {\n  ProcessingStatus[ProcessingStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  ProcessingStatus[ProcessingStatus[\"Running\"] = 1] = \"Running\";\n  ProcessingStatus[ProcessingStatus[\"Stopped\"] = 2] = \"Stopped\";\n  return ProcessingStatus;\n}({});\nconst defaultOptions = {\n  clock: {\n    setTimeout: (fn, ms) => {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout: id => {\n      return clearTimeout(id);\n    }\n  },\n  logger: console.log.bind(console),\n  devTools: false\n};\n\n/**\n * An Actor is a running process that can receive events, send events and change\n * its behavior based on the events it receives, which can cause effects outside\n * of the actor. When you run a state machine, it becomes an actor.\n */\nclass Actor {\n  /**\n   * Creates a new actor instance for the given logic with the provided options,\n   * if any.\n   *\n   * @param logic The logic to create an actor from\n   * @param options Actor options\n   */\n  constructor(logic, options) {\n    this.logic = logic;\n    /** The current internal state of the actor. */\n    this._snapshot = void 0;\n    /**\n     * The clock that is responsible for setting and clearing timeouts, such as\n     * delayed events and transitions.\n     */\n    this.clock = void 0;\n    this.options = void 0;\n    /** The unique identifier for this actor relative to its parent. */\n    this.id = void 0;\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.observers = new Set();\n    this.eventListeners = new Map();\n    this.logger = void 0;\n    /** @internal */\n    this._processingStatus = ProcessingStatus.NotStarted;\n    // Actor Ref\n    this._parent = void 0;\n    /** @internal */\n    this._syncSnapshot = void 0;\n    this.ref = void 0;\n    // TODO: add typings for system\n    this._actorScope = void 0;\n    this._systemId = void 0;\n    /** The globally unique process ID for this invocation. */\n    this.sessionId = void 0;\n    /** The system to which this actor belongs. */\n    this.system = void 0;\n    this._doneEvent = void 0;\n    this.src = void 0;\n    // array of functions to defer\n    this._deferred = [];\n    const resolvedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const {\n      clock,\n      logger,\n      parent,\n      syncSnapshot,\n      id,\n      systemId,\n      inspect\n    } = resolvedOptions;\n    this.system = parent ? parent.system : createSystem(this, {\n      clock,\n      logger\n    });\n    if (inspect && !parent) {\n      // Always inspect at the system-level\n      this.system.inspect(toObserver(inspect));\n    }\n    this.sessionId = this.system._bookId();\n    this.id = id ?? this.sessionId;\n    this.logger = options?.logger ?? this.system._logger;\n    this.clock = options?.clock ?? this.system._clock;\n    this._parent = parent;\n    this._syncSnapshot = syncSnapshot;\n    this.options = resolvedOptions;\n    this.src = resolvedOptions.src ?? logic;\n    this.ref = this;\n    this._actorScope = {\n      self: this,\n      id: this.id,\n      sessionId: this.sessionId,\n      logger: this.logger,\n      defer: fn => {\n        this._deferred.push(fn);\n      },\n      system: this.system,\n      stopChild: child => {\n        if (child._parent !== this) {\n          throw new Error(`Cannot stop child actor ${child.id} of ${this.id} because it is not a child`);\n        }\n        child._stop();\n      },\n      emit: emittedEvent => {\n        const listeners = this.eventListeners.get(emittedEvent.type);\n        const wildcardListener = this.eventListeners.get('*');\n        if (!listeners && !wildcardListener) {\n          return;\n        }\n        const allListeners = [...(listeners ? listeners.values() : []), ...(wildcardListener ? wildcardListener.values() : [])];\n        for (const handler of allListeners) {\n          handler(emittedEvent);\n        }\n      },\n      actionExecutor: action => {\n        const exec = () => {\n          this._actorScope.system._sendInspectionEvent({\n            type: '@xstate.action',\n            actorRef: this,\n            action: {\n              type: action.type,\n              params: action.params\n            }\n          });\n          if (!action.exec) {\n            return;\n          }\n          const saveExecutingCustomAction = executingCustomAction;\n          try {\n            executingCustomAction = true;\n            action.exec(action.info, action.params);\n          } finally {\n            executingCustomAction = saveExecutingCustomAction;\n          }\n        };\n        if (this._processingStatus === ProcessingStatus.Running) {\n          exec();\n        } else {\n          this._deferred.push(exec);\n        }\n      }\n    };\n\n    // Ensure that the send method is bound to this Actor instance\n    // if destructured\n    this.send = this.send.bind(this);\n    this.system._sendInspectionEvent({\n      type: '@xstate.actor',\n      actorRef: this\n    });\n    if (systemId) {\n      this._systemId = systemId;\n      this.system._set(systemId, this);\n    }\n    this._initState(options?.snapshot ?? options?.state);\n    if (systemId && this._snapshot.status !== 'active') {\n      this.system._unregister(this);\n    }\n  }\n  _initState(persistedState) {\n    try {\n      this._snapshot = persistedState ? this.logic.restoreSnapshot ? this.logic.restoreSnapshot(persistedState, this._actorScope) : persistedState : this.logic.getInitialSnapshot(this._actorScope, this.options?.input);\n    } catch (err) {\n      // if we get here then it means that we assign a value to this._snapshot that is not of the correct type\n      // we can't get the true `TSnapshot & { status: 'error'; }`, it's impossible\n      // so right now this is a lie of sorts\n      this._snapshot = {\n        status: 'error',\n        output: undefined,\n        error: err\n      };\n    }\n  }\n  update(snapshot, event) {\n    // Update state\n    this._snapshot = snapshot;\n\n    // Execute deferred effects\n    let deferredFn;\n    while (deferredFn = this._deferred.shift()) {\n      try {\n        deferredFn();\n      } catch (err) {\n        // this error can only be caught when executing *initial* actions\n        // it's the only time when we call actions provided by the user through those deferreds\n        // when the actor is already running we always execute them synchronously while transitioning\n        // no \"builtin deferred\" should actually throw an error since they are either safe\n        // or the control flow is passed through the mailbox and errors should be caught by the `_process` used by the mailbox\n        this._deferred.length = 0;\n        this._snapshot = {\n          ...snapshot,\n          status: 'error',\n          error: err\n        };\n      }\n    }\n    switch (this._snapshot.status) {\n      case 'active':\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        break;\n      case 'done':\n        // next observers are meant to be notified about done snapshots\n        // this can be seen as something that is different from how observable work\n        // but with observables `complete` callback is called without any arguments\n        // it's more ergonomic for XState to treat a done snapshot as a \"next\" value\n        // and the completion event as something that is separate,\n        // something that merely follows emitting that done snapshot\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        this._stopProcedure();\n        this._complete();\n        this._doneEvent = createDoneActorEvent(this.id, this._snapshot.output);\n        if (this._parent) {\n          this.system._relay(this, this._parent, this._doneEvent);\n        }\n        break;\n      case 'error':\n        this._error(this._snapshot.error);\n        break;\n    }\n    this.system._sendInspectionEvent({\n      type: '@xstate.snapshot',\n      actorRef: this,\n      event,\n      snapshot\n    });\n  }\n\n  /**\n   * Subscribe an observer to an actor’s snapshot values.\n   *\n   * @remarks\n   * The observer will receive the actor’s snapshot value when it is emitted.\n   * The observer can be:\n   *\n   * - A plain function that receives the latest snapshot, or\n   * - An observer object whose `.next(snapshot)` method receives the latest\n   *   snapshot\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as a plain function\n   * const subscription = actor.subscribe((snapshot) => {\n   *   console.log(snapshot);\n   * });\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as an object\n   * const subscription = actor.subscribe({\n   *   next(snapshot) {\n   *     console.log(snapshot);\n   *   },\n   *   error(err) {\n   *     // ...\n   *   },\n   *   complete() {\n   *     // ...\n   *   }\n   * });\n   * ```\n   *\n   * The return value of `actor.subscribe(observer)` is a subscription object\n   * that has an `.unsubscribe()` method. You can call\n   * `subscription.unsubscribe()` to unsubscribe the observer:\n   *\n   * @example\n   *\n   * ```ts\n   * const subscription = actor.subscribe((snapshot) => {\n   *   // ...\n   * });\n   *\n   * // Unsubscribe the observer\n   * subscription.unsubscribe();\n   * ```\n   *\n   * When the actor is stopped, all of its observers will automatically be\n   * unsubscribed.\n   *\n   * @param observer - Either a plain function that receives the latest\n   *   snapshot, or an observer object whose `.next(snapshot)` method receives\n   *   the latest snapshot\n   */\n\n  subscribe(nextListenerOrObserver, errorListener, completeListener) {\n    const observer = toObserver(nextListenerOrObserver, errorListener, completeListener);\n    if (this._processingStatus !== ProcessingStatus.Stopped) {\n      this.observers.add(observer);\n    } else {\n      switch (this._snapshot.status) {\n        case 'done':\n          try {\n            observer.complete?.();\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n          break;\n        case 'error':\n          {\n            const err = this._snapshot.error;\n            if (!observer.error) {\n              reportUnhandledError(err);\n            } else {\n              try {\n                observer.error(err);\n              } catch (err) {\n                reportUnhandledError(err);\n              }\n            }\n            break;\n          }\n      }\n    }\n    return {\n      unsubscribe: () => {\n        this.observers.delete(observer);\n      }\n    };\n  }\n  on(type, handler) {\n    let listeners = this.eventListeners.get(type);\n    if (!listeners) {\n      listeners = new Set();\n      this.eventListeners.set(type, listeners);\n    }\n    const wrappedHandler = handler.bind(undefined);\n    listeners.add(wrappedHandler);\n    return {\n      unsubscribe: () => {\n        listeners.delete(wrappedHandler);\n      }\n    };\n  }\n\n  /** Starts the Actor from the initial state */\n  start() {\n    if (this._processingStatus === ProcessingStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    if (this._syncSnapshot) {\n      this.subscribe({\n        next: snapshot => {\n          if (snapshot.status === 'active') {\n            this.system._relay(this, this._parent, {\n              type: `xstate.snapshot.${this.id}`,\n              snapshot\n            });\n          }\n        },\n        error: () => {}\n      });\n    }\n    this.system._register(this.sessionId, this);\n    if (this._systemId) {\n      this.system._set(this._systemId, this);\n    }\n    this._processingStatus = ProcessingStatus.Running;\n\n    // TODO: this isn't correct when rehydrating\n    const initEvent = createInitEvent(this.options.input);\n    this.system._sendInspectionEvent({\n      type: '@xstate.event',\n      sourceRef: this._parent,\n      actorRef: this,\n      event: initEvent\n    });\n    const status = this._snapshot.status;\n    switch (status) {\n      case 'done':\n        // a state machine can be \"done\" upon initialization (it could reach a final state using initial microsteps)\n        // we still need to complete observers, flush deferreds etc\n        this.update(this._snapshot, initEvent);\n        // TODO: rethink cleanup of observers, mailbox, etc\n        return this;\n      case 'error':\n        this._error(this._snapshot.error);\n        return this;\n    }\n    if (!this._parent) {\n      this.system.start();\n    }\n    if (this.logic.start) {\n      try {\n        this.logic.start(this._snapshot, this._actorScope);\n      } catch (err) {\n        this._snapshot = {\n          ...this._snapshot,\n          status: 'error',\n          error: err\n        };\n        this._error(err);\n        return this;\n      }\n    }\n\n    // TODO: this notifies all subscribers but usually this is redundant\n    // there is no real change happening here\n    // we need to rethink if this needs to be refactored\n    this.update(this._snapshot, initEvent);\n    if (this.options.devTools) {\n      this.attachDevTools();\n    }\n    this.mailbox.start();\n    return this;\n  }\n  _process(event) {\n    let nextState;\n    let caughtError;\n    try {\n      nextState = this.logic.transition(this._snapshot, event, this._actorScope);\n    } catch (err) {\n      // we wrap it in a box so we can rethrow it later even if falsy value gets caught here\n      caughtError = {\n        err\n      };\n    }\n    if (caughtError) {\n      const {\n        err\n      } = caughtError;\n      this._snapshot = {\n        ...this._snapshot,\n        status: 'error',\n        error: err\n      };\n      this._error(err);\n      return;\n    }\n    this.update(nextState, event);\n    if (event.type === XSTATE_STOP) {\n      this._stopProcedure();\n      this._complete();\n    }\n  }\n  _stop() {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return this;\n    }\n    this.mailbox.clear();\n    if (this._processingStatus === ProcessingStatus.NotStarted) {\n      this._processingStatus = ProcessingStatus.Stopped;\n      return this;\n    }\n    this.mailbox.enqueue({\n      type: XSTATE_STOP\n    });\n    return this;\n  }\n\n  /** Stops the Actor and unsubscribe all listeners. */\n  stop() {\n    if (this._parent) {\n      throw new Error('A non-root actor cannot be stopped directly.');\n    }\n    return this._stop();\n  }\n  _complete() {\n    for (const observer of this.observers) {\n      try {\n        observer.complete?.();\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    this.observers.clear();\n  }\n  _reportError(err) {\n    if (!this.observers.size) {\n      if (!this._parent) {\n        reportUnhandledError(err);\n      }\n      return;\n    }\n    let reportError = false;\n    for (const observer of this.observers) {\n      const errorListener = observer.error;\n      reportError ||= !errorListener;\n      try {\n        errorListener?.(err);\n      } catch (err2) {\n        reportUnhandledError(err2);\n      }\n    }\n    this.observers.clear();\n    if (reportError) {\n      reportUnhandledError(err);\n    }\n  }\n  _error(err) {\n    this._stopProcedure();\n    this._reportError(err);\n    if (this._parent) {\n      this.system._relay(this, this._parent, createErrorActorEvent(this.id, err));\n    }\n  }\n  // TODO: atm children don't belong entirely to the actor so\n  // in a way - it's not even super aware of them\n  // so we can't stop them from here but we really should!\n  // right now, they are being stopped within the machine's transition\n  // but that could throw and leave us with \"orphaned\" active actors\n  _stopProcedure() {\n    if (this._processingStatus !== ProcessingStatus.Running) {\n      // Actor already stopped; do nothing\n      return this;\n    }\n\n    // Cancel all delayed events\n    this.system.scheduler.cancelAll(this);\n\n    // TODO: mailbox.reset\n    this.mailbox.clear();\n    // TODO: after `stop` we must prepare ourselves for receiving events again\n    // events sent *after* stop signal must be queued\n    // it seems like this should be the common behavior for all of our consumers\n    // so perhaps this should be unified somehow for all of them\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this._processingStatus = ProcessingStatus.Stopped;\n    this.system._unregister(this);\n    return this;\n  }\n\n  /** @internal */\n  _send(event) {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      // do nothing\n      {\n        const eventString = JSON.stringify(event);\n        console.warn(`Event \"${event.type}\" was sent to stopped actor \"${this.id} (${this.sessionId})\". This actor has already reached its final state, and will not transition.\\nEvent: ${eventString}`);\n      }\n      return;\n    }\n    this.mailbox.enqueue(event);\n  }\n\n  /**\n   * Sends an event to the running Actor to trigger a transition.\n   *\n   * @param event The event to send\n   */\n  send(event) {\n    if (typeof event === 'string') {\n      throw new Error(`Only event objects may be sent to actors; use .send({ type: \"${event}\" }) instead`);\n    }\n    this.system._relay(undefined, this, event);\n  }\n  attachDevTools() {\n    const {\n      devTools\n    } = this.options;\n    if (devTools) {\n      const resolvedDevToolsAdapter = typeof devTools === 'function' ? devTools : _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.devToolsAdapter;\n      resolvedDevToolsAdapter(this);\n    }\n  }\n  toJSON() {\n    return {\n      xstate$$type: $$ACTOR_TYPE,\n      id: this.id\n    };\n  }\n\n  /**\n   * Obtain the internal state of the actor, which can be persisted.\n   *\n   * @remarks\n   * The internal state can be persisted from any actor, not only machines.\n   *\n   * Note that the persisted state is not the same as the snapshot from\n   * {@link Actor.getSnapshot}. Persisted state represents the internal state of\n   * the actor, while snapshots represent the actor's last emitted value.\n   *\n   * Can be restored with {@link ActorOptions.state}\n   * @see https://stately.ai/docs/persistence\n   */\n\n  getPersistedSnapshot(options) {\n    return this.logic.getPersistedSnapshot(this._snapshot, options);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n\n  /**\n   * Read an actor’s snapshot synchronously.\n   *\n   * @remarks\n   * The snapshot represent an actor's last emitted value.\n   *\n   * When an actor receives an event, its internal state may change. An actor\n   * may emit a snapshot when a state transition occurs.\n   *\n   * Note that some actors, such as callback actors generated with\n   * `fromCallback`, will not emit snapshots.\n   * @see {@link Actor.subscribe} to subscribe to an actor’s snapshot values.\n   * @see {@link Actor.getPersistedSnapshot} to persist the internal state of an actor (which is more than just a snapshot).\n   */\n  getSnapshot() {\n    if (!this._snapshot) {\n      throw new Error(`Snapshot can't be read while the actor initializes itself`);\n    }\n    return this._snapshot;\n  }\n}\n/**\n * Creates a new actor instance for the given actor logic with the provided\n * options, if any.\n *\n * @remarks\n * When you create an actor from actor logic via `createActor(logic)`, you\n * implicitly create an actor system where the created actor is the root actor.\n * Any actors spawned from this root actor and its descendants are part of that\n * actor system.\n * @example\n *\n * ```ts\n * import { createActor } from 'xstate';\n * import { someActorLogic } from './someActorLogic.ts';\n *\n * // Creating the actor, which implicitly creates an actor system with itself as the root actor\n * const actor = createActor(someActorLogic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n *\n * // Actors must be started by calling `actor.start()`, which will also start the actor system.\n * actor.start();\n *\n * // Actors can receive events\n * actor.send({ type: 'someEvent' });\n *\n * // You can stop root actors by calling `actor.stop()`, which will also stop the actor system and all actors in that system.\n * actor.stop();\n * ```\n *\n * @param logic - The actor logic to create an actor from. For a state machine\n *   actor logic creator, see {@link createMachine}. Other actor logic creators\n *   include {@link fromCallback}, {@link fromEventObservable},\n *   {@link fromObservable}, {@link fromPromise}, and {@link fromTransition}.\n * @param options - Actor options\n */\nfunction createActor(logic, ...[options]) {\n  return new Actor(logic, options);\n}\n\n/**\n * Creates a new Interpreter instance for the given machine with the provided\n * options, if any.\n *\n * @deprecated Use `createActor` instead\n * @alias\n */\nconst interpret = createActor;\n\n/**\n * @deprecated Use `Actor` instead.\n * @alias\n */\n\nfunction resolveCancel(_, snapshot, actionArgs, actionParams, {\n  sendId\n}) {\n  const resolvedSendId = typeof sendId === 'function' ? sendId(actionArgs, actionParams) : sendId;\n  return [snapshot, {\n    sendId: resolvedSendId\n  }, undefined];\n}\nfunction executeCancel(actorScope, params) {\n  actorScope.defer(() => {\n    actorScope.system.scheduler.cancel(actorScope.self, params.sendId);\n  });\n}\n/**\n * Cancels a delayed `sendTo(...)` action that is waiting to be executed. The\n * canceled `sendTo(...)` action will not send its event or execute, unless the\n * `delay` has already elapsed before `cancel(...)` is called.\n *\n * @example\n *\n * ```ts\n * import { createMachine, sendTo, cancel } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     sendEvent: {\n *       actions: sendTo(\n *         'some-actor',\n *         { type: 'someEvent' },\n *         {\n *           id: 'some-id',\n *           delay: 1000\n *         }\n *       )\n *     },\n *     cancelEvent: {\n *       actions: cancel('some-id')\n *     }\n *   }\n * });\n * ```\n *\n * @param sendId The `id` of the `sendTo(...)` action to cancel.\n */\nfunction cancel(sendId) {\n  function cancel(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  cancel.type = 'xstate.cancel';\n  cancel.sendId = sendId;\n  cancel.resolve = resolveCancel;\n  cancel.execute = executeCancel;\n  return cancel;\n}\n\nfunction resolveSpawn(actorScope, snapshot, actionArgs, _actionParams, {\n  id,\n  systemId,\n  src,\n  input,\n  syncSnapshot\n}) {\n  const logic = typeof src === 'string' ? resolveReferencedActor(snapshot.machine, src) : src;\n  const resolvedId = typeof id === 'function' ? id(actionArgs) : id;\n  let actorRef;\n  let resolvedInput = undefined;\n  if (logic) {\n    resolvedInput = typeof input === 'function' ? input({\n      context: snapshot.context,\n      event: actionArgs.event,\n      self: actorScope.self\n    }) : input;\n    actorRef = createActor(logic, {\n      id: resolvedId,\n      src,\n      parent: actorScope.self,\n      syncSnapshot,\n      systemId,\n      input: resolvedInput\n    });\n  }\n  if (!actorRef) {\n    console.warn(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-base-to-string\n    `Actor type '${src}' not found in machine '${actorScope.id}'.`);\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children: {\n      ...snapshot.children,\n      [resolvedId]: actorRef\n    }\n  }), {\n    id,\n    systemId,\n    actorRef,\n    src,\n    input: resolvedInput\n  }, undefined];\n}\nfunction executeSpawn(actorScope, {\n  actorRef\n}) {\n  if (!actorRef) {\n    return;\n  }\n  actorScope.defer(() => {\n    if (actorRef._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    actorRef.start();\n  });\n}\nfunction spawnChild(...[src, {\n  id,\n  systemId,\n  input,\n  syncSnapshot = false\n} = {}]) {\n  function spawnChild(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  spawnChild.type = 'xstate.spawnChild';\n  spawnChild.id = id;\n  spawnChild.systemId = systemId;\n  spawnChild.src = src;\n  spawnChild.input = input;\n  spawnChild.syncSnapshot = syncSnapshot;\n  spawnChild.resolve = resolveSpawn;\n  spawnChild.execute = executeSpawn;\n  return spawnChild;\n}\n\nfunction resolveStop(_, snapshot, args, actionParams, {\n  actorRef\n}) {\n  const actorRefOrString = typeof actorRef === 'function' ? actorRef(args, actionParams) : actorRef;\n  const resolvedActorRef = typeof actorRefOrString === 'string' ? snapshot.children[actorRefOrString] : actorRefOrString;\n  let children = snapshot.children;\n  if (resolvedActorRef) {\n    children = {\n      ...children\n    };\n    delete children[resolvedActorRef.id];\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children\n  }), resolvedActorRef, undefined];\n}\nfunction executeStop(actorScope, actorRef) {\n  if (!actorRef) {\n    return;\n  }\n\n  // we need to eagerly unregister it here so a new actor with the same systemId can be registered immediately\n  // since we defer actual stopping of the actor but we don't defer actor creations (and we can't do that)\n  // this could throw on `systemId` collision, for example, when dealing with reentering transitions\n  actorScope.system._unregister(actorRef);\n\n  // this allows us to prevent an actor from being started if it gets stopped within the same macrostep\n  // this can happen, for example, when the invoking state is being exited immediately by an always transition\n  if (actorRef._processingStatus !== ProcessingStatus.Running) {\n    actorScope.stopChild(actorRef);\n    return;\n  }\n  // stopping a child enqueues a stop event in the child actor's mailbox\n  // we need for all of the already enqueued events to be processed before we stop the child\n  // the parent itself might want to send some events to a child (for example from exit actions on the invoking state)\n  // and we don't want to ignore those events\n  actorScope.defer(() => {\n    actorScope.stopChild(actorRef);\n  });\n}\n/**\n * Stops a child actor.\n *\n * @param actorRef The actor to stop.\n */\nfunction stopChild(actorRef) {\n  function stop(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  stop.type = 'xstate.stopChild';\n  stop.actorRef = actorRef;\n  stop.resolve = resolveStop;\n  stop.execute = executeStop;\n  return stop;\n}\n\n/**\n * Stops a child actor.\n *\n * @deprecated Use `stopChild(...)` instead\n * @alias\n */\nconst stop = stopChild;\n\nfunction checkStateIn(snapshot, _, {\n  stateValue\n}) {\n  if (typeof stateValue === 'string' && isStateId(stateValue)) {\n    const target = snapshot.machine.getStateNodeById(stateValue);\n    return snapshot._nodes.some(sn => sn === target);\n  }\n  return snapshot.matches(stateValue);\n}\nfunction stateIn(stateValue) {\n  function stateIn() {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  stateIn.check = checkStateIn;\n  stateIn.stateValue = stateValue;\n  return stateIn;\n}\nfunction checkNot(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return !evaluateGuard(guards[0], context, event, snapshot);\n}\n\n/**\n * Higher-order guard that evaluates to `true` if the `guard` passed to it\n * evaluates to `false`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, not } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => false\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: not('someNamedGuard'),\n *       actions: () => {\n *         // will be executed if guard in `not(...)`\n *         // evaluates to `false`\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard\n */\nfunction not(guard) {\n  function not(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  not.check = checkNot;\n  not.guards = [guard];\n  return not;\n}\nfunction checkAnd(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.every(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if all `guards` passed to it\n * evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, and } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: and([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if all guards in `and(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction and(guards) {\n  function and(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  and.check = checkAnd;\n  and.guards = guards;\n  return and;\n}\nfunction checkOr(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.some(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if any of the `guards` passed to\n * it evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, or } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: or([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if any of the guards in `or(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction or(guards) {\n  function or(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  or.check = checkOr;\n  or.guards = guards;\n  return or;\n}\n\n// TODO: throw on cycles (depth check should be enough)\nfunction evaluateGuard(guard, context, event, snapshot) {\n  const {\n    machine\n  } = snapshot;\n  const isInline = typeof guard === 'function';\n  const resolved = isInline ? guard : machine.implementations.guards[typeof guard === 'string' ? guard : guard.type];\n  if (!isInline && !resolved) {\n    throw new Error(`Guard '${typeof guard === 'string' ? guard : guard.type}' is not implemented.'.`);\n  }\n  if (typeof resolved !== 'function') {\n    return evaluateGuard(resolved, context, event, snapshot);\n  }\n  const guardArgs = {\n    context,\n    event\n  };\n  const guardParams = isInline || typeof guard === 'string' ? undefined : 'params' in guard ? typeof guard.params === 'function' ? guard.params({\n    context,\n    event\n  }) : guard.params : undefined;\n  if (!('check' in resolved)) {\n    // the existing type of `.guards` assumes non-nullable `TExpressionGuard`\n    // inline guards expect `TExpressionGuard` to be set to `undefined`\n    // it's fine to cast this here, our logic makes sure that we call those 2 \"variants\" correctly\n    return resolved(guardArgs, guardParams);\n  }\n  const builtinGuard = resolved;\n  return builtinGuard.check(snapshot, guardArgs, resolved // this holds all params\n  );\n}\n\nconst isAtomicStateNode = stateNode => stateNode.type === 'atomic' || stateNode.type === 'final';\nfunction getChildren(stateNode) {\n  return Object.values(stateNode.states).filter(sn => sn.type !== 'history');\n}\nfunction getProperAncestors(stateNode, toStateNode) {\n  const ancestors = [];\n  if (toStateNode === stateNode) {\n    return ancestors;\n  }\n\n  // add all ancestors\n  let m = stateNode.parent;\n  while (m && m !== toStateNode) {\n    ancestors.push(m);\n    m = m.parent;\n  }\n  return ancestors;\n}\nfunction getAllStateNodes(stateNodes) {\n  const nodeSet = new Set(stateNodes);\n  const adjList = getAdjList(nodeSet);\n\n  // add descendants\n  for (const s of nodeSet) {\n    // if previously active, add existing child nodes\n    if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n      getInitialStateNodesWithTheirAncestors(s).forEach(sn => nodeSet.add(sn));\n    } else {\n      if (s.type === 'parallel') {\n        for (const child of getChildren(s)) {\n          if (child.type === 'history') {\n            continue;\n          }\n          if (!nodeSet.has(child)) {\n            const initialStates = getInitialStateNodesWithTheirAncestors(child);\n            for (const initialStateNode of initialStates) {\n              nodeSet.add(initialStateNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // add all ancestors\n  for (const s of nodeSet) {\n    let m = s.parent;\n    while (m) {\n      nodeSet.add(m);\n      m = m.parent;\n    }\n  }\n  return nodeSet;\n}\nfunction getValueFromAdj(baseNode, adjList) {\n  const childStateNodes = adjList.get(baseNode);\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n  if (baseNode.type === 'compound') {\n    const childStateNode = childStateNodes[0];\n    if (childStateNode) {\n      if (isAtomicStateNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n  const stateValue = {};\n  for (const childStateNode of childStateNodes) {\n    stateValue[childStateNode.key] = getValueFromAdj(childStateNode, adjList);\n  }\n  return stateValue;\n}\nfunction getAdjList(stateNodes) {\n  const adjList = new Map();\n  for (const s of stateNodes) {\n    if (!adjList.has(s)) {\n      adjList.set(s, []);\n    }\n    if (s.parent) {\n      if (!adjList.has(s.parent)) {\n        adjList.set(s.parent, []);\n      }\n      adjList.get(s.parent).push(s);\n    }\n  }\n  return adjList;\n}\nfunction getStateValue(rootNode, stateNodes) {\n  const config = getAllStateNodes(stateNodes);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction isInFinalState(stateNodeSet, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(s => s.type === 'final' && stateNodeSet.has(s));\n  }\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(sn => isInFinalState(stateNodeSet, sn));\n  }\n  return stateNode.type === 'final';\n}\nconst isStateId = str => str[0] === STATE_IDENTIFIER;\nfunction getCandidates(stateNode, receivedEventType) {\n  const candidates = stateNode.transitions.get(receivedEventType) || [...stateNode.transitions.keys()].filter(eventDescriptor => {\n    // check if transition is a wildcard transition,\n    // which matches any non-transient events\n    if (eventDescriptor === WILDCARD) {\n      return true;\n    }\n    if (!eventDescriptor.endsWith('.*')) {\n      return false;\n    }\n    if (/.*\\*.+/.test(eventDescriptor)) {\n      console.warn(`Wildcards can only be the last token of an event descriptor (e.g., \"event.*\") or the entire event descriptor (\"*\"). Check the \"${eventDescriptor}\" event.`);\n    }\n    const partialEventTokens = eventDescriptor.split('.');\n    const eventTokens = receivedEventType.split('.');\n    for (let tokenIndex = 0; tokenIndex < partialEventTokens.length; tokenIndex++) {\n      const partialEventToken = partialEventTokens[tokenIndex];\n      const eventToken = eventTokens[tokenIndex];\n      if (partialEventToken === '*') {\n        const isLastToken = tokenIndex === partialEventTokens.length - 1;\n        if (!isLastToken) {\n          console.warn(`Infix wildcards in transition events are not allowed. Check the \"${eventDescriptor}\" transition.`);\n        }\n        return isLastToken;\n      }\n      if (partialEventToken !== eventToken) {\n        return false;\n      }\n    }\n    return true;\n  }).sort((a, b) => b.length - a.length).flatMap(key => stateNode.transitions.get(key));\n  return candidates;\n}\n\n/** All delayed transitions from the config. */\nfunction getDelayedTransitions(stateNode) {\n  const afterConfig = stateNode.config.after;\n  if (!afterConfig) {\n    return [];\n  }\n  const mutateEntryExit = delay => {\n    const afterEvent = createAfterEvent(delay, stateNode.id);\n    const eventType = afterEvent.type;\n    stateNode.entry.push(raise(afterEvent, {\n      id: eventType,\n      delay\n    }));\n    stateNode.exit.push(cancel(eventType));\n    return eventType;\n  };\n  const delayedTransitions = Object.keys(afterConfig).flatMap(delay => {\n    const configTransition = afterConfig[delay];\n    const resolvedTransition = typeof configTransition === 'string' ? {\n      target: configTransition\n    } : configTransition;\n    const resolvedDelay = Number.isNaN(+delay) ? delay : +delay;\n    const eventType = mutateEntryExit(resolvedDelay);\n    return toArray(resolvedTransition).map(transition => ({\n      ...transition,\n      event: eventType,\n      delay: resolvedDelay\n    }));\n  });\n  return delayedTransitions.map(delayedTransition => {\n    const {\n      delay\n    } = delayedTransition;\n    return {\n      ...formatTransition(stateNode, delayedTransition.event, delayedTransition),\n      delay\n    };\n  });\n}\nfunction formatTransition(stateNode, descriptor, transitionConfig) {\n  const normalizedTarget = normalizeTarget(transitionConfig.target);\n  const reenter = transitionConfig.reenter ?? false;\n  const target = resolveTarget(stateNode, normalizedTarget);\n\n  // TODO: should this be part of a lint rule instead?\n  if (transitionConfig.cond) {\n    throw new Error(`State \"${stateNode.id}\" has declared \\`cond\\` for one of its transitions. This property has been renamed to \\`guard\\`. Please update your code.`);\n  }\n  const transition = {\n    ...transitionConfig,\n    actions: toArray(transitionConfig.actions),\n    guard: transitionConfig.guard,\n    target,\n    source: stateNode,\n    reenter,\n    eventType: descriptor,\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: target ? target.map(t => `#${t.id}`) : undefined\n    })\n  };\n  return transition;\n}\nfunction formatTransitions(stateNode) {\n  const transitions = new Map();\n  if (stateNode.config.on) {\n    for (const descriptor of Object.keys(stateNode.config.on)) {\n      if (descriptor === NULL_EVENT) {\n        throw new Error('Null events (\"\") cannot be specified as a transition key. Use `always: { ... }` instead.');\n      }\n      const transitionsConfig = stateNode.config.on[descriptor];\n      transitions.set(descriptor, toTransitionConfigArray(transitionsConfig).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  if (stateNode.config.onDone) {\n    const descriptor = `xstate.done.state.${stateNode.id}`;\n    transitions.set(descriptor, toTransitionConfigArray(stateNode.config.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n  }\n  for (const invokeDef of stateNode.invoke) {\n    if (invokeDef.onDone) {\n      const descriptor = `xstate.done.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onError) {\n      const descriptor = `xstate.error.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onError).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onSnapshot) {\n      const descriptor = `xstate.snapshot.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onSnapshot).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  for (const delayedTransition of stateNode.after) {\n    let existing = transitions.get(delayedTransition.eventType);\n    if (!existing) {\n      existing = [];\n      transitions.set(delayedTransition.eventType, existing);\n    }\n    existing.push(delayedTransition);\n  }\n  return transitions;\n}\nfunction formatInitialTransition(stateNode, _target) {\n  const resolvedTarget = typeof _target === 'string' ? stateNode.states[_target] : _target ? stateNode.states[_target.target] : undefined;\n  if (!resolvedTarget && _target) {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-base-to-string\n    `Initial state node \"${_target}\" not found on parent state node #${stateNode.id}`);\n  }\n  const transition = {\n    source: stateNode,\n    actions: !_target || typeof _target === 'string' ? [] : toArray(_target.actions),\n    eventType: null,\n    reenter: false,\n    target: resolvedTarget ? [resolvedTarget] : [],\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: resolvedTarget ? [`#${resolvedTarget.id}`] : []\n    })\n  };\n  return transition;\n}\nfunction resolveTarget(stateNode, targets) {\n  if (targets === undefined) {\n    // an undefined target signals that the state node should not transition from that state when receiving that event\n    return undefined;\n  }\n  return targets.map(target => {\n    if (typeof target !== 'string') {\n      return target;\n    }\n    if (isStateId(target)) {\n      return stateNode.machine.getStateNodeById(target);\n    }\n    const isInternalTarget = target[0] === STATE_DELIMITER;\n    // If internal target is defined on machine,\n    // do not include machine key on target\n    if (isInternalTarget && !stateNode.parent) {\n      return getStateNodeByPath(stateNode, target.slice(1));\n    }\n    const resolvedTarget = isInternalTarget ? stateNode.key + target : target;\n    if (stateNode.parent) {\n      try {\n        const targetStateNode = getStateNodeByPath(stateNode.parent, resolvedTarget);\n        return targetStateNode;\n      } catch (err) {\n        throw new Error(`Invalid transition definition for state node '${stateNode.id}':\\n${err.message}`);\n      }\n    } else {\n      throw new Error(`Invalid target: \"${target}\" is not a valid target from the root node. Did you mean \".${target}\"?`);\n    }\n  });\n}\nfunction resolveHistoryDefaultTransition(stateNode) {\n  const normalizedTarget = normalizeTarget(stateNode.config.target);\n  if (!normalizedTarget) {\n    return stateNode.parent.initial;\n  }\n  return {\n    target: normalizedTarget.map(t => typeof t === 'string' ? getStateNodeByPath(stateNode.parent, t) : t)\n  };\n}\nfunction isHistoryNode(stateNode) {\n  return stateNode.type === 'history';\n}\nfunction getInitialStateNodesWithTheirAncestors(stateNode) {\n  const states = getInitialStateNodes(stateNode);\n  for (const initialState of states) {\n    for (const ancestor of getProperAncestors(initialState, stateNode)) {\n      states.add(ancestor);\n    }\n  }\n  return states;\n}\nfunction getInitialStateNodes(stateNode) {\n  const set = new Set();\n  function iter(descStateNode) {\n    if (set.has(descStateNode)) {\n      return;\n    }\n    set.add(descStateNode);\n    if (descStateNode.type === 'compound') {\n      iter(descStateNode.initial.target[0]);\n    } else if (descStateNode.type === 'parallel') {\n      for (const child of getChildren(descStateNode)) {\n        iter(child);\n      }\n    }\n  }\n  iter(stateNode);\n  return set;\n}\n/** Returns the child state node from its relative `stateKey`, or throws. */\nfunction getStateNode(stateNode, stateKey) {\n  if (isStateId(stateKey)) {\n    return stateNode.machine.getStateNodeById(stateKey);\n  }\n  if (!stateNode.states) {\n    throw new Error(`Unable to retrieve child state '${stateKey}' from '${stateNode.id}'; no child states exist.`);\n  }\n  const result = stateNode.states[stateKey];\n  if (!result) {\n    throw new Error(`Child state '${stateKey}' does not exist on '${stateNode.id}'`);\n  }\n  return result;\n}\n\n/**\n * Returns the relative state node from the given `statePath`, or throws.\n *\n * @param statePath The string or string array relative path to the state node.\n */\nfunction getStateNodeByPath(stateNode, statePath) {\n  if (typeof statePath === 'string' && isStateId(statePath)) {\n    try {\n      return stateNode.machine.getStateNodeById(statePath);\n    } catch {\n      // try individual paths\n      // throw e;\n    }\n  }\n  const arrayStatePath = toStatePath(statePath).slice();\n  let currentStateNode = stateNode;\n  while (arrayStatePath.length) {\n    const key = arrayStatePath.shift();\n    if (!key.length) {\n      break;\n    }\n    currentStateNode = getStateNode(currentStateNode, key);\n  }\n  return currentStateNode;\n}\n\n/**\n * Returns the state nodes represented by the current state value.\n *\n * @param stateValue The state value or State instance\n */\nfunction getStateNodes(stateNode, stateValue) {\n  if (typeof stateValue === 'string') {\n    const childStateNode = stateNode.states[stateValue];\n    if (!childStateNode) {\n      throw new Error(`State '${stateValue}' does not exist on '${stateNode.id}'`);\n    }\n    return [stateNode, childStateNode];\n  }\n  const childStateKeys = Object.keys(stateValue);\n  const childStateNodes = childStateKeys.map(subStateKey => getStateNode(stateNode, subStateKey)).filter(Boolean);\n  return [stateNode.machine.root, stateNode].concat(childStateNodes, childStateKeys.reduce((allSubStateNodes, subStateKey) => {\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    if (!subStateNode) {\n      return allSubStateNodes;\n    }\n    const subStateNodes = getStateNodes(subStateNode, stateValue[subStateKey]);\n    return allSubStateNodes.concat(subStateNodes);\n  }, []));\n}\nfunction transitionAtomicNode(stateNode, stateValue, snapshot, event) {\n  const childStateNode = getStateNode(stateNode, stateValue);\n  const next = childStateNode.next(snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionCompoundNode(stateNode, stateValue, snapshot, event) {\n  const subStateKeys = Object.keys(stateValue);\n  const childStateNode = getStateNode(stateNode, subStateKeys[0]);\n  const next = transitionNode(childStateNode, stateValue[subStateKeys[0]], snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionParallelNode(stateNode, stateValue, snapshot, event) {\n  const allInnerTransitions = [];\n  for (const subStateKey of Object.keys(stateValue)) {\n    const subStateValue = stateValue[subStateKey];\n    if (!subStateValue) {\n      continue;\n    }\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    const innerTransitions = transitionNode(subStateNode, subStateValue, snapshot, event);\n    if (innerTransitions) {\n      allInnerTransitions.push(...innerTransitions);\n    }\n  }\n  if (!allInnerTransitions.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return allInnerTransitions;\n}\nfunction transitionNode(stateNode, stateValue, snapshot, event) {\n  // leaf node\n  if (typeof stateValue === 'string') {\n    return transitionAtomicNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // compound node\n  if (Object.keys(stateValue).length === 1) {\n    return transitionCompoundNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // parallel node\n  return transitionParallelNode(stateNode, stateValue, snapshot, event);\n}\nfunction getHistoryNodes(stateNode) {\n  return Object.keys(stateNode.states).map(key => stateNode.states[key]).filter(sn => sn.type === 'history');\n}\nfunction isDescendant(childStateNode, parentStateNode) {\n  let marker = childStateNode;\n  while (marker.parent && marker.parent !== parentStateNode) {\n    marker = marker.parent;\n  }\n  return marker.parent === parentStateNode;\n}\nfunction hasIntersection(s1, s2) {\n  const set1 = new Set(s1);\n  const set2 = new Set(s2);\n  for (const item of set1) {\n    if (set2.has(item)) {\n      return true;\n    }\n  }\n  for (const item of set2) {\n    if (set1.has(item)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction removeConflictingTransitions(enabledTransitions, stateNodeSet, historyValue) {\n  const filteredTransitions = new Set();\n  for (const t1 of enabledTransitions) {\n    let t1Preempted = false;\n    const transitionsToRemove = new Set();\n    for (const t2 of filteredTransitions) {\n      if (hasIntersection(computeExitSet([t1], stateNodeSet, historyValue), computeExitSet([t2], stateNodeSet, historyValue))) {\n        if (isDescendant(t1.source, t2.source)) {\n          transitionsToRemove.add(t2);\n        } else {\n          t1Preempted = true;\n          break;\n        }\n      }\n    }\n    if (!t1Preempted) {\n      for (const t3 of transitionsToRemove) {\n        filteredTransitions.delete(t3);\n      }\n      filteredTransitions.add(t1);\n    }\n  }\n  return Array.from(filteredTransitions);\n}\nfunction findLeastCommonAncestor(stateNodes) {\n  const [head, ...tail] = stateNodes;\n  for (const ancestor of getProperAncestors(head, undefined)) {\n    if (tail.every(sn => isDescendant(sn, ancestor))) {\n      return ancestor;\n    }\n  }\n}\nfunction getEffectiveTargetStates(transition, historyValue) {\n  if (!transition.target) {\n    return [];\n  }\n  const targets = new Set();\n  for (const targetNode of transition.target) {\n    if (isHistoryNode(targetNode)) {\n      if (historyValue[targetNode.id]) {\n        for (const node of historyValue[targetNode.id]) {\n          targets.add(node);\n        }\n      } else {\n        for (const node of getEffectiveTargetStates(resolveHistoryDefaultTransition(targetNode), historyValue)) {\n          targets.add(node);\n        }\n      }\n    } else {\n      targets.add(targetNode);\n    }\n  }\n  return [...targets];\n}\nfunction getTransitionDomain(transition, historyValue) {\n  const targetStates = getEffectiveTargetStates(transition, historyValue);\n  if (!targetStates) {\n    return;\n  }\n  if (!transition.reenter && targetStates.every(target => target === transition.source || isDescendant(target, transition.source))) {\n    return transition.source;\n  }\n  const lca = findLeastCommonAncestor(targetStates.concat(transition.source));\n  if (lca) {\n    return lca;\n  }\n\n  // at this point we know that it's a root transition since LCA couldn't be found\n  if (transition.reenter) {\n    return;\n  }\n  return transition.source.machine.root;\n}\nfunction computeExitSet(transitions, stateNodeSet, historyValue) {\n  const statesToExit = new Set();\n  for (const t of transitions) {\n    if (t.target?.length) {\n      const domain = getTransitionDomain(t, historyValue);\n      if (t.reenter && t.source === domain) {\n        statesToExit.add(domain);\n      }\n      for (const stateNode of stateNodeSet) {\n        if (isDescendant(stateNode, domain)) {\n          statesToExit.add(stateNode);\n        }\n      }\n    }\n  }\n  return [...statesToExit];\n}\nfunction areStateNodeCollectionsEqual(prevStateNodes, nextStateNodeSet) {\n  if (prevStateNodes.length !== nextStateNodeSet.size) {\n    return false;\n  }\n  for (const node of prevStateNodes) {\n    if (!nextStateNodeSet.has(node)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** https://www.w3.org/TR/scxml/#microstepProcedure */\nfunction microstep(transitions, currentSnapshot, actorScope, event, isInitial, internalQueue) {\n  if (!transitions.length) {\n    return currentSnapshot;\n  }\n  const mutStateNodeSet = new Set(currentSnapshot._nodes);\n  let historyValue = currentSnapshot.historyValue;\n  const filteredTransitions = removeConflictingTransitions(transitions, mutStateNodeSet, historyValue);\n  let nextState = currentSnapshot;\n\n  // Exit states\n  if (!isInitial) {\n    [nextState, historyValue] = exitStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, historyValue, internalQueue, actorScope.actionExecutor);\n  }\n\n  // Execute transition content\n  nextState = resolveActionsAndContext(nextState, event, actorScope, filteredTransitions.flatMap(t => t.actions), internalQueue, undefined);\n\n  // Enter states\n  nextState = enterStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial);\n  const nextStateNodes = [...mutStateNodeSet];\n  if (nextState.status === 'done') {\n    nextState = resolveActionsAndContext(nextState, event, actorScope, nextStateNodes.sort((a, b) => b.order - a.order).flatMap(state => state.exit), internalQueue, undefined);\n  }\n\n  // eslint-disable-next-line no-useless-catch\n  try {\n    if (historyValue === currentSnapshot.historyValue && areStateNodeCollectionsEqual(currentSnapshot._nodes, mutStateNodeSet)) {\n      return nextState;\n    }\n    return cloneMachineSnapshot(nextState, {\n      _nodes: nextStateNodes,\n      historyValue\n    });\n  } catch (e) {\n    // TODO: Refactor this once proper error handling is implemented.\n    // See https://github.com/statelyai/rfcs/pull/4\n    throw e;\n  }\n}\nfunction getMachineOutput(snapshot, event, actorScope, rootNode, rootCompletionNode) {\n  if (rootNode.output === undefined) {\n    return;\n  }\n  const doneStateEvent = createDoneStateEvent(rootCompletionNode.id, rootCompletionNode.output !== undefined && rootCompletionNode.parent ? resolveOutput(rootCompletionNode.output, snapshot.context, event, actorScope.self) : undefined);\n  return resolveOutput(rootNode.output, snapshot.context, doneStateEvent, actorScope.self);\n}\nfunction enterStates(currentSnapshot, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial) {\n  let nextSnapshot = currentSnapshot;\n  const statesToEnter = new Set();\n  // those are states that were directly targeted or indirectly targeted by the explicit target\n  // in other words, those are states for which initial actions should be executed\n  // when we target `#deep_child` initial actions of its ancestors shouldn't be executed\n  const statesForDefaultEntry = new Set();\n  computeEntrySet(filteredTransitions, historyValue, statesForDefaultEntry, statesToEnter);\n\n  // In the initial state, the root state node is \"entered\".\n  if (isInitial) {\n    statesForDefaultEntry.add(currentSnapshot.machine.root);\n  }\n  const completedNodes = new Set();\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    mutStateNodeSet.add(stateNodeToEnter);\n    const actions = [];\n\n    // Add entry actions\n    actions.push(...stateNodeToEnter.entry);\n    for (const invokeDef of stateNodeToEnter.invoke) {\n      actions.push(spawnChild(invokeDef.src, {\n        ...invokeDef,\n        syncSnapshot: !!invokeDef.onSnapshot\n      }));\n    }\n    if (statesForDefaultEntry.has(stateNodeToEnter)) {\n      const initialActions = stateNodeToEnter.initial.actions;\n      actions.push(...initialActions);\n    }\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, actions, internalQueue, stateNodeToEnter.invoke.map(invokeDef => invokeDef.id));\n    if (stateNodeToEnter.type === 'final') {\n      const parent = stateNodeToEnter.parent;\n      let ancestorMarker = parent?.type === 'parallel' ? parent : parent?.parent;\n      let rootCompletionNode = ancestorMarker || stateNodeToEnter;\n      if (parent?.type === 'compound') {\n        internalQueue.push(createDoneStateEvent(parent.id, stateNodeToEnter.output !== undefined ? resolveOutput(stateNodeToEnter.output, nextSnapshot.context, event, actorScope.self) : undefined));\n      }\n      while (ancestorMarker?.type === 'parallel' && !completedNodes.has(ancestorMarker) && isInFinalState(mutStateNodeSet, ancestorMarker)) {\n        completedNodes.add(ancestorMarker);\n        internalQueue.push(createDoneStateEvent(ancestorMarker.id));\n        rootCompletionNode = ancestorMarker;\n        ancestorMarker = ancestorMarker.parent;\n      }\n      if (ancestorMarker) {\n        continue;\n      }\n      nextSnapshot = cloneMachineSnapshot(nextSnapshot, {\n        status: 'done',\n        output: getMachineOutput(nextSnapshot, event, actorScope, nextSnapshot.machine.root, rootCompletionNode)\n      });\n    }\n  }\n  return nextSnapshot;\n}\nfunction computeEntrySet(transitions, historyValue, statesForDefaultEntry, statesToEnter) {\n  for (const t of transitions) {\n    const domain = getTransitionDomain(t, historyValue);\n    for (const s of t.target || []) {\n      if (!isHistoryNode(s) && (\n      // if the target is different than the source then it will *definitely* be entered\n      t.source !== s ||\n      // we know that the domain can't lie within the source\n      // if it's different than the source then it's outside of it and it means that the target has to be entered as well\n      t.source !== domain ||\n      // reentering transitions always enter the target, even if it's the source itself\n      t.reenter)) {\n        statesToEnter.add(s);\n        statesForDefaultEntry.add(s);\n      }\n      addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n    }\n    const targetStates = getEffectiveTargetStates(t, historyValue);\n    for (const s of targetStates) {\n      const ancestors = getProperAncestors(s, domain);\n      if (domain?.type === 'parallel') {\n        ancestors.push(domain);\n      }\n      addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, !t.source.parent && t.reenter ? undefined : domain);\n    }\n  }\n}\nfunction addDescendantStatesToEnter(stateNode, historyValue, statesForDefaultEntry, statesToEnter) {\n  if (isHistoryNode(stateNode)) {\n    if (historyValue[stateNode.id]) {\n      const historyStateNodes = historyValue[stateNode.id];\n      for (const s of historyStateNodes) {\n        statesToEnter.add(s);\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyStateNodes) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    } else {\n      const historyDefaultTransition = resolveHistoryDefaultTransition(stateNode);\n      for (const s of historyDefaultTransition.target) {\n        statesToEnter.add(s);\n        if (historyDefaultTransition === stateNode.parent?.initial) {\n          statesForDefaultEntry.add(stateNode.parent);\n        }\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyDefaultTransition.target) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    }\n  } else {\n    if (stateNode.type === 'compound') {\n      const [initialState] = stateNode.initial.target;\n      if (!isHistoryNode(initialState)) {\n        statesToEnter.add(initialState);\n        statesForDefaultEntry.add(initialState);\n      }\n      addDescendantStatesToEnter(initialState, historyValue, statesForDefaultEntry, statesToEnter);\n      addProperAncestorStatesToEnter(initialState, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n    } else {\n      if (stateNode.type === 'parallel') {\n        for (const child of getChildren(stateNode).filter(sn => !isHistoryNode(sn))) {\n          if (![...statesToEnter].some(s => isDescendant(s, child))) {\n            if (!isHistoryNode(child)) {\n              statesToEnter.add(child);\n              statesForDefaultEntry.add(child);\n            }\n            addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n          }\n        }\n      }\n    }\n  }\n}\nfunction addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, reentrancyDomain) {\n  for (const anc of ancestors) {\n    if (!reentrancyDomain || isDescendant(anc, reentrancyDomain)) {\n      statesToEnter.add(anc);\n    }\n    if (anc.type === 'parallel') {\n      for (const child of getChildren(anc).filter(sn => !isHistoryNode(sn))) {\n        if (![...statesToEnter].some(s => isDescendant(s, child))) {\n          statesToEnter.add(child);\n          addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n        }\n      }\n    }\n  }\n}\nfunction addProperAncestorStatesToEnter(stateNode, toStateNode, statesToEnter, historyValue, statesForDefaultEntry) {\n  addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, getProperAncestors(stateNode, toStateNode));\n}\nfunction exitStates(currentSnapshot, event, actorScope, transitions, mutStateNodeSet, historyValue, internalQueue, _actionExecutor) {\n  let nextSnapshot = currentSnapshot;\n  const statesToExit = computeExitSet(transitions, mutStateNodeSet, historyValue);\n  statesToExit.sort((a, b) => b.order - a.order);\n  let changedHistory;\n\n  // From SCXML algorithm: https://www.w3.org/TR/scxml/#exitStates\n  for (const exitStateNode of statesToExit) {\n    for (const historyNode of getHistoryNodes(exitStateNode)) {\n      let predicate;\n      if (historyNode.history === 'deep') {\n        predicate = sn => isAtomicStateNode(sn) && isDescendant(sn, exitStateNode);\n      } else {\n        predicate = sn => {\n          return sn.parent === exitStateNode;\n        };\n      }\n      changedHistory ??= {\n        ...historyValue\n      };\n      changedHistory[historyNode.id] = Array.from(mutStateNodeSet).filter(predicate);\n    }\n  }\n  for (const s of statesToExit) {\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, [...s.exit, ...s.invoke.map(def => stopChild(def.id))], internalQueue, undefined);\n    mutStateNodeSet.delete(s);\n  }\n  return [nextSnapshot, changedHistory || historyValue];\n}\nfunction getAction(machine, actionType) {\n  return machine.implementations.actions[actionType];\n}\nfunction resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, extra, retries) {\n  const {\n    machine\n  } = currentSnapshot;\n  let intermediateSnapshot = currentSnapshot;\n  for (const action of actions) {\n    const isInline = typeof action === 'function';\n    const resolvedAction = isInline ? action :\n    // the existing type of `.actions` assumes non-nullable `TExpressionAction`\n    // it's fine to cast this here to get a common type and lack of errors in the rest of the code\n    // our logic below makes sure that we call those 2 \"variants\" correctly\n\n    getAction(machine, typeof action === 'string' ? action : action.type);\n    const actionArgs = {\n      context: intermediateSnapshot.context,\n      event,\n      self: actorScope.self,\n      system: actorScope.system\n    };\n    const actionParams = isInline || typeof action === 'string' ? undefined : 'params' in action ? typeof action.params === 'function' ? action.params({\n      context: intermediateSnapshot.context,\n      event\n    }) : action.params : undefined;\n    if (!resolvedAction || !('resolve' in resolvedAction)) {\n      actorScope.actionExecutor({\n        type: typeof action === 'string' ? action : typeof action === 'object' ? action.type : action.name || '(anonymous)',\n        info: actionArgs,\n        params: actionParams,\n        exec: resolvedAction\n      });\n      continue;\n    }\n    const builtinAction = resolvedAction;\n    const [nextState, params, actions] = builtinAction.resolve(actorScope, intermediateSnapshot, actionArgs, actionParams, resolvedAction,\n    // this holds all params\n    extra);\n    intermediateSnapshot = nextState;\n    if ('retryResolve' in builtinAction) {\n      retries?.push([builtinAction, params]);\n    }\n    if ('execute' in builtinAction) {\n      actorScope.actionExecutor({\n        type: builtinAction.type,\n        info: actionArgs,\n        params,\n        exec: builtinAction.execute.bind(null, actorScope, params)\n      });\n    }\n    if (actions) {\n      intermediateSnapshot = resolveAndExecuteActionsWithContext(intermediateSnapshot, event, actorScope, actions, extra, retries);\n    }\n  }\n  return intermediateSnapshot;\n}\nfunction resolveActionsAndContext(currentSnapshot, event, actorScope, actions, internalQueue, deferredActorIds) {\n  const retries = deferredActorIds ? [] : undefined;\n  const nextState = resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, {\n    internalQueue,\n    deferredActorIds\n  }, retries);\n  retries?.forEach(([builtinAction, params]) => {\n    builtinAction.retryResolve(actorScope, nextState, params);\n  });\n  return nextState;\n}\nfunction macrostep(snapshot, event, actorScope, internalQueue) {\n  if (event.type === WILDCARD) {\n    throw new Error(`An event cannot have the wildcard type ('${WILDCARD}')`);\n  }\n  let nextSnapshot = snapshot;\n  const microstates = [];\n  function addMicrostate(microstate, event, transitions) {\n    actorScope.system._sendInspectionEvent({\n      type: '@xstate.microstep',\n      actorRef: actorScope.self,\n      event,\n      snapshot: microstate,\n      _transitions: transitions\n    });\n    microstates.push(microstate);\n  }\n\n  // Handle stop event\n  if (event.type === XSTATE_STOP) {\n    nextSnapshot = cloneMachineSnapshot(stopChildren(nextSnapshot, event, actorScope), {\n      status: 'stopped'\n    });\n    addMicrostate(nextSnapshot, event, []);\n    return {\n      snapshot: nextSnapshot,\n      microstates\n    };\n  }\n  let nextEvent = event;\n\n  // Assume the state is at rest (no raised events)\n  // Determine the next state based on the next microstep\n  if (nextEvent.type !== XSTATE_INIT) {\n    const currentEvent = nextEvent;\n    const isErr = isErrorActorEvent(currentEvent);\n    const transitions = selectTransitions(currentEvent, nextSnapshot);\n    if (isErr && !transitions.length) {\n      // TODO: we should likely only allow transitions selected by very explicit descriptors\n      // `*` shouldn't be matched, likely `xstate.error.*` shouldn't be either\n      // similarly `xstate.error.actor.*` and `xstate.error.actor.todo.*` have to be considered too\n      nextSnapshot = cloneMachineSnapshot(snapshot, {\n        status: 'error',\n        error: currentEvent.error\n      });\n      addMicrostate(nextSnapshot, currentEvent, []);\n      return {\n        snapshot: nextSnapshot,\n        microstates\n      };\n    }\n    nextSnapshot = microstep(transitions, snapshot, actorScope, nextEvent, false,\n    // isInitial\n    internalQueue);\n    addMicrostate(nextSnapshot, currentEvent, transitions);\n  }\n  let shouldSelectEventlessTransitions = true;\n  while (nextSnapshot.status === 'active') {\n    let enabledTransitions = shouldSelectEventlessTransitions ? selectEventlessTransitions(nextSnapshot, nextEvent) : [];\n\n    // eventless transitions should always be selected after selecting *regular* transitions\n    // by assigning `undefined` to `previousState` we ensure that `shouldSelectEventlessTransitions` gets always computed to true in such a case\n    const previousState = enabledTransitions.length ? nextSnapshot : undefined;\n    if (!enabledTransitions.length) {\n      if (!internalQueue.length) {\n        break;\n      }\n      nextEvent = internalQueue.shift();\n      enabledTransitions = selectTransitions(nextEvent, nextSnapshot);\n    }\n    nextSnapshot = microstep(enabledTransitions, nextSnapshot, actorScope, nextEvent, false, internalQueue);\n    shouldSelectEventlessTransitions = nextSnapshot !== previousState;\n    addMicrostate(nextSnapshot, nextEvent, enabledTransitions);\n  }\n  if (nextSnapshot.status !== 'active') {\n    stopChildren(nextSnapshot, nextEvent, actorScope);\n  }\n  return {\n    snapshot: nextSnapshot,\n    microstates\n  };\n}\nfunction stopChildren(nextState, event, actorScope) {\n  return resolveActionsAndContext(nextState, event, actorScope, Object.values(nextState.children).map(child => stopChild(child)), [], undefined);\n}\nfunction selectTransitions(event, nextState) {\n  return nextState.machine.getTransitionData(nextState, event);\n}\nfunction selectEventlessTransitions(nextState, event) {\n  const enabledTransitionSet = new Set();\n  const atomicStates = nextState._nodes.filter(isAtomicStateNode);\n  for (const stateNode of atomicStates) {\n    loop: for (const s of [stateNode].concat(getProperAncestors(stateNode, undefined))) {\n      if (!s.always) {\n        continue;\n      }\n      for (const transition of s.always) {\n        if (transition.guard === undefined || evaluateGuard(transition.guard, nextState.context, event, nextState)) {\n          enabledTransitionSet.add(transition);\n          break loop;\n        }\n      }\n    }\n  }\n  return removeConflictingTransitions(Array.from(enabledTransitionSet), new Set(nextState._nodes), nextState.historyValue);\n}\n\n/**\n * Resolves a partial state value with its full representation in the state\n * node's machine.\n *\n * @param stateValue The partial state value to resolve.\n */\nfunction resolveStateValue(rootNode, stateValue) {\n  const allStateNodes = getAllStateNodes(getStateNodes(rootNode, stateValue));\n  return getStateValue(rootNode, [...allStateNodes]);\n}\n\nfunction isMachineSnapshot(value) {\n  return !!value && typeof value === 'object' && 'machine' in value && 'value' in value;\n}\nconst machineSnapshotMatches = function matches(testValue) {\n  return matchesState(testValue, this.value);\n};\nconst machineSnapshotHasTag = function hasTag(tag) {\n  return this.tags.has(tag);\n};\nconst machineSnapshotCan = function can(event) {\n  if (!this.machine) {\n    console.warn(`state.can(...) used outside of a machine-created State object; this will always return false.`);\n  }\n  const transitionData = this.machine.getTransitionData(this, event);\n  return !!transitionData?.length &&\n  // Check that at least one transition is not forbidden\n  transitionData.some(t => t.target !== undefined || t.actions.length);\n};\nconst machineSnapshotToJSON = function toJSON() {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    getMeta,\n    toJSON,\n    can,\n    hasTag,\n    matches,\n    ...jsonValues\n  } = this;\n  return {\n    ...jsonValues,\n    tags: Array.from(tags)\n  };\n};\nconst machineSnapshotGetMeta = function getMeta() {\n  return this._nodes.reduce((acc, stateNode) => {\n    if (stateNode.meta !== undefined) {\n      acc[stateNode.id] = stateNode.meta;\n    }\n    return acc;\n  }, {});\n};\nfunction createMachineSnapshot(config, machine) {\n  return {\n    status: config.status,\n    output: config.output,\n    error: config.error,\n    machine,\n    context: config.context,\n    _nodes: config._nodes,\n    value: getStateValue(machine.root, config._nodes),\n    tags: new Set(config._nodes.flatMap(sn => sn.tags)),\n    children: config.children,\n    historyValue: config.historyValue || {},\n    matches: machineSnapshotMatches,\n    hasTag: machineSnapshotHasTag,\n    can: machineSnapshotCan,\n    getMeta: machineSnapshotGetMeta,\n    toJSON: machineSnapshotToJSON\n  };\n}\nfunction cloneMachineSnapshot(snapshot, config = {}) {\n  return createMachineSnapshot({\n    ...snapshot,\n    ...config\n  }, snapshot.machine);\n}\nfunction serializeHistoryValue(historyValue) {\n  if (typeof historyValue !== 'object' || historyValue === null) {\n    return {};\n  }\n  const result = {};\n  for (const key in historyValue) {\n    const value = historyValue[key];\n    if (Array.isArray(value)) {\n      result[key] = value.map(item => ({\n        id: item.id\n      }));\n    }\n  }\n  return result;\n}\nfunction getPersistedSnapshot(snapshot, options) {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    children,\n    context,\n    can,\n    hasTag,\n    matches,\n    getMeta,\n    toJSON,\n    ...jsonValues\n  } = snapshot;\n  const childrenJson = {};\n  for (const id in children) {\n    const child = children[id];\n    if (typeof child.src !== 'string' && (!options || !('__unsafeAllowInlineActors' in options))) {\n      throw new Error('An inline child actor cannot be persisted.');\n    }\n    childrenJson[id] = {\n      snapshot: child.getPersistedSnapshot(options),\n      src: child.src,\n      systemId: child._systemId,\n      syncSnapshot: child._syncSnapshot\n    };\n  }\n  const persisted = {\n    ...jsonValues,\n    context: persistContext(context),\n    children: childrenJson,\n    historyValue: serializeHistoryValue(jsonValues.historyValue)\n  };\n  return persisted;\n}\nfunction persistContext(contextPart) {\n  let copy;\n  for (const key in contextPart) {\n    const value = contextPart[key];\n    if (value && typeof value === 'object') {\n      if ('sessionId' in value && 'send' in value && 'ref' in value) {\n        copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n          ...contextPart\n        };\n        copy[key] = {\n          xstate$$type: $$ACTOR_TYPE,\n          id: value.id\n        };\n      } else {\n        const result = persistContext(value);\n        if (result !== value) {\n          copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n            ...contextPart\n          };\n          copy[key] = result;\n        }\n      }\n    }\n  }\n  return copy ?? contextPart;\n}\n\nfunction resolveRaise(_, snapshot, args, actionParams, {\n  event: eventOrExpr,\n  id,\n  delay\n}, {\n  internalQueue\n}) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Only event objects may be used with raise; use raise({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  if (typeof resolvedDelay !== 'number') {\n    internalQueue.push(resolvedEvent);\n  }\n  return [snapshot, {\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }, undefined];\n}\nfunction executeRaise(actorScope, params) {\n  const {\n    event,\n    delay,\n    id\n  } = params;\n  if (typeof delay === 'number') {\n    actorScope.defer(() => {\n      const self = actorScope.self;\n      actorScope.system.scheduler.schedule(self, self, event, delay, id);\n    });\n    return;\n  }\n}\n/**\n * Raises an event. This places the event in the internal event queue, so that\n * the event is immediately consumed by the machine in the current step.\n *\n * @param eventType The event to raise.\n */\nfunction raise(eventOrExpr, options) {\n  if (executingCustomAction) {\n    console.warn('Custom actions should not call `raise()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function raise(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  raise.type = 'xstate.raise';\n  raise.event = eventOrExpr;\n  raise.id = options?.id;\n  raise.delay = options?.delay;\n  raise.resolve = resolveRaise;\n  raise.execute = executeRaise;\n  return raise;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/raise-59549771.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/xstate/dist/xstate.development.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Actor: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.B),\n/* harmony export */   SimulatedClock: () => (/* binding */ SimulatedClock),\n/* harmony export */   SpecialTargets: () => (/* reexport safe */ _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.S),\n/* harmony export */   StateMachine: () => (/* binding */ StateMachine),\n/* harmony export */   StateNode: () => (/* binding */ StateNode),\n/* harmony export */   __unsafe_getAllOwnEventDescriptors: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.I),\n/* harmony export */   and: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.D),\n/* harmony export */   assertEvent: () => (/* binding */ assertEvent),\n/* harmony export */   assign: () => (/* reexport safe */ _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.a),\n/* harmony export */   cancel: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.M),\n/* harmony export */   createActor: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A),\n/* harmony export */   createEmptyActor: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyActor),\n/* harmony export */   createMachine: () => (/* binding */ createMachine),\n/* harmony export */   emit: () => (/* reexport safe */ _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.e),\n/* harmony export */   enqueueActions: () => (/* reexport safe */ _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.b),\n/* harmony export */   forwardTo: () => (/* reexport safe */ _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.f),\n/* harmony export */   fromCallback: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromCallback),\n/* harmony export */   fromEventObservable: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromEventObservable),\n/* harmony export */   fromObservable: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromObservable),\n/* harmony export */   fromPromise: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromPromise),\n/* harmony export */   fromTransition: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromTransition),\n/* harmony export */   getInitialSnapshot: () => (/* binding */ getInitialSnapshot),\n/* harmony export */   getNextSnapshot: () => (/* binding */ getNextSnapshot),\n/* harmony export */   getStateNodes: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j),\n/* harmony export */   initialTransition: () => (/* binding */ initialTransition),\n/* harmony export */   interpret: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.C),\n/* harmony export */   isMachineSnapshot: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.H),\n/* harmony export */   log: () => (/* reexport safe */ _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.l),\n/* harmony export */   matchesState: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.J),\n/* harmony export */   not: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.E),\n/* harmony export */   or: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.F),\n/* harmony export */   pathToStateValue: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.K),\n/* harmony export */   raise: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.O),\n/* harmony export */   sendParent: () => (/* reexport safe */ _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.s),\n/* harmony export */   sendTo: () => (/* reexport safe */ _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.c),\n/* harmony export */   setup: () => (/* binding */ setup),\n/* harmony export */   spawnChild: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.P),\n/* harmony export */   stateIn: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.G),\n/* harmony export */   stop: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.Q),\n/* harmony export */   stopChild: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.R),\n/* harmony export */   toObserver: () => (/* reexport safe */ _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.L),\n/* harmony export */   toPromise: () => (/* binding */ toPromise),\n/* harmony export */   transition: () => (/* binding */ transition),\n/* harmony export */   waitFor: () => (/* binding */ waitFor)\n/* harmony export */ });\n/* harmony import */ var _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actors/dist/xstate-actors.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./raise-59549771.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-59549771.development.esm.js\");\n/* harmony import */ var _log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./log-5a7b5528.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/log-5a7b5528.development.esm.js\");\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\n\n\n\n\n\n/**\n * Asserts that the given event object is of the specified type or types. Throws\n * an error if the event object is not of the specified types.\n *\n * @example\n *\n * ```ts\n * // ...\n * entry: ({ event }) => {\n *   assertEvent(event, 'doNothing');\n *   // event is { type: 'doNothing' }\n * },\n * // ...\n * exit: ({ event }) => {\n *   assertEvent(event, 'greet');\n *   // event is { type: 'greet'; message: string }\n *\n *   assertEvent(event, ['greet', 'notify']);\n *   // event is { type: 'greet'; message: string }\n *   // or { type: 'notify'; message: string; level: 'info' | 'error' }\n * },\n * ```\n */\nfunction assertEvent(event, type) {\n  const types = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(type);\n  if (!types.includes(event.type)) {\n    const typesText = types.length === 1 ? `type \"${types[0]}\"` : `one of types \"${types.join('\", \"')}\"`;\n    throw new Error(`Expected event ${JSON.stringify(event)} to have ${typesText}`);\n  }\n}\n\nconst cache = new WeakMap();\nfunction memo(object, key, fn) {\n  let memoizedData = cache.get(object);\n  if (!memoizedData) {\n    memoizedData = {\n      [key]: fn()\n    };\n    cache.set(object, memoizedData);\n  } else if (!(key in memoizedData)) {\n    memoizedData[key] = fn();\n  }\n  return memoizedData[key];\n}\n\nconst EMPTY_OBJECT = {};\nconst toSerializableAction = action => {\n  if (typeof action === 'string') {\n    return {\n      type: action\n    };\n  }\n  if (typeof action === 'function') {\n    if ('resolve' in action) {\n      return {\n        type: action.type\n      };\n    }\n    return {\n      type: action.name\n    };\n  }\n  return action;\n};\nclass StateNode {\n  constructor(/** The raw config used to create the machine. */\n  config, options) {\n    this.config = config;\n    /**\n     * The relative key of the state node, which represents its location in the\n     * overall state value.\n     */\n    this.key = void 0;\n    /** The unique ID of the state node. */\n    this.id = void 0;\n    /**\n     * The type of this state node:\n     *\n     * - `'atomic'` - no child state nodes\n     * - `'compound'` - nested child state nodes (XOR)\n     * - `'parallel'` - orthogonal nested child state nodes (AND)\n     * - `'history'` - history state node\n     * - `'final'` - final state node\n     */\n    this.type = void 0;\n    /** The string path from the root machine node to this node. */\n    this.path = void 0;\n    /** The child state nodes. */\n    this.states = void 0;\n    /**\n     * The type of history on this state node. Can be:\n     *\n     * - `'shallow'` - recalls only top-level historical state value\n     * - `'deep'` - recalls historical state value at all levels\n     */\n    this.history = void 0;\n    /** The action(s) to be executed upon entering the state node. */\n    this.entry = void 0;\n    /** The action(s) to be executed upon exiting the state node. */\n    this.exit = void 0;\n    /** The parent state node. */\n    this.parent = void 0;\n    /** The root machine node. */\n    this.machine = void 0;\n    /**\n     * The meta data associated with this state node, which will be returned in\n     * State instances.\n     */\n    this.meta = void 0;\n    /**\n     * The output data sent with the \"xstate.done.state._id_\" event if this is a\n     * final state node.\n     */\n    this.output = void 0;\n    /**\n     * The order this state node appears. Corresponds to the implicit document\n     * order.\n     */\n    this.order = -1;\n    this.description = void 0;\n    this.tags = [];\n    this.transitions = void 0;\n    this.always = void 0;\n    this.parent = options._parent;\n    this.key = options._key;\n    this.machine = options._machine;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.id = this.config.id || [this.machine.id, ...this.path].join(_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.S);\n    this.type = this.config.type || (this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.description = this.config.description;\n    this.order = this.machine.idMap.size;\n    this.machine.idMap.set(this.id, this);\n    this.states = this.config.states ? (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.m)(this.config.states, (stateConfig, key) => {\n      const stateNode = new StateNode(stateConfig, {\n        _parent: this,\n        _key: key,\n        _machine: this.machine\n      });\n      return stateNode;\n    }) : EMPTY_OBJECT;\n    if (this.type === 'compound' && !this.config.initial) {\n      throw new Error(`No initial state specified for compound state node \"#${this.id}\". Try adding { initial: \"${Object.keys(this.states)[0]}\" } to the state config.`);\n    }\n\n    // History config\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this.entry = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.entry).slice();\n    this.exit = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.exit).slice();\n    this.meta = this.config.meta;\n    this.output = this.type === 'final' || !this.parent ? this.config.output : undefined;\n    this.tags = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(config.tags).slice();\n  }\n\n  /** @internal */\n  _initialize() {\n    this.transitions = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(this);\n    if (this.config.always) {\n      this.always = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.a)(this.config.always).map(t => (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.b)(this, _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.N, t));\n    }\n    Object.keys(this.states).forEach(key => {\n      this.states[key]._initialize();\n    });\n  }\n\n  /** The well-structured state node definition. */\n  get definition() {\n    return {\n      id: this.id,\n      key: this.key,\n      version: this.machine.version,\n      type: this.type,\n      initial: this.initial ? {\n        target: this.initial.target,\n        source: this,\n        actions: this.initial.actions.map(toSerializableAction),\n        eventType: null,\n        reenter: false,\n        toJSON: () => ({\n          target: this.initial.target.map(t => `#${t.id}`),\n          source: `#${this.id}`,\n          actions: this.initial.actions.map(toSerializableAction),\n          eventType: null\n        })\n      } : undefined,\n      history: this.history,\n      states: (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.m)(this.states, state => {\n        return state.definition;\n      }),\n      on: this.on,\n      transitions: [...this.transitions.values()].flat().map(t => ({\n        ...t,\n        actions: t.actions.map(toSerializableAction)\n      })),\n      entry: this.entry.map(toSerializableAction),\n      exit: this.exit.map(toSerializableAction),\n      meta: this.meta,\n      order: this.order || -1,\n      output: this.output,\n      invoke: this.invoke,\n      description: this.description,\n      tags: this.tags\n    };\n  }\n\n  /** @internal */\n  toJSON() {\n    return this.definition;\n  }\n\n  /** The logic invoked as actors by this state node. */\n  get invoke() {\n    return memo(this, 'invoke', () => (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.invoke).map((invokeConfig, i) => {\n      const {\n        src,\n        systemId\n      } = invokeConfig;\n      const resolvedId = invokeConfig.id ?? (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.id, i);\n      const sourceName = typeof src === 'string' ? src : `xstate.invoke.${(0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.id, i)}`;\n      return {\n        ...invokeConfig,\n        src: sourceName,\n        id: resolvedId,\n        systemId: systemId,\n        toJSON() {\n          const {\n            onDone,\n            onError,\n            ...invokeDefValues\n          } = invokeConfig;\n          return {\n            ...invokeDefValues,\n            type: 'xstate.invoke',\n            src: sourceName,\n            id: resolvedId\n          };\n        }\n      };\n    }));\n  }\n\n  /** The mapping of events to transitions. */\n  get on() {\n    return memo(this, 'on', () => {\n      const transitions = this.transitions;\n      return [...transitions].flatMap(([descriptor, t]) => t.map(t => [descriptor, t])).reduce((map, [descriptor, transition]) => {\n        map[descriptor] = map[descriptor] || [];\n        map[descriptor].push(transition);\n        return map;\n      }, {});\n    });\n  }\n  get after() {\n    return memo(this, 'delayedTransitions', () => (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.g)(this));\n  }\n  get initial() {\n    return memo(this, 'initial', () => (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, this.config.initial));\n  }\n\n  /** @internal */\n  next(snapshot, event) {\n    const eventType = event.type;\n    const actions = [];\n    let selectedTransition;\n    const candidates = memo(this, `candidates-${eventType}`, () => (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.h)(this, eventType));\n    for (const candidate of candidates) {\n      const {\n        guard\n      } = candidate;\n      const resolvedContext = snapshot.context;\n      let guardPassed = false;\n      try {\n        guardPassed = !guard || (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.e)(guard, resolvedContext, event, snapshot);\n      } catch (err) {\n        const guardType = typeof guard === 'string' ? guard : typeof guard === 'object' ? guard.type : undefined;\n        throw new Error(`Unable to evaluate guard ${guardType ? `'${guardType}' ` : ''}in transition for event '${eventType}' in state node '${this.id}':\\n${err.message}`);\n      }\n      if (guardPassed) {\n        actions.push(...candidate.actions);\n        selectedTransition = candidate;\n        break;\n      }\n    }\n    return selectedTransition ? [selectedTransition] : undefined;\n  }\n\n  /** All the event types accepted by this state node and its descendants. */\n  get events() {\n    return memo(this, 'events', () => {\n      const {\n        states\n      } = this;\n      const events = new Set(this.ownEvents);\n      if (states) {\n        for (const stateId of Object.keys(states)) {\n          const state = states[stateId];\n          if (state.states) {\n            for (const event of state.events) {\n              events.add(`${event}`);\n            }\n          }\n        }\n      }\n      return Array.from(events);\n    });\n  }\n\n  /**\n   * All the events that have transitions directly from this state node.\n   *\n   * Excludes any inert events.\n   */\n  get ownEvents() {\n    const events = new Set([...this.transitions.keys()].filter(descriptor => {\n      return this.transitions.get(descriptor).some(transition => !(!transition.target && !transition.actions.length && !transition.reenter));\n    }));\n    return Array.from(events);\n  }\n}\n\nconst STATE_IDENTIFIER = '#';\nclass StateMachine {\n  constructor(/** The raw config used to create the machine. */\n  config, implementations) {\n    this.config = config;\n    /** The machine's own version. */\n    this.version = void 0;\n    this.schemas = void 0;\n    this.implementations = void 0;\n    /** @internal */\n    this.__xstatenode = true;\n    /** @internal */\n    this.idMap = new Map();\n    this.root = void 0;\n    this.id = void 0;\n    this.states = void 0;\n    this.events = void 0;\n    this.id = config.id || '(machine)';\n    this.implementations = {\n      actors: implementations?.actors ?? {},\n      actions: implementations?.actions ?? {},\n      delays: implementations?.delays ?? {},\n      guards: implementations?.guards ?? {}\n    };\n    this.version = this.config.version;\n    this.schemas = this.config.schemas;\n    this.transition = this.transition.bind(this);\n    this.getInitialSnapshot = this.getInitialSnapshot.bind(this);\n    this.getPersistedSnapshot = this.getPersistedSnapshot.bind(this);\n    this.restoreSnapshot = this.restoreSnapshot.bind(this);\n    this.start = this.start.bind(this);\n    this.root = new StateNode(config, {\n      _key: this.id,\n      _machine: this\n    });\n    this.root._initialize();\n    this.states = this.root.states; // TODO: remove!\n    this.events = this.root.events;\n    if (!('output' in this.root) && Object.values(this.states).some(state => state.type === 'final' && 'output' in state)) {\n      console.warn('Missing `machine.output` declaration (top-level final state with output detected)');\n    }\n  }\n\n  /**\n   * Clones this state machine with the provided implementations.\n   *\n   * @param implementations Options (`actions`, `guards`, `actors`, `delays`)\n   *   to recursively merge with the existing options.\n   * @returns A new `StateMachine` instance with the provided implementations.\n   */\n  provide(implementations) {\n    const {\n      actions,\n      guards,\n      actors,\n      delays\n    } = this.implementations;\n    return new StateMachine(this.config, {\n      actions: {\n        ...actions,\n        ...implementations.actions\n      },\n      guards: {\n        ...guards,\n        ...implementations.guards\n      },\n      actors: {\n        ...actors,\n        ...implementations.actors\n      },\n      delays: {\n        ...delays,\n        ...implementations.delays\n      }\n    });\n  }\n  resolveState(config) {\n    const resolvedStateValue = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.r)(this.root, config.value);\n    const nodeSet = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.i)((0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j)(this.root, resolvedStateValue));\n    return (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      _nodes: [...nodeSet],\n      context: config.context || {},\n      children: {},\n      status: (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.l)(nodeSet, this.root) ? 'done' : config.status || 'active',\n      output: config.output,\n      error: config.error,\n      historyValue: config.historyValue\n    }, this);\n  }\n\n  /**\n   * Determines the next snapshot given the current `snapshot` and received\n   * `event`. Calculates a full macrostep from all microsteps.\n   *\n   * @param snapshot The current snapshot\n   * @param event The received event\n   */\n  transition(snapshot, event, actorScope) {\n    return (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(snapshot, event, actorScope, []).snapshot;\n  }\n\n  /**\n   * Determines the next state given the current `state` and `event`. Calculates\n   * a microstep.\n   *\n   * @param state The current state\n   * @param event The received event\n   */\n  microstep(snapshot, event, actorScope) {\n    return (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(snapshot, event, actorScope, []).microstates;\n  }\n  getTransitionData(snapshot, event) {\n    return (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.o)(this.root, snapshot.value, snapshot, event) || [];\n  }\n\n  /**\n   * The initial state _before_ evaluating any microsteps. This \"pre-initial\"\n   * state is provided to initial actions executed in the initial state.\n   */\n  getPreInitialState(actorScope, initEvent, internalQueue) {\n    const {\n      context\n    } = this.config;\n    const preInitial = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      context: typeof context !== 'function' && context ? context : {},\n      _nodes: [this.root],\n      children: {},\n      status: 'active'\n    }, this);\n    if (typeof context === 'function') {\n      const assignment = ({\n        spawn,\n        event,\n        self\n      }) => context({\n        spawn,\n        input: event.input,\n        self\n      });\n      return (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.p)(preInitial, initEvent, actorScope, [(0,_log_5a7b5528_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.a)(assignment)], internalQueue, undefined);\n    }\n    return preInitial;\n  }\n\n  /**\n   * Returns the initial `State` instance, with reference to `self` as an\n   * `ActorRef`.\n   */\n  getInitialSnapshot(actorScope, input) {\n    const initEvent = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.q)(input); // TODO: fix;\n    const internalQueue = [];\n    const preInitialState = this.getPreInitialState(actorScope, initEvent, internalQueue);\n    const nextState = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.s)([{\n      target: [...(0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.u)(this.root)],\n      source: this.root,\n      reenter: true,\n      actions: [],\n      eventType: null,\n      toJSON: null // TODO: fix\n    }], preInitialState, actorScope, initEvent, true, internalQueue);\n    const {\n      snapshot: macroState\n    } = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(nextState, initEvent, actorScope, internalQueue);\n    return macroState;\n  }\n  start(snapshot) {\n    Object.values(snapshot.children).forEach(child => {\n      if (child.getSnapshot().status === 'active') {\n        child.start();\n      }\n    });\n  }\n  getStateNodeById(stateId) {\n    const fullPath = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.v)(stateId);\n    const relativePath = fullPath.slice(1);\n    const resolvedStateId = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.w)(fullPath[0]) ? fullPath[0].slice(STATE_IDENTIFIER.length) : fullPath[0];\n    const stateNode = this.idMap.get(resolvedStateId);\n    if (!stateNode) {\n      throw new Error(`Child state node '#${resolvedStateId}' does not exist on machine '${this.id}'`);\n    }\n    return (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.x)(stateNode, relativePath);\n  }\n  get definition() {\n    return this.root.definition;\n  }\n  toJSON() {\n    return this.definition;\n  }\n  getPersistedSnapshot(snapshot, options) {\n    return (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.y)(snapshot, options);\n  }\n  restoreSnapshot(snapshot, _actorScope) {\n    const children = {};\n    const snapshotChildren = snapshot.children;\n    Object.keys(snapshotChildren).forEach(actorId => {\n      const actorData = snapshotChildren[actorId];\n      const childState = actorData.snapshot;\n      const src = actorData.src;\n      const logic = typeof src === 'string' ? (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.z)(this, src) : src;\n      if (!logic) {\n        return;\n      }\n      const actorRef = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(logic, {\n        id: actorId,\n        parent: _actorScope.self,\n        syncSnapshot: actorData.syncSnapshot,\n        snapshot: childState,\n        src,\n        systemId: actorData.systemId\n      });\n      children[actorId] = actorRef;\n    });\n    function resolveHistoryReferencedState(root, referenced) {\n      if (referenced instanceof StateNode) {\n        return referenced;\n      }\n      try {\n        return root.machine.getStateNodeById(referenced.id);\n      } catch {\n        {\n          console.warn(`Could not resolve StateNode for id: ${referenced.id}`);\n        }\n      }\n    }\n    function reviveHistoryValue(root, historyValue) {\n      if (!historyValue || typeof historyValue !== 'object') {\n        return {};\n      }\n      const revived = {};\n      for (const key in historyValue) {\n        const arr = historyValue[key];\n        for (const item of arr) {\n          const resolved = resolveHistoryReferencedState(root, item);\n          if (!resolved) {\n            continue;\n          }\n          revived[key] ??= [];\n          revived[key].push(resolved);\n        }\n      }\n      return revived;\n    }\n    const revivedHistoryValue = reviveHistoryValue(this.root, snapshot.historyValue);\n    const restoredSnapshot = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      ...snapshot,\n      children,\n      _nodes: Array.from((0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.i)((0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j)(this.root, snapshot.value))),\n      historyValue: revivedHistoryValue\n    }, this);\n    const seen = new Set();\n    function reviveContext(contextPart, children) {\n      if (seen.has(contextPart)) {\n        return;\n      }\n      seen.add(contextPart);\n      for (const key in contextPart) {\n        const value = contextPart[key];\n        if (value && typeof value === 'object') {\n          if ('xstate$$type' in value && value.xstate$$type === _raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.$) {\n            contextPart[key] = children[value.id];\n            continue;\n          }\n          reviveContext(value, children);\n        }\n      }\n    }\n    reviveContext(restoredSnapshot.context, children);\n    return restoredSnapshot;\n  }\n}\n\n/**\n * Creates a state machine (statechart) with the given configuration.\n *\n * The state machine represents the pure logic of a state machine actor.\n *\n * @example\n *\n * ```ts\n * import { createMachine } from 'xstate';\n *\n * const lightMachine = createMachine({\n *   id: 'light',\n *   initial: 'green',\n *   states: {\n *     green: {\n *       on: {\n *         TIMER: { target: 'yellow' }\n *       }\n *     },\n *     yellow: {\n *       on: {\n *         TIMER: { target: 'red' }\n *       }\n *     },\n *     red: {\n *       on: {\n *         TIMER: { target: 'green' }\n *       }\n *     }\n *   }\n * });\n *\n * const lightActor = createActor(lightMachine);\n * lightActor.start();\n *\n * lightActor.send({ type: 'TIMER' });\n * ```\n *\n * @param config The state machine configuration.\n * @param options DEPRECATED: use `setup({ ... })` or `machine.provide({ ... })`\n *   to provide machine implementations instead.\n */\nfunction createMachine(config, implementations) {\n  return new StateMachine(config, implementations);\n}\n\n/** @internal */\nfunction createInertActorScope(actorLogic) {\n  const self = (0,_raise_59549771_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(actorLogic);\n  const inertActorScope = {\n    self,\n    defer: () => {},\n    id: '',\n    logger: () => {},\n    sessionId: '',\n    stopChild: () => {},\n    system: self.system,\n    emit: () => {},\n    actionExecutor: () => {}\n  };\n  return inertActorScope;\n}\n\n/** @deprecated Use `initialTransition(…)` instead. */\nfunction getInitialSnapshot(actorLogic, ...[input]) {\n  const actorScope = createInertActorScope(actorLogic);\n  return actorLogic.getInitialSnapshot(actorScope, input);\n}\n\n/**\n * Determines the next snapshot for the given `actorLogic` based on the given\n * `snapshot` and `event`.\n *\n * If the `snapshot` is `undefined`, the initial snapshot of the `actorLogic` is\n * used.\n *\n * @deprecated Use `transition(…)` instead.\n * @example\n *\n * ```ts\n * import { getNextSnapshot } from 'xstate';\n * import { trafficLightMachine } from './trafficLightMachine.ts';\n *\n * const nextSnapshot = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   undefined, // snapshot (or initial state if undefined)\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot.value);\n * // => 'yellow'\n *\n * const nextSnapshot2 = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   nextSnapshot, // snapshot\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot2.value);\n * // =>'red'\n * ```\n */\nfunction getNextSnapshot(actorLogic, snapshot, event) {\n  const inertActorScope = createInertActorScope(actorLogic);\n  inertActorScope.self._snapshot = snapshot;\n  return actorLogic.transition(snapshot, event, inertActorScope);\n}\n\n// at the moment we allow extra actors - ones that are not specified by `children`\n// this could be reconsidered in the future\n\nfunction setup({\n  schemas,\n  actors,\n  actions,\n  guards,\n  delays\n}) {\n  return {\n    createMachine: config => createMachine({\n      ...config,\n      schemas\n    }, {\n      actors,\n      actions,\n      guards,\n      delays\n    })\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nclass SimulatedClock {\n  constructor() {\n    this.timeouts = new Map();\n    this._now = 0;\n    this._id = 0;\n    this._flushing = false;\n    this._flushingInvalidated = false;\n  }\n  now() {\n    return this._now;\n  }\n  getId() {\n    return this._id++;\n  }\n  setTimeout(fn, timeout) {\n    this._flushingInvalidated = this._flushing;\n    const id = this.getId();\n    this.timeouts.set(id, {\n      start: this.now(),\n      timeout,\n      fn\n    });\n    return id;\n  }\n  clearTimeout(id) {\n    this._flushingInvalidated = this._flushing;\n    this.timeouts.delete(id);\n  }\n  set(time) {\n    if (this._now > time) {\n      throw new Error('Unable to travel back in time');\n    }\n    this._now = time;\n    this.flushTimeouts();\n  }\n  flushTimeouts() {\n    if (this._flushing) {\n      this._flushingInvalidated = true;\n      return;\n    }\n    this._flushing = true;\n    const sorted = [...this.timeouts].sort(([_idA, timeoutA], [_idB, timeoutB]) => {\n      const endA = timeoutA.start + timeoutA.timeout;\n      const endB = timeoutB.start + timeoutB.timeout;\n      return endB > endA ? -1 : 1;\n    });\n    for (const [id, timeout] of sorted) {\n      if (this._flushingInvalidated) {\n        this._flushingInvalidated = false;\n        this._flushing = false;\n        this.flushTimeouts();\n        return;\n      }\n      if (this.now() - timeout.start >= timeout.timeout) {\n        this.timeouts.delete(id);\n        timeout.fn.call(null);\n      }\n    }\n    this._flushing = false;\n  }\n  increment(ms) {\n    this._now += ms;\n    this.flushTimeouts();\n  }\n}\n\n/**\n * Returns a promise that resolves to the `output` of the actor when it is done.\n *\n * @example\n *\n * ```ts\n * const machine = createMachine({\n *   // ...\n *   output: {\n *     count: 42\n *   }\n * });\n *\n * const actor = createActor(machine);\n *\n * actor.start();\n *\n * const output = await toPromise(actor);\n *\n * console.log(output);\n * // logs { count: 42 }\n * ```\n */\nfunction toPromise(actor) {\n  return new Promise((resolve, reject) => {\n    actor.subscribe({\n      complete: () => {\n        resolve(actor.getSnapshot().output);\n      },\n      error: reject\n    });\n  });\n}\n\n/**\n * Given actor `logic`, a `snapshot`, and an `event`, returns a tuple of the\n * `nextSnapshot` and `actions` to execute.\n *\n * This is a pure function that does not execute `actions`.\n */\nfunction transition(logic, snapshot, event) {\n  const executableActions = [];\n  const actorScope = createInertActorScope(logic);\n  actorScope.actionExecutor = action => {\n    executableActions.push(action);\n  };\n  const nextSnapshot = logic.transition(snapshot, event, actorScope);\n  return [nextSnapshot, executableActions];\n}\n\n/**\n * Given actor `logic` and optional `input`, returns a tuple of the\n * `nextSnapshot` and `actions` to execute from the initial transition (no\n * previous state).\n *\n * This is a pure function that does not execute `actions`.\n */\nfunction initialTransition(logic, ...[input]) {\n  const executableActions = [];\n  const actorScope = createInertActorScope(logic);\n  actorScope.actionExecutor = action => {\n    executableActions.push(action);\n  };\n  const nextSnapshot = logic.getInitialSnapshot(actorScope, input);\n  return [nextSnapshot, executableActions];\n}\n\nconst defaultWaitForOptions = {\n  timeout: Infinity // much more than 10 seconds\n};\n\n/**\n * Subscribes to an actor ref and waits for its emitted value to satisfy a\n * predicate, and then resolves with that value. Will throw if the desired state\n * is not reached after an optional timeout. (defaults to Infinity).\n *\n * @example\n *\n * ```js\n * const state = await waitFor(someService, (state) => {\n *   return state.hasTag('loaded');\n * });\n *\n * state.hasTag('loaded'); // true\n * ```\n *\n * @param actorRef The actor ref to subscribe to\n * @param predicate Determines if a value matches the condition to wait for\n * @param options\n * @returns A promise that eventually resolves to the emitted value that matches\n *   the condition\n */\nfunction waitFor(actorRef, predicate, options) {\n  const resolvedOptions = {\n    ...defaultWaitForOptions,\n    ...options\n  };\n  return new Promise((res, rej) => {\n    const {\n      signal\n    } = resolvedOptions;\n    if (signal?.aborted) {\n      // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n      rej(signal.reason);\n      return;\n    }\n    let done = false;\n    if (resolvedOptions.timeout < 0) {\n      console.error('`timeout` passed to `waitFor` is negative and it will reject its internal promise immediately.');\n    }\n    const handle = resolvedOptions.timeout === Infinity ? undefined : setTimeout(() => {\n      dispose();\n      rej(new Error(`Timeout of ${resolvedOptions.timeout} ms exceeded`));\n    }, resolvedOptions.timeout);\n    const dispose = () => {\n      clearTimeout(handle);\n      done = true;\n      sub?.unsubscribe();\n      if (abortListener) {\n        signal.removeEventListener('abort', abortListener);\n      }\n    };\n    function checkEmitted(emitted) {\n      if (predicate(emitted)) {\n        dispose();\n        res(emitted);\n      }\n    }\n\n    /**\n     * If the `signal` option is provided, this will be the listener for its\n     * `abort` event\n     */\n    let abortListener;\n    // eslint-disable-next-line prefer-const\n    let sub; // avoid TDZ when disposing synchronously\n\n    // See if the current snapshot already matches the predicate\n    checkEmitted(actorRef.getSnapshot());\n    if (done) {\n      return;\n    }\n\n    // only define the `abortListener` if the `signal` option is provided\n    if (signal) {\n      abortListener = () => {\n        dispose();\n        // XState does not \"own\" the signal, so we should reject with its reason (if any)\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        rej(signal.reason);\n      };\n      signal.addEventListener('abort', abortListener);\n    }\n    sub = actorRef.subscribe({\n      next: checkEmitted,\n      error: err => {\n        dispose();\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        rej(err);\n      },\n      complete: () => {\n        dispose();\n        rej(new Error(`Actor terminated without satisfying predicate`));\n      }\n    });\n    if (done) {\n      sub.unsubscribe();\n    }\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/sign-up/[[...sign-up]]/page.tsx":
/*!*************************************************!*\
  !*** ./src/app/sign-up/[[...sign-up]]/page.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SignUpPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/elements/sign-up */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/chunk-VY37G23G.mjs\");\n/* harmony import */ var _clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/elements/sign-up */ \"(app-pages-browser)/./node_modules/@clerk/elements/dist/react/sign-up/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nfunction SignUpPage() {\n    _s();\n    const [identifier, setIdentifier] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [password, setPassword] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [confirmPassword, setConfirmPassword] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [passwordError, setPasswordError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col font-outfit items-center justify-center min-h-screen bg-gradient-to-b from-red-900 via-purple-900 to-blue-900 text-white px-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                src: \"/vys_logo.png\",\n                alt: \"vys logo\",\n                className: \"w-logo mt-1 mb-8\"\n            }, void 0, false, {\n                fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"text-2xl font-extrabold text-center mt-4 mb-6\",\n                children: \"CREATE ACCOUNT\"\n            }, void 0, false, {\n                fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-[#3f2d4f] p-6 rounded-2xl shadow-lg w-full max-w-[22rem]\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_3__.Root, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.SignUpStep, {\n                            name: \"start\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-col gap-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                                            name: \"emailAddress\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Label, {\n                                                    className: \"block text-lg font-extrabold mb-2\",\n                                                    children: \"email:\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 25,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Input, {\n                                                    className: \"w-full p-1.5 rounded-xl text-white\",\n                                                    style: {\n                                                        backgroundColor: \"rgba(158, 203, 255, 0.2)\"\n                                                    },\n                                                    onChange: (e)=>setIdentifier(e.target.value)\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 28,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.FieldError, {\n                                                    className: \"text-xl text-red-400 mt-2\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 35,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 24,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                                            name: \"password\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Label, {\n                                                    className: \"block text-lg font-extrabold mb-2\",\n                                                    children: \"password:\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 39,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Input, {\n                                                    type: \"password\",\n                                                    className: \"w-full p-1.5 rounded-xl text-white\",\n                                                    style: {\n                                                        backgroundColor: \"rgba(158, 203, 255, 0.2)\"\n                                                    },\n                                                    onChange: (e)=>setPassword(e.target.value)\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 42,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.FieldError, {\n                                                    className: \"text-xl text-red-400 mt-2\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 48,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 38,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                                            name: \"confirmPassword\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Label, {\n                                                    className: \"block text-lg font-extrabold mb-2\",\n                                                    children: \"confirm password:\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 52,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Input, {\n                                                    type: \"password\",\n                                                    className: \"w-full p-1.5 rounded-xl text-white\",\n                                                    style: {\n                                                        backgroundColor: \"rgba(158, 203, 255, 0.2)\"\n                                                    },\n                                                    onChange: (e)=>setConfirmPassword(e.target.value)\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 55,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.FieldError, {\n                                                    className: \"text-xl text-red-400 mt-2\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 61,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 51,\n                                            columnNumber: 15\n                                        }, this),\n                                        passwordError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-sm text-red-400 -mt-2\",\n                                            children: passwordError\n                                        }, void 0, false, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 65,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            id: \"clerk-captcha\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 68,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_3__.Action, {\n                                            submit: true,\n                                            className: \"w-full bg-purple-500 hover:bg-purple-600 text-white font-extrabold py-2 rounded-xl\",\n                                            onClick: (e)=>{\n                                                if (password !== confirmPassword) {\n                                                    e.preventDefault();\n                                                    setPasswordError('Passwords do not match');\n                                                } else {\n                                                    setPasswordError('');\n                                                }\n                                            },\n                                            children: \"CONTINUE\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 70,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-center text-md font-extrabold text-gray-300\",\n                                            children: \"or\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 85,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex flex-row justify-center gap-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Connection, {\n                                                    name: \"google\",\n                                                    className: \"w-[3rem] h-[3rem] bg-white rounded-md flex items-center justify-center\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        src: \"/google-icon.svg\",\n                                                        alt: \"Google\",\n                                                        className: \"w-10 h-10\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                        lineNumber: 92,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 88,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Connection, {\n                                                    name: \"github\",\n                                                    className: \"w-[3rem] h-[3rem] bg-gray-800 rounded-md flex items-center justify-center\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        src: \"/github-icon.svg\",\n                                                        alt: \"GitHub\",\n                                                        className: \"w-10 h-10 invert\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                        lineNumber: 99,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 95,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Connection, {\n                                                    name: \"microsoft\",\n                                                    className: \"w-[3rem] h-[3rem] bg-gray-800 rounded-md flex items-center justify-center\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        src: \"/microsoft-icon.svg\",\n                                                        alt: \"Microsoft\",\n                                                        className: \"w-10 h-10\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                        lineNumber: 106,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 102,\n                                                    columnNumber: 17\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Connection, {\n                                                    name: \"facebook\",\n                                                    className: \"w-[3rem] h-[3rem] bg-gray-800 rounded-md flex items-center justify-center\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                        src: \"/facebook-icon.svg\",\n                                                        alt: \"Facebook\",\n                                                        className: \"w-10 h-10\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                        lineNumber: 113,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 109,\n                                                    columnNumber: 17\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 87,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                    lineNumber: 23,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"font-bold text-sm mt-6 text-gray-300 text-center\",\n                                    children: [\n                                        \"Already have an account?\",\n                                        ' ',\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                            href: \"/sign-in\",\n                                            className: \"text-purple-400 font-extrabold\",\n                                            children: \"SIGN-IN\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 120,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                    lineNumber: 118,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                            lineNumber: 22,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.SignUpStep, {\n                            name: \"verifications\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.SignUpStrategy, {\n                                name: \"email_code\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex flex-col items-center text-gray-200 gap-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            className: \"text-xl font-extrabold text-center mb-2\",\n                                            children: \"Verify your email\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 129,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-center text-sm\",\n                                            children: [\n                                                \"We've sent a code to \",\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"font-semibold\",\n                                                    children: identifier\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 131,\n                                                    columnNumber: 40\n                                                }, this),\n                                                \".\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 130,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Field, {\n                                            name: \"code\",\n                                            className: \"w-full\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Label, {\n                                                    className: \"block text-sm font-extrabold mb-2\",\n                                                    children: \"Email code:\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 135,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.Input, {\n                                                    className: \"w-full p-1.5 rounded-xl text-white\",\n                                                    style: {\n                                                        backgroundColor: \"rgba(158, 203, 255, 0.2)\"\n                                                    }\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 138,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_4__.FieldError, {\n                                                    className: \"text-xl text-red-400 mt-2\"\n                                                }, void 0, false, {\n                                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                                    lineNumber: 142,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 134,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_clerk_elements_sign_up__WEBPACK_IMPORTED_MODULE_3__.Action, {\n                                            submit: true,\n                                            className: \"w-full bg-purple-500 hover:bg-purple-600 text-white font-semibold py-2 rounded-xl\",\n                                            children: \"Continue\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                            lineNumber: 145,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                    lineNumber: 128,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                                lineNumber: 127,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                            lineNumber: 126,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                    lineNumber: 21,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/empty/Code/VYS/vys-app/src/app/sign-up/[[...sign-up]]/page.tsx\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, this);\n}\n_s(SignUpPage, \"ybnDPoqMAkGKovnaQVzwWiOW+Nc=\");\n_c = SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/sign-up/[[...sign-up]]/page.tsx\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fempty%2FCode%2FVYS%2Fvys-app%2Fsrc%2Fapp%2Fsign-up%2F%5B%5B...sign-up%5D%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);